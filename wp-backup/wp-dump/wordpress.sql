-- MySQL dump 10.13  Distrib 5.7.29, for Linux (x86_64)
--
-- Host: localhost    Database: wordpress
-- ------------------------------------------------------
-- Server version	5.7.29-0ubuntu0.18.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `wp_commentmeta`
--

DROP TABLE IF EXISTS `wp_commentmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_commentmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_520_ci,
  PRIMARY KEY (`meta_id`),
  KEY `comment_id` (`comment_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB AUTO_INCREMENT=1103 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_commentmeta`
--

LOCK TABLES `wp_commentmeta` WRITE;
/*!40000 ALTER TABLE `wp_commentmeta` DISABLE KEYS */;
INSERT INTO `wp_commentmeta` VALUES (1033,560,'_wp_trash_meta_status','0'),(1034,560,'_wp_trash_meta_time','1584646577'),(1035,559,'_wp_trash_meta_status','0'),(1036,559,'_wp_trash_meta_time','1584646586'),(1037,558,'_wp_trash_meta_status','0'),(1038,558,'_wp_trash_meta_time','1584646587'),(1039,557,'_wp_trash_meta_status','0'),(1040,557,'_wp_trash_meta_time','1584646589'),(1041,556,'_wp_trash_meta_status','0'),(1042,556,'_wp_trash_meta_time','1584646591'),(1043,555,'_wp_trash_meta_status','0'),(1044,555,'_wp_trash_meta_time','1584646597'),(1045,554,'_wp_trash_meta_status','0'),(1046,554,'_wp_trash_meta_time','1584646598'),(1047,553,'_wp_trash_meta_status','0'),(1048,553,'_wp_trash_meta_time','1584646600'),(1049,552,'_wp_trash_meta_status','0'),(1050,552,'_wp_trash_meta_time','1584646603'),(1051,551,'_wp_trash_meta_status','0'),(1052,551,'_wp_trash_meta_time','1584646607'),(1053,550,'_wp_trash_meta_status','0'),(1054,550,'_wp_trash_meta_time','1584646610'),(1055,549,'_wp_trash_meta_status','0'),(1056,549,'_wp_trash_meta_time','1584646613'),(1057,548,'_wp_trash_meta_status','0'),(1058,548,'_wp_trash_meta_time','1584646614'),(1059,547,'_wp_trash_meta_status','0'),(1060,547,'_wp_trash_meta_time','1584646620'),(1061,546,'_wp_trash_meta_status','0'),(1062,546,'_wp_trash_meta_time','1584646623'),(1063,545,'_wp_trash_meta_status','0'),(1064,545,'_wp_trash_meta_time','1584646628'),(1065,544,'_wp_trash_meta_status','0'),(1066,544,'_wp_trash_meta_time','1584646630'),(1067,543,'_wp_trash_meta_status','0'),(1068,543,'_wp_trash_meta_time','1584646631'),(1069,542,'_wp_trash_meta_status','0'),(1070,542,'_wp_trash_meta_time','1584646634'),(1071,541,'_wp_trash_meta_status','0'),(1072,541,'_wp_trash_meta_time','1584646638'),(1073,539,'_wp_trash_meta_status','0'),(1074,539,'_wp_trash_meta_time','1584646643'),(1075,538,'_wp_trash_meta_status','0'),(1076,538,'_wp_trash_meta_time','1584646645'),(1077,537,'_wp_trash_meta_status','0'),(1078,537,'_wp_trash_meta_time','1584646648'),(1079,540,'_wp_trash_meta_status','0'),(1080,540,'_wp_trash_meta_time','1584646650'),(1081,571,'_wp_trash_meta_status','0'),(1082,571,'_wp_trash_meta_time','1585477960'),(1083,570,'_wp_trash_meta_status','0'),(1084,570,'_wp_trash_meta_time','1585477965'),(1085,569,'_wp_trash_meta_status','0'),(1086,569,'_wp_trash_meta_time','1585477967'),(1087,568,'_wp_trash_meta_status','0'),(1088,568,'_wp_trash_meta_time','1585477970'),(1089,567,'_wp_trash_meta_status','0'),(1090,567,'_wp_trash_meta_time','1585477974'),(1091,566,'_wp_trash_meta_status','0'),(1092,566,'_wp_trash_meta_time','1585477976'),(1093,565,'_wp_trash_meta_status','0'),(1094,565,'_wp_trash_meta_time','1585477977'),(1095,564,'_wp_trash_meta_status','0'),(1096,564,'_wp_trash_meta_time','1585477979'),(1097,563,'_wp_trash_meta_status','0'),(1098,563,'_wp_trash_meta_time','1585477980'),(1099,561,'_wp_trash_meta_status','0'),(1100,561,'_wp_trash_meta_time','1585477983'),(1101,562,'_wp_trash_meta_status','0'),(1102,562,'_wp_trash_meta_time','1585477987');
/*!40000 ALTER TABLE `wp_commentmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_comments`
--

DROP TABLE IF EXISTS `wp_comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_comments` (
  `comment_ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_post_ID` bigint(20) unsigned NOT NULL DEFAULT '0',
  `comment_author` tinytext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `comment_author_email` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_author_url` varchar(200) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_author_IP` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_content` text COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `comment_karma` int(11) NOT NULL DEFAULT '0',
  `comment_approved` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '1',
  `comment_agent` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_type` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`comment_ID`),
  KEY `comment_post_ID` (`comment_post_ID`),
  KEY `comment_approved_date_gmt` (`comment_approved`,`comment_date_gmt`),
  KEY `comment_date_gmt` (`comment_date_gmt`),
  KEY `comment_parent` (`comment_parent`),
  KEY `comment_author_email` (`comment_author_email`(10))
) ENGINE=InnoDB AUTO_INCREMENT=594 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_comments`
--

LOCK TABLES `wp_comments` WRITE;
/*!40000 ALTER TABLE `wp_comments` DISABLE KEYS */;
INSERT INTO `wp_comments` VALUES (11,116,'Jan Zac','assets@janzac.com','https://rike.dev','184.105.3.4','2019-04-20 11:57:09','2019-04-20 09:57:09','Hello ,\n\nI saw your tweets and thought I will check your website. Have to say it looks really nice!\r\nI\'m also interested in this topic + have recently started my journey as young entrepreneur.\r\n\r\nI\'m also looking for the ways on how to promote my website. I have tried AdSense and Facebok Ads, however it is getting very expensive.  \r\nCan you recommend something what works best for you?\r\n\r\nWould appreciate, if you can have a quick look at my website and give me an advice what I should improve: https://janzac.com/\r\n(Recently I have added a new page about Rockwall Investments and the way how normal people can make money with this company.)\r\n\r\nI wanted to subscribe to your newsletter, but I couldn\'t find it. Do you have it?\r\n\r\nHope to hear from you soon.\r\n\r\nP.S.\r\nMaybe I will add link to your website on my website and you will add link to my website on your website? It will improve SEO of our websites, right? What do you think?\r\n\r\nRegards\r\nJan Zac',0,'spam','','',0,0),(12,39,'Ronnie Kesselman','Wide55489@gmail.com','http://vividleds.us/','85.10.50.182','2019-04-22 07:32:11','2019-04-22 05:32:11','You are my intake, I own few blogs and very sporadically run out from post :). “No opera plot can be sensible, for people do not sing when they are feeling sensible.” by W. H. Auden.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(13,43,'Winford Etulain','Erhart66301@gmail.com','http://vividleds.us/','173.245.202.99','2019-04-23 00:21:17','2019-04-22 22:21:17','I cannot thank you enough for the post.Really looking forward to read more. Cool.',0,'1','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(14,39,'Alexa Salkeld','Michele82633@gmail.com','https://www.kyinwebgroup.com','216.151.180.49','2019-04-24 09:37:54','2019-04-24 07:37:54','Could you ask her to call me? <a href=\"http://konutprojeleriankara.com/tips-articles/#vexed\" rel=\"nofollow\">chep viagra</a>  But Lowndes County Coroner Bill Watson said many of Johnson’s organs were deemed too badly decomposed to be preserved and had to be disposed of before the body was sent to the funeral home. “It would’ve been during or immediately after the autopsy,” he said.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(15,41,'Jonna Engessor','Ethridge79646@gmail.com','https://www.kyinwebgroup.com','173.245.203.193','2019-04-25 01:55:21','2019-04-24 23:55:21','gunstig online kaufen <a href=\"http://lazerstation.com/translator/apotheke/colchicina.html\" rel=\"nofollow\">http://lazerstation.com/translator/apotheke/colchicina.html</a>  apotheke kapseln.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(16,43,'Dennis Veney','Tirone61714@gmail.com','https://www.kyinwebgroup.com','209.197.16.170','2019-04-25 06:36:14','2019-04-25 04:36:14','<a href=\"http://genericzoloft.com/\" rel=\"nofollow\">zoloft 200 mg</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(17,37,'janzac.com','assets@janzac.com','https://rike.dev','172.83.8.4','2019-04-26 11:49:01','2019-04-26 09:49:01','Hi\r\nEarn second salary from home - even $30k/month.\r\nSuper simple to start.\r\nVisit my website to learn more:\r\nhttps://janzac.com/how-to-start-investing-money-online/',0,'spam','','',0,0),(18,39,'Jacki Tabatabai','Solecki20597@gmail.com','https://www.kyinwebgroup.com','81.171.85.100','2019-04-28 17:49:30','2019-04-28 15:49:30','payday loans online no credit check <a href=\"https://paydayloans2018.com/\" rel=\"nofollow\">personal loans unsecured</a> online payday loans <a href=\"https://paydayloans2018.com/\" rel=\"nofollow\">online payday loans</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(19,43,'Ruben Jankoff','Haer11835@gmail.com','https://www.kyinwebgroup.com','209.107.196.48','2019-04-29 13:53:14','2019-04-29 11:53:14','piller apotek online, <a href=\"http://www.homericaeast.com/apotek/lotrison\" rel=\"nofollow\">http://www.homericaeast.com/apotek/lotrison</a>  – købe generiske online.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(20,39,'Sarai Cichy','Kaneholani514@gmail.com','https://www.kyinwebgroup.com','205.185.209.69','2019-04-30 17:29:50','2019-04-30 15:29:50','You are offering an important information. I’ll be your regular website visitor.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(21,43,'Coleman Kry','Claes52846@gmail.com','https://www.kyinwebgroup.com','91.207.175.43','2019-05-01 14:23:41','2019-05-01 12:23:41','I like this  website  its a master peace ! Glad I found  this on google .',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(22,37,'Lucy','kontakt@rezydencjawmagdalence.pl','https://rike.dev','184.105.3.4','2019-05-03 20:23:13','2019-05-03 18:23:13','Howdy,\r\n\r\nMust say your website looks quite ok. Good job.\r\nHowever, if you want your website to be really successful, then make sure you use the best tools to optimize your online content. \r\nOtherwise it won\'t be on the top of Google search results and no-one will know about it. I\'m sure you didn\'t create this website to just be online, but to attract new people/customers.\r\n\r\nFew months ago my friend convinced me to use tools from below article and I have to say it helped me soo much:\r\nhttps://janzac.com/resources/\r\n\r\nI hope it will help you as well.\r\nKeep up the good work and you will eventually build a big online business.\r\n//Lucy',0,'spam','','',0,0),(23,39,'Altagracia Newberry','Perkowski35435@gmail.com','https://www.kyinwebgroup.com','81.171.71.80','2019-05-04 19:20:04','2019-05-04 17:20:04','recept nélkül recept, <a href=\"http://www.youthonthemove.net/wp-content/gyogyszertar/ribavirin.html\" rel=\"nofollow\">http://www.youthonthemove.net/wp-content/gyogyszertar/ribavirin.html</a>  – természetes.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(24,39,'Rolando Getchell','Delair28444@gmail.com','https://www.kyinwebgroup.com','216.151.183.73','2019-05-06 14:25:38','2019-05-06 12:25:38','What’s up, of course this article is really pleasant and I have learned lot of things from it regarding blogging. thanks.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(25,33,'Sterling Placek','Bjornstrom35683@gmail.com','https://bit.ly/2PShuy3','122.103.149.3','2019-05-08 12:54:48','2019-05-08 10:54:48','For those students who will be taking the Gcse Math exams, this is going to be very helpful for you.https://bit.ly/2JvuGaC',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(26,41,'Bob','chloesundberg@gmail.com','http://t.co','82.102.19.133','2019-05-08 19:24:33','2019-05-08 17:24:33','Hey! This post couldn\'t be written any better! Reading this post reminds me \r\nof my good old room mate! He always kept talking about this.\r\nI will forward this article to him. Fairly certain he will have \r\na good read. Many thanks for sharing!',0,'spam','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.40 Safari/537.36','',0,0),(27,39,'15000 loan no credit check','Eduardo74971@gmail.com','https://pennysteinke.shop1.cz/blog/no-doc-residence-loans-get','199.34.84.5','2019-05-15 07:53:35','2019-05-15 05:53:35','You write better information than I have seen anywhere else.  Please could you share your sourceexperience with us?',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(28,33,'loans without credit bureau check','Trogstad19527@gmail.com','https://oliviabeattie30.evenweb.com/blog/no-credit-check-loans-no-denial','152.44.107.145','2019-05-16 16:18:48','2019-05-16 14:18:48','It\'s good to find come across an article like this, that shows the writer thinks outside the box!  You honestly made me think! Thanks-I wouldn\'t have considered things from that angle otherwise. Will share this...',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(29,12,'SusanaBig','gay.ayres@freenet.de','https://LoraBad.wix.com','95.47.51.114','2019-05-19 12:34:51','2019-05-19 10:34:51','Hello. I have checked your rike.dev and i see you\'ve got some \r\nduplicate content so probably it is the reason that you don\'t rank high in google.\r\nBut you can fix this issue fast. There is a tool that rewrites \r\narticles like human, just search in google:  miftolo\'s tools',0,'spam','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(30,33,'get a 5000 loan with no credit check','Groupe53778@gmail.com','http://dariodrakeford338.wikidot.com/blog:17','167.160.66.130','2019-05-21 06:29:16','2019-05-21 04:29:16','This is most useful article I have found, when most other bloggers addressing this won\'t deviate from the accepted dogma. You have a great writing style, and I shall follow you as I enjoy your posts.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(31,37,'loans no credit check nc','Novembre62814@gmail.com','http://bd-server.com/user/TeganWaring4874/','138.229.108.146','2019-05-28 06:18:16','2019-05-28 04:18:16','Very good.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(32,39,'immediate cash loans no credit check','Hustace84738@gmail.com','http://nifnif.info/user/LouisWright60/','139.180.225.132','2019-05-28 06:49:43','2019-05-28 04:49:43','I  believe that you are right about this.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(33,43,'http://canadianorderpharmacy.com/','fghserf@bigmir.net','http://canadianorderpharmacy.com/','31.184.238.111','2019-06-05 07:17:34','2019-06-05 05:17:34','you\'re actually a excellent webmaster. The website loading speed is incredible. It seems that you\'re doing any unique trick. Moreover, The contents are masterpiece. you have performed a excellent process on this topic!',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36','',0,0),(34,41,'Denerath','rcastillo@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-08 09:27:03','2019-06-08 07:27:03','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albendazole without prescription</a>',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(35,41,'Kiaerath','spring@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-08 09:35:37','2019-06-08 07:35:37','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albenza cost</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36 OPR/55.0.2994.44','',0,0),(36,41,'Denerath','lesia@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-08 22:25:07','2019-06-08 20:25:07','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">order albendazole online</a>',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(37,41,'Kiaerath','willow@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-09 05:06:58','2019-06-09 03:06:58','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">buy albendazole online</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.71','',0,0),(38,41,'Kiaerath','hotmel040@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-09 20:48:28','2019-06-09 18:48:28','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albenza cost</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36 Kinza/4.8.2','',0,0),(39,43,'http://bit.do/eUxon','wadeprintz@gmail.com','http://bit.do/eUxon','188.165.141.43','2019-06-10 01:37:15','2019-06-09 23:37:15','Howdy! Would you mind if I share your blog with my myspace group?\r\n\r\nThere\'s a lot of people that I think would really enjoy your content.\r\n\r\nPlease let me know. Thank you',0,'spam','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36','',0,0),(40,33,'Kelli Ulven','Strobridge83335@gmail.com','http://tradmusic.com','107.173.85.100','2019-06-10 12:56:06','2019-06-10 10:56:06','Spot on with this write-up, I seriously feel this web site needs far more attention. I’ll probably be back again to read through more, thanks for the advice!',0,'1','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(41,41,'Denerath','gpshaw@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-10 15:37:56','2019-06-10 13:37:56','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albenza over the counter</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.71','',0,0),(42,41,'Denerath','denismer2@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-11 03:55:29','2019-06-11 01:55:29','<a href=\"http://albendazole400.com/\" rel=\"nofollow\">generic albendazole</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(43,39,'dedicsen','leilaqq@mail.ru','https://dedicatet.com/','77.233.20.9','2019-06-11 08:40:14','2019-06-11 06:40:14','<a href=\"https://dedicatet.com/\" / rel=\"nofollow\">Hacker Forum Творческая Лаборатория DedicateT</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.106','',0,0),(44,41,'Kiaerath','yourbo@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-11 14:48:45','2019-06-11 12:48:45','<a href=\"http://albendazole400.com/\" rel=\"nofollow\">albenza cost</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36 Kinza/4.9.1','',0,0),(45,41,'Denerath','refarr@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-12 08:27:03','2019-06-12 06:27:03','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albenza albendazole</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36','',0,0),(46,37,'no credit check personal loans online','Paskiewicz38287@gmail.com','http://fitbild.ru/user/Errol90W87222944/','167.160.64.154','2019-06-12 11:15:24','2019-06-12 09:15:24','!This may be a little inaccurate. Can you add some more detail for me please? :)',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(47,41,'Kiaerath','higginsdolores@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-12 23:05:56','2019-06-12 21:05:56','<a href=\"http://albendazole400.com/\" rel=\"nofollow\">albenza generic</a>',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(48,41,'Denerath','barrett@probbox.com','http://albendazole400.com/','5.188.210.61','2019-06-13 11:16:51','2019-06-13 09:16:51','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albenza cost</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 Edge/16.16299','',0,0),(49,41,'Kiaerath','whitechico@probbox.com','http://albendazole400.com/','5.188.210.61','2019-06-13 12:30:07','2019-06-13 10:30:07','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albendazole</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(50,41,'Denerath','abigail@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-14 01:12:35','2019-06-13 23:12:35','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albendazole over the counter</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.64 (Edition Yx)','',0,0),(51,37,'no credit check loans in rocky mount nc','Reis22873@gmail.com','http://jubraconline.com.br/revolution/chocolate/no-credit-check-loans-get-loans-without-credit-check/','139.180.229.79','2019-06-14 05:01:11','2019-06-14 03:01:11','This brings up some great considerations-but I notice you could be missing something. I want to see you clarify some things, because you are a very eloquent blogger and I like reading your posts.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(52,41,'Kiaerath','krisztof@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-14 08:15:57','2019-06-14 06:15:57','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">generic albendazole online</a>',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.146 Safari/537.36','',0,0),(53,41,'Kiaerath','lavone@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-15 00:09:04','2019-06-14 22:09:04','<a href=\"http://albendazole400.com/\" rel=\"nofollow\">albenza over the counter</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(54,12,'LeonorBig','lillasimos@inbox.com','https://AntonSick.wix.com','138.118.224.188','2019-06-15 02:04:04','2019-06-15 00:04:04','Hello. I have checked your rike.dev and i see you\'ve got some duplicate content so probably it is \r\nthe reason that you don\'t rank hi in google. But you can fix \r\nthis issue fast. There is a tool that generates articles like human, just \r\nsearch in google:  miftolo\'s tools',0,'spam','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.108 Safari/537.36','',0,0),(55,116,'cash loan now no credit check','Strauhal78033@gmail.com','http://music-talents.ru/user/Mohamed32D/','196.17.117.40','2019-06-15 11:22:24','2019-06-15 09:22:24','I \'m fairly certain that you\'re right with this.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(56,41,'Denerath','drschoberhome@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-15 18:52:14','2019-06-15 16:52:14','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albendazole</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(57,33,'how can i get a loan with no credit check','Maiden86273@gmail.com','http://nadrewiki.ethernet.edu.et/index.php/No_Credit_Check_Loans_For_Unemployed_-_Loans_For_Poor_Credit_Unemployed_Individuals','209.163.117.65','2019-06-15 20:25:49','2019-06-15 18:25:49','This is most helpful post I have read, when everyone else writing about this won\'t deviate from the scripted dogma. You have a way with words, and I will check back as I get a lot from your posts.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(58,39,'otdoxe','oniaseja@gmail.com','http://mewkid.net/generic-cialis/#uyuloy-w','62.210.180.164','2019-06-15 22:02:49','2019-06-15 20:02:49','cmlrZS5kZXY# <a href=\'http://mewkid.net/generic-cialis/#uyuloy-a\' rel=\"nofollow\">uyuloy-a.anchor.com</a> [URL=http://mewkid.net/generic-cialis/#uyuloy-u]uyuloy-u.anchor.com[/URL] http://mewkid.net/generic-cialis/#uyuloy-t http://mewkid.net/generic-cialis/#uyuloy-t http://mewkid.net/generic-cialis/#uyuloy-t http://mewkid.net/generic-cialis/#uyuloy-t http://mewkid.net/generic-cialis/#uyuloy-t http://mewkid.net/generic-cialis/#uyuloy-t http://mewkid.net/generic-cialis/#uyuloy-t http://mewkid.net/generic-cialis/#uyuloy-t ohgioxqu',0,'spam','Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20100101 Firefox/21.0','',0,0),(59,41,'Denerath','stynbeck2@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-16 08:34:58','2019-06-16 06:34:58','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albendazole over the counter</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.54','',0,0),(60,41,'Kiaerath','wesley@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-16 18:15:47','2019-06-16 16:15:47','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">buy albendazole</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36','',0,0),(61,41,'Denerath','carltonejames@probbox.com','http://albendazole400.com/','5.188.210.61','2019-06-17 12:47:02','2019-06-17 10:47:02','<a href=\"http://albendazole400.com/\" rel=\"nofollow\">albendazole</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(62,41,'Kiaerath','racarlin@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-18 01:45:55','2019-06-17 23:45:55','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albenza over the counter</a>',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36','',0,0),(63,41,'Kiaerath','jorgeltorres2@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-18 14:54:34','2019-06-18 12:54:34','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albendazole cost</a>',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(64,41,'Denerath','vr089@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-18 15:29:40','2019-06-18 13:29:40','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albendazole generic</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(65,41,'Denerath','dvanewijk@probbox.com','http://albendazole400.com/','5.188.210.61','2019-06-19 04:48:59','2019-06-19 02:48:59','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">generic albendazole</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.71','',0,0),(66,41,'Kiaerath','andijayjackson@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-19 10:51:21','2019-06-19 08:51:21','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albendozale purchase</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(67,41,'Kiaerath','chessldy@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-20 02:36:45','2019-06-20 00:36:45','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albendazole albenza</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.64','',0,0),(68,37,'best place to get a loan with bad credit','Sokolski33996@gmail.com','https://www.dailystrength.org/journals/100-pound-no-credit-check-loans-fairly-useful-sum','168.91.13.198','2019-06-20 09:46:24','2019-06-20 07:46:24','I have a few ideas that work with this. If I may?',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(69,41,'Denerath','salonsami@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-20 21:11:02','2019-06-20 19:11:02','<a href=\"http://albendazole400.com/\" rel=\"nofollow\">albenza cost</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(70,41,'Denerath','chriskelly36@probbox.com','http://albendazole400.com/','5.188.210.61','2019-06-21 09:35:06','2019-06-21 07:35:06','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albendazole</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.71','',0,0),(71,116,'$15000 personal loan no credit check','Lisowski18321@gmail.com','http://slavich-nn.ru/user/SheltonTerpstra/','167.160.70.31','2019-06-21 17:02:19','2019-06-21 15:02:19','Are you tired? I\'m concerned about you. Please be ok!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(72,41,'Kiaerath','lcohen1984@probbox.com','http://albendazole400.com/','5.188.210.61','2019-06-21 18:41:27','2019-06-21 16:41:27','<a href=\"http://albendazole400.com/\" rel=\"nofollow\">albendazole</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(73,33,'0 credit score loans','Coho37668@gmail.com','http://driversed.tv/blog/?p=8421','138.229.99.99','2019-06-22 02:41:45','2019-06-22 00:41:45','Nice piece - people need to see more like this, as most info on this topic is lacking something.  You give real worth to your readers.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(74,41,'Denerath','pehr@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-22 12:08:29','2019-06-22 10:08:29','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">generic albendazole</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.51','',0,0),(75,41,'Kiaerath','vancenorum@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-23 01:17:17','2019-06-22 23:17:17','<a href=\"http://albendazole400.com/\" rel=\"nofollow\">albendazole</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36 Kinza/4.7.2','',0,0),(76,41,'Kiaerath','nightprowlerau@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-23 13:42:49','2019-06-23 11:42:49','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albendazole</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(77,41,'Denerath','soila@probbox.com','http://albendazole400.com/','5.188.210.61','2019-06-23 14:13:40','2019-06-23 12:13:40','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">order albendazole online</a>',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(78,41,'Denerath','gloj73@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-24 02:56:51','2019-06-24 00:56:51','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albendazole</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.68','',0,0),(79,41,'Kiaerath','nightprowlerau@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-24 08:40:28','2019-06-24 06:40:28','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">purchase albendazole</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.64 (Edition Yx)','',0,0),(80,41,'Kiaerath','kitt52@probbox.com','https://albendazole400.com/','5.188.210.61','2019-06-24 23:57:38','2019-06-24 21:57:38','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">albenza over the counter</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(81,41,'Denerath','thelma@probbox.com','http://albendazole400.com/','5.188.210.61','2019-06-25 18:08:59','2019-06-25 16:08:59','<a href=\"https://albendazole400.com/\" rel=\"nofollow\">buy albendazole on line</a>',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36','',0,0),(82,30,'Rey Corvera','KristinRiback76217@gmail.com','http://www.blogyouwillfindamazingandthrillingtoshare.com','188.165.209.25','2019-06-27 08:44:43','2019-06-27 06:44:43','Oh mate What might I express? Really... really loved the contentThank you so much!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(83,39,'ekicimix','ditudu@gmail.com','http://mewkid.net/generic-cialis/#wilacuh-w','62.210.83.206','2019-06-29 14:34:10','2019-06-29 12:34:10','cmlrZS5kZXY# <a href=\'http://mewkid.net/generic-cialis/#wilacuh-a\' rel=\"nofollow\">wilacuh-a.anchor.com</a> [URL=http://mewkid.net/generic-cialis/#wilacuh-u]wilacuh-u.anchor.com[/URL] http://mewkid.net/generic-cialis/#wilacuh-t http://mewkid.net/generic-cialis/#wilacuh-t http://mewkid.net/generic-cialis/#wilacuh-t http://mewkid.net/generic-cialis/#wilacuh-t http://mewkid.net/generic-cialis/#wilacuh-t http://mewkid.net/generic-cialis/#wilacuh-t http://mewkid.net/generic-cialis/#wilacuh-t http://mewkid.net/generic-cialis/#wilacuh-t urtahogi',0,'spam','Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20100101 Firefox/21.0','',0,0),(84,33,'Who was I in a past life','SigneGarich41113@yahoo.com','http://astralware.com','104.160.13.154','2019-07-07 15:34:31','2019-07-07 13:34:31','This page seems like the other comment I saw',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(85,33,'Who was I in my past life','ChanCotelesse54964@yahoo.com','http://astralware.com','107.150.85.30','2019-07-07 22:57:15','2019-07-07 20:57:15','This page reminds me of the other page I was seeing',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(86,37,'no credit check loans anderson sc','Semetara10887@yahoo.com','https://betadeals.com.ng/user/profile/3004097','138.229.111.56','2019-07-08 09:15:07','2019-07-08 07:15:07','I \'m fairly certain that you may be bang on with this.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(87,39,'no credit check income based loans','Duryee82096@yahoo.com','http://www.onemanstreasure.store/no-credit-check-loans-also-accessible-for-bad-creditors/','216.213.29.45','2019-07-08 09:37:52','2019-07-08 07:37:52','I read through this and foundit helpful.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(88,43,'umfjueplur','ibemosi@rr.manidn.com','http://mewkid.net/buy-amoxicillin/','5.188.211.114','2019-07-08 20:28:29','2019-07-08 18:28:29','http://mewkid.net/buy-amoxicillin/ - 18 <a href=\"http://mewkid.net/buy-amoxicillin/\" rel=\"nofollow\">Amoxicillin 500mg Capsules</a> mkc.ctyk.rike.dev.vmr.vg http://mewkid.net/buy-amoxicillin/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36','',0,0),(89,43,'ohibubeovewa','oderjewi@rr.manidn.com','http://mewkid.net/buy-amoxicillin/','5.188.211.114','2019-07-08 21:02:40','2019-07-08 19:02:40','http://mewkid.net/buy-amoxicillin/ - 18 <a href=\"http://mewkid.net/buy-amoxicillin/\" rel=\"nofollow\">Amoxil</a> frm.knid.rike.dev.ipq.qf http://mewkid.net/buy-amoxicillin/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36 OPR/55.0.2994.44','',0,0),(90,116,'personal loans no credit check tucson','Tringali34183@yahoo.com','http://filmyhd.net/user/LuigiSimone/','138.128.0.135','2019-07-09 12:03:20','2019-07-09 10:03:20','Your attitude should be accepted as the standard when it comes to this topic.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(91,197,'i need cash fast no credit check','Burghard53712@yahoo.com','http://www.gardinenwelt-angelina.de/user/TiffanyRolfe7/','216.213.27.136','2019-07-09 19:58:22','2019-07-09 17:58:22','I\'m not concern trolling.. but are you certain about this? It seems a bit overdone and I\'m worried about you :/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(92,33,'fast loans bad credit','Haakinson78211@yahoo.com','https://www.cv-video.co.uk/members/LonnieMacla/','168.91.12.86','2019-07-09 20:12:27','2019-07-09 18:12:27','You make some eloquent considerations-but I believe you are skimming details. I would like to see you add some more detail, because you are a good writer and I like reading your posts.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(93,116,'download','jeretoohey@googlemail.com','https://www.f6s.com/imyfoneumateproformacregistrationkey','95.181.177.55','2019-07-11 09:09:11','2019-07-11 07:09:11','Great blog here! Also your site loads up fast! What host are you using?\r\nCan I get your affiliate link to your host? I wish my web site loaded up as \r\nquickly as yours lol',0,'spam','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.111 Safari/537.36 GD','',0,0),(94,30,'how to make','dominga_biaggini@googlemail.com','http://genki365.net/gnko/common/redirect.php?url=https://diyhangout.top/s/diy-resin-bvb/','128.201.8.10','2019-07-11 16:33:03','2019-07-11 14:33:03','If you would like to take a great deal from this article then you have to apply such techniques to \r\nyour won webpage.',0,'spam','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36 QIHU 360SE','',0,0),(95,39,'ispmedia','Gerken@aol-onlinel.com','https://ispmedia.pl/agencja-social-media','191.101.106.233','2019-07-11 19:09:48','2019-07-11 17:09:48','*The next time I read a blog, I hope that it doesnt disappoint me as much as this one. I mean, I know it was my choice to read, but I actually thought youd have something interesting to say. All I hear is a bunch of whining about something that you could fix if you werent too busy looking for attention.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(96,39,'ispmedia','Bradshaw@aol-onlinel.com','https://ispmedia.pl/agencja-social-media','103.215.219.15','2019-07-11 20:39:59','2019-07-11 18:39:59','*Nice post. I learn something more challenging on different blogs everyday. It will always be stimulating to read content from other writers and practice a little something from their store. I?d prefer to use some with the content on my blog whether you don?t mind. Natually I?ll give you a link on your web blog. Thanks for sharing.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(97,39,'ispmedia','Gosselin@aol-onlinel.com','https://ispmedia.pl/agencja-social-media','165.231.130.106','2019-07-11 21:29:03','2019-07-11 19:29:03','*Nice post. I learn something more challenging on different blogs everyday. It will always be stimulating to read content from other writers and practice a little something from their store. I?d prefer to use some with the content on my blog whether you don?t mind. Natually I?ll give you a link on your web blog. Thanks for sharing.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(98,33,'Eyeerath','mmkpsmith@probbox.com','https://kamagra50.com/','5.188.210.61','2019-07-12 03:16:06','2019-07-12 01:16:06','<a href=\"https://kamagra50.com/\" rel=\"nofollow\">kamagra 50mg</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(99,33,'past life quizzes','AlyseAguiar55219@yahoo.com','http://astralware.com','64.44.49.231','2019-07-12 16:33:01','2019-07-12 14:33:01','This seems like the other info I was looking at',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(100,39,'Jossaheaft','fredazaq@mail.ru','https://dedicatet.com/','77.233.22.89','2019-07-15 10:00:31','2019-07-15 08:00:31','<a href=\"https://dedicatet.com/categories/black-market.14/\" / rel=\"nofollow\">Black Market</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.71','',0,0),(101,30,'http://www.texalex.net/__media__/js/netsoltrademark.php?d=amatube.tv','wilton_burk@vegemail.com','http://www.texalex.net/__media__/js/netsoltrademark.php?d=amatube.tv','207.188.156.125','2019-07-16 12:47:37','2019-07-16 10:47:37','I actually see the short article.A whole lot thank you.\r\nWould like much more.',0,'spam','Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36','',0,0),(102,39,'MildaCap','xerassima@mail.ru','http://sexsweet.vip','77.233.20.208','2019-07-16 16:22:58','2019-07-16 14:22:58','<a href=\"http://sexsweet.vip\" rel=\"nofollow\">порно чат бесплатный россия</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(103,33,'Eyeerath','jbseevers@probbox.com','https://kamagra50.com/','5.188.210.61','2019-07-17 14:36:11','2019-07-17 12:36:11','<a href=\"https://kamagra50.com/\" rel=\"nofollow\">kamagra</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.62 Safari/537.36','',0,0),(104,39,'Jossaheaft','fredazaq@mail.ru','https://dedicatet.com/','77.233.23.187','2019-07-17 17:22:24','2019-07-17 15:22:24','<a href=\"https://dedicatet.com/threads/android-bankbot-anubis-2-5.1735/\" / rel=\"nofollow\">Android BankBot Anubis 2.5</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.68','',0,0),(105,33,'Kiaerath','scottfreemendo@probbox.com','http://kamagra50.com/','5.188.210.61','2019-07-17 20:02:37','2019-07-17 18:02:37','<a href=\"http://kamagra50.com/\" rel=\"nofollow\">kamagra</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(106,33,'Curt','maribelvergara@t-online.de','http://googleownsdit.com','185.202.112.102','2019-07-18 08:52:35','2019-07-18 06:52:35','Undeniably believe that which you said. Your favorite justification seemed to be on the web the easiest thing to be \r\naware of. I say to you, I certainly get annoyed while \r\npeople consider worries that they just do not know about.\r\nYou managed to hit the nail upon the top as well as \r\ndefined out the whole thing without having side effect , people could take a \r\nsignal. Will probably be back to get more. Thanks',0,'spam','Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36,gzip(gfe)','',0,0),(107,33,'Denerath','allenmonte18@probbox.com','https://kamagra50.com/','5.188.210.61','2019-07-18 13:53:30','2019-07-18 11:53:30','<a href=\"https://kamagra50.com/\" rel=\"nofollow\">buy kamagra</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.64','',0,0),(108,33,'Doyle Ganas','PhylisBotros45899@yahoo.com','https://arxiv.org/abs/1907.06650','64.44.49.231','2019-07-19 04:14:36','2019-07-19 02:14:36','Mr.s Fister, this message is your next bit of info. Immediately transceive the agency at your earliest convenience.  No further information until next transmission. This is broadcast #3718. Do not delete.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(109,33,'Jasonerath','melloney1@probbox.com','https://kamagra50.com/','5.188.210.61','2019-07-19 17:57:39','2019-07-19 15:57:39','<a href=\"https://kamagra50.com/\" rel=\"nofollow\">kamagra 100mg</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(110,37,'King Vollucci','Rajaphoumy13224@gmail.com','http://www.tahirkhanlodhi.com','165.231.108.85','2019-07-19 18:38:03','2019-07-19 16:38:03','Hi,  I just looked at your blog and really impressed by it\'s design and content. You are doing an excellent job by providing such information to the audience. Thank you so much.',0,'1','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(111,41,'afohatu','ovixoq@gmail.com','http://mewkid.net/order-cialis/#erigasu-w','62.210.83.206','2019-07-20 00:39:59','2019-07-19 22:39:59','cmlrZS5kZXY# <a href=\'http://mewkid.net/order-cialis/#erigasu-a\' rel=\"nofollow\">erigasu-a.anchor.com</a> [URL=http://mewkid.net/order-cialis/#erigasu-u]erigasu-u.anchor.com[/URL] http://mewkid.net/order-cialis/#erigasu-t http://mewkid.net/order-cialis/#erigasu-t http://mewkid.net/order-cialis/#erigasu-t http://mewkid.net/order-cialis/#erigasu-t http://mewkid.net/order-cialis/#erigasu-t http://mewkid.net/order-cialis/#erigasu-t http://mewkid.net/order-cialis/#erigasu-t http://mewkid.net/order-cialis/#erigasu-t ovicovi',0,'spam','Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20100101 Firefox/21.0','',0,0),(112,116,'download','tammielofton@gawab.com','https://bastiecasi.site123.me/blog/mupen64-alpha-apk','5.101.217.190','2019-07-20 09:49:06','2019-07-20 07:49:06','I like the helpful info you provide in your articles.\r\nI will bookmark your weblog and check again here regularly.\r\n\r\nI\'m quite certain I\'ll learn plenty of new stuff right here!\r\n\r\nBest of luck for the next!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.183 Safari/537.36 Vivaldi/1.97.1182.8','',0,0),(113,37,'pozycjonowanie stron','Jirik@aol-onlinel.com','https://ispmedia.pl/pozycjonowanie-stron','103.215.219.200','2019-07-20 12:27:52','2019-07-20 10:27:52','*It?s hard to find knowledgeable people on this topic, but you sound like you know what you?re talking about! Thanks',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(114,33,'Eyeerath','corinna@probbox.com','https://kamagra50.com/','5.188.210.61','2019-07-20 22:52:36','2019-07-20 20:52:36','<a href=\"https://kamagra50.com/\" rel=\"nofollow\">kamagra 50mg</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(115,33,'Kiaerath','kcotropia@probbox.com','http://kamagra50.com/','5.188.210.61','2019-07-21 05:22:57','2019-07-21 03:22:57','<a href=\"http://kamagra50.com/\" rel=\"nofollow\">kamagra</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(116,33,'manicure breda','vernellschilling@gmail.com','https://www.perfectenagels.nl','181.49.7.146','2019-07-21 07:23:23','2019-07-21 05:23:23','Now I am going away to do my breakfast, when having my breakfast coming over again to read additional news.',0,'spam','Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36,gzip(gfe)','',0,0),(117,33,'Denerath','jbdrum06@probbox.com','https://kamagra50.com/','5.188.210.61','2019-07-21 17:23:01','2019-07-21 15:23:01','<a href=\"https://kamagra50.com/\" rel=\"nofollow\">buy kamagra</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36 OPR/55.0.2994.44','',0,0),(118,39,'Jossaheaft','fredazaq@mail.ru','https://dedicatet.com/','77.233.9.47','2019-07-22 16:48:52','2019-07-22 14:48:52','<a href=\"https://dedicatet.com/forums/ddos-stresser.51/\" / rel=\"nofollow\">DDoS</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.64','',0,0),(119,33,'Jasonerath','larrypearsonnorfolk@probbox.com','https://kamagra50.com/','5.188.210.61','2019-07-23 02:30:47','2019-07-23 00:30:47','<a href=\"https://kamagra50.com/\" rel=\"nofollow\">kamagra</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.64','',0,0),(120,39,'Kenaodoth','sommeraq@mail.ru','http://shopcashback.ru','77.233.9.47','2019-07-23 05:47:18','2019-07-23 03:47:18','<a href=\"http://shopcashback.ru\" rel=\"nofollow\">Всё просто — Для получения вашего кэшбэка Нужно лишь зарегистрироваться затем, прямо со страницы сервиса перейти в выбранный магазин, отправить нужные товары в корзину, оплатить и получить кэшбэк. Всё просто. \r\nНет необходимости регистрироваться, каждый раз перед покупкой, даже если вы решите сделать покупки много времени спустя, для получения КэшБэка, просто заходите в свой кабинет и от туда переходите в нужный магазин или можно установить расширение для браузера которое сделает шопинг ещё проще, сразу подскажет есть ли на выбранный вами товар возврат денег, и сколько. \r\n \r\nУстановив расширение нет необходимости заходить в свой кабинет, можно перейти сразу на сайт магазина, а иконка расширения сообщит о возможности возврата и его размере. \r\nКак говорится, сэкономил значит заработал. И кстати, постоянные клиенты получают ещё больший процент возврата денег от своих покупок. \r\n</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.99','',0,0),(121,33,'Eyeerath','alvinboutte47@probbox.com','https://kamagra50.com/','5.188.210.61','2019-07-24 03:20:15','2019-07-24 01:20:15','<a href=\"https://kamagra50.com/\" rel=\"nofollow\">buy kamagra online</a>',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(122,33,'Denerath','spencer5@probbox.com','https://kamagra50.com/','5.188.210.61','2019-07-24 04:01:12','2019-07-24 02:01:12','<a href=\"https://kamagra50.com/\" rel=\"nofollow\">kamagra tablets</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.99','',0,0),(123,116,'aeginojuf','uwuxwej@gmail.com','http://mewkid.net/order-cialis/#eminevu-w','62.210.83.206','2019-07-25 11:39:12','2019-07-25 09:39:12','cmlrZS5kZXY# <a href=\'http://mewkid.net/order-cialis/#eminevu-a\' rel=\"nofollow\">eminevu-a.anchor.com</a> [URL=http://mewkid.net/order-cialis/#eminevu-u]eminevu-u.anchor.com[/URL] http://mewkid.net/order-cialis/#eminevu-t http://mewkid.net/order-cialis/#eminevu-t http://mewkid.net/order-cialis/#eminevu-t http://mewkid.net/order-cialis/#eminevu-t http://mewkid.net/order-cialis/#eminevu-t http://mewkid.net/order-cialis/#eminevu-t http://mewkid.net/order-cialis/#eminevu-t http://mewkid.net/order-cialis/#eminevu-t inapqvo',0,'spam','Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20100101 Firefox/21.0','',0,0),(124,33,'Kiaerath','lynnr1969@probbox.com','http://kamagra50.com/','5.188.210.61','2019-07-25 17:45:45','2019-07-25 15:45:45','<a href=\"http://kamagra50.com/\" rel=\"nofollow\">buy kamagra oral jelly online</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.54','',0,0),(125,43,'ebhisubiiza','anaqufoku@werwer.namnerbca.com','http://mewkid.net/order-amoxicillin/','109.162.122.45','2019-07-27 14:40:56','2019-07-27 12:40:56','http://mewkid.net/order-amoxicillin/ - Buy Amoxicillin Online <a href=\"http://mewkid.net/order-amoxicillin/\" rel=\"nofollow\">Amoxicillin No Prescription</a> hqv.lixp.rike.dev.yxf.qe http://mewkid.net/order-amoxicillin/',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36','',0,0),(126,43,'ecudugumuxuja','ubsiguje@werwer.namnerbca.com','http://mewkid.net/order-amoxicillin/','109.162.122.45','2019-07-27 15:03:11','2019-07-27 13:03:11','http://mewkid.net/order-amoxicillin/ - Buy Amoxicillin Online <a href=\"http://mewkid.net/order-amoxicillin/\" rel=\"nofollow\">Amoxicillin</a> fvg.xqcs.rike.dev.rwv.gx http://mewkid.net/order-amoxicillin/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36','',0,0),(127,33,'Jasonerath','larrypearsonnorfolk@probbox.com','https://kamagra50.com/','5.188.210.61','2019-07-27 16:45:58','2019-07-27 14:45:58','<a href=\"https://kamagra50.com/\" rel=\"nofollow\">buy kamagra</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(128,116,'download','diansaucedo@gmail.com','http://archive.vn/sPZEq','85.202.195.20','2019-07-28 08:37:06','2019-07-28 06:37:06','I always spent my half an hour to read this web site\'s posts every day along with a \r\ncup of coffee.',0,'spam','Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 YaBrowser/18.1.1.839 Yowser/2.5 Safari/537.36','',0,0),(129,33,'Denerath','dvanewijk@probbox.com','https://kamagra50.com/','5.188.210.61','2019-07-28 16:47:41','2019-07-28 14:47:41','<a href=\"https://kamagra50.com/\" rel=\"nofollow\">kamagra 50 mg</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.99','',0,0),(130,33,'Eyeerath','adriene@probbox.com','https://kamagra50.com/','5.188.210.61','2019-07-28 18:12:27','2019-07-28 16:12:27','<a href=\"https://kamagra50.com/\" rel=\"nofollow\">kamagra</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(131,33,'Kiaerath','leprechaundanny@probbox.com','http://kamagra50.com/','5.188.210.61','2019-07-28 18:22:59','2019-07-28 16:22:59','<a href=\"http://kamagra50.com/\" rel=\"nofollow\">kamagra</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(132,41,'Matwisa','matswenna@belan.website','http://demalan.com','31.184.238.248','2019-07-29 07:55:28','2019-07-29 05:55:28','Resultados De Propecia Propecia Depression Reversible  <a href=\"http://viaapill.com\" rel=\"nofollow\">generic viagra</a> Online Medicine Store Canada Dosage Of Cephalexin For Puppies Lopressor',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(133,41,'Matwisa','matswenna@belan.website','http://cialionline.com','31.184.238.248','2019-08-01 13:02:57','2019-08-01 11:02:57','Price For A 100 Mg Viagra Ordonnance Propecia Augmentin Amoxicillin  <a href=\"http://lapizmoon.com\" rel=\"nofollow\">cialis 5mg best price</a> Amoxicillin 250mg For Cats',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36','',0,0),(134,43,'Hairstyles','43566Girouard@gmail.com','https://www.hairstyleslook.com','113.81.28.159','2019-08-01 19:32:08','2019-08-01 17:32:08','Ready to finally find your ideal haircut? www.hairstyleslook.com This is your ultimate resource to get the hottest hairstyles and haircuts in this Year.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(135,33,'Managed Services','gitalinker@spambog.com','https://itexamall.com','209.99.169.192','2019-08-02 12:58:34','2019-08-02 10:58:34','This is some great things about Managed Services and Managed Network Services https://itexamall.com',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36 OPR/52.0.2871.99','',0,0),(136,116,'Yadira Gursky','Kegler@gmail.com','https://storia.me/en/daily-skincare-for-regular-skin-tips-1dqd/s','167.86.124.48','2019-08-02 13:59:44','2019-08-02 11:59:44','I needed to send you one little note to be able to say thank you again on the gorgeous secrets you have discussed on this website. This is simply incredibly open-handed with people like you to deliver easily exactly what most people would\'ve offered for sale for an e-book to help make some cash for their own end, mostly seeing that you might have tried it if you ever desired. These strategies in addition acted as the fantastic way to comprehend other people online have a similar dream just as my very own to grasp way more when it comes to this matter. Certainly there are lots of more pleasurable instances up front for people who looked at your blog.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(137,41,'Matwisa','matswenna@belan.website','http://dan5325.com','31.184.238.248','2019-08-04 05:50:40','2019-08-04 03:50:40','Viagra Discount Pharmacy Cialis Generika Bestellen Effect Of Tadalis Sx Soft  <a href=\"http://uscagsa.com\" rel=\"nofollow\">cialis for sale</a> Come Usare Il Cialis Permixon O Propecia Betablocker Levitra',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(138,39,'Like','ukgnyeqrlr@gmail.com','https://www.like.in.th/','134.255.20.230','2019-08-05 15:11:41','2019-08-05 13:11:41','ZFN Liker, Auto Like, Photo Auto Liker, Increase Likes, Autolike, Autoliker, autolike, Auto Liker, auto like, autoliker, Status Auto Liker, Status Liker, auto liker, Working Auto Liker, Photo Liker, Autoliker, Autolike International',0,'spam','Mozilla/5.0 (Windows NT 5.1) AppleWebKit/5322 (KHTML, like Gecko) Chrome/15.0.838.0 Safari/5322','',0,0),(139,212,'KevinHoins','raphaethyroibpoorp@gmail.com','https://www.google.com','185.93.3.114','2019-08-05 18:15:40','2019-08-05 16:15:40','Ciao!  rike.dev \r\n \r\nWe present \r\n \r\nSending your commercial offer through the Contact us form which can be found on the sites in the contact partition. Contact form are filled in by our application and the captcha is solved. The advantage of this method is that messages sent through feedback forms are whitelisted. This method improve the chances that your message will be open. \r\n \r\nOur database contains more than 25 million sites around the world to which we can send your message. \r\n \r\nThe cost of one million messages 49 USD \r\n \r\nFREE TEST mailing of 50,000 messages to any country of your choice. \r\n \r\n \r\nThis message is automatically generated to use our contacts for communication. \r\n \r\n \r\n \r\nContact us. \r\nTelegram - @FeedbackFormEU \r\nSkype  FeedbackForm2019 \r\nEmail - FeedbackForm@make-success.com \r\nWhatsApp - +44 7598 509161',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(140,39,'Randy Pyper','Maclaughlin@hotmail.com','http://instagram.com/mothmeister','107.175.110.116','2019-08-06 18:30:05','2019-08-06 16:30:05','This seems like the other page I saw',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(141,41,'Matwisa','matswenna@belan.website','http://viacheap.com','31.184.238.248','2019-08-07 00:02:47','2019-08-06 22:02:47','Preis Viagra Sildenafil  <a href=\"http://corzide.com\" rel=\"nofollow\">generic viagra</a> Cheap Viagra 100mg Viagra Interdit',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(142,183,'Sonja','s.willrodt@gmx.de','','87.123.202.38','2019-08-07 13:28:58','2019-08-07 11:28:58','Eine wirklich tolle Anleitung!\r\n\r\nIm Codebeispiel muß in der ersten Zeile jedoch statt \r\nconst express = require(\"express\");\r\nconst express = require(\'express\'); stehen.\r\n\r\nDann klappt es :)',0,'1','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0','',0,0),(143,33,'RudolphBig','andressheedy@peacemail.com','https://AntonyBad.blogspot.com','168.0.232.23','2019-08-08 01:01:46','2019-08-07 23:01:46','Hello. I have checked your rike.dev and i see you\'ve got some \r\nduplicate content so probably it is the reason that you don\'t rank \r\nhigh in google. But you can fix this issue fast.\r\n\r\nThere is a tool that creates content like human, just search in google:\r\nmiftolo\'s tools',0,'spam','Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv 11.0) like Gecko','',0,0),(144,116,'#SaveTheOA','ManuelaBors60378@yahoo.com','http://savetheoa.org','192.227.205.179','2019-08-10 21:46:06','2019-08-10 19:46:06','Old Knight and psychic octopi are real! #TheOA needs your help.  #SaveTheOA',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(145,41,'Save The OA','LillieLounder36808@yahoo.com','http://savetheoa.org','209.99.136.88','2019-08-10 22:23:23','2019-08-10 20:23:23','Old Knight and psychic octopi are real! #TheOA needs your help.  #SaveTheOA',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(146,33,'Save The OA','LonnaHills@hotmail.com','http://savetheoa.org','23.229.58.28','2019-08-11 09:06:17','2019-08-11 07:06:17','I asked you to believe in impossible things. #TheOA needs your help.  #SaveTheOA',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(147,33,'Nitsuili','elosbnfea1@qmails.co','','5.188.210.27','2019-08-11 11:15:48','2019-08-11 09:15:48','Price cialis 20mg nurofen plus <a href=\"http://cialisndbrx.com/#\" rel=\"nofollow\">buy cialis online</a> daily side effects cialis tablets <a href=\"http://cialischmrx.com/#\" rel=\"nofollow\">buy cheap cialis online</a> generic cialis usa <a href=\"http://cialischbrx.com/#\" rel=\"nofollow\">buy generic cialis online</a> test cialis 20mg <a href=\"http://cialisdbrx.com/#\" rel=\"nofollow\">buy cheap cialis online</a> when to take viagra for best results <a href=\"http://chviagranrxusa.com/#\" rel=\"nofollow\">buy generic viagra online</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(148,116,'#SaveTheOA','PearleLekwa31183@yahoo.com','http://savetheoa.org','198.23.250.26','2019-08-11 15:09:40','2019-08-11 13:09:40','I asked you to believe in impossible things. #TheOA needs your help.  #SaveTheOA',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(149,41,'Save The OA','GrantMattlin@yahoo.com','http://savetheoa.org','64.44.49.231','2019-08-13 16:12:17','2019-08-13 14:12:17','Old Knight and psychic octopi are real! #TheOA needs your help.  #SaveTheOA',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(150,33,'David','oliveiradavid007@gmail.com','','191.189.25.49','2019-08-14 17:38:33','2019-08-14 15:38:33','Thank you very much! (I liked your site design too haha)',0,'1','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/76.0.3809.87 Chrome/76.0.3809.87 Safari/537.36','',0,0),(151,212,'Austinniz','support@monkeydigital.co','https://monkeydigital.co/product/daily-social-posting-service/','84.17.51.125','2019-08-17 09:36:28','2019-08-17 07:36:28','Dropped in website’s rankings? Try our new Slow Link building Service. \r\nWe will run a slow &amp; steady link building campaign for 7 days and send you a report with 140 live Social posts \r\n \r\nMore info and more variations in posts: \r\nhttps://monkeydigital.co/product/daily-social-posting-service/ \r\n \r\nThanks and regards \r\nMike \r\nmonkeydigital.co@gmail.com',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(152,33,'Sexy Ass Cams','winifredsee@zoho.com','http://zo.ee/6CvUt','80.240.115.254','2019-08-24 08:22:44','2019-08-24 06:22:44','I always emailed this blog post page to all my \r\nfriends, since if like to read it after that my links will too.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3423.2 Safari/537.36','',0,0),(153,33,'bypepsy','lgaerfkls2@qmails.co','','5.188.210.28','2019-08-24 21:15:13','2019-08-24 19:15:13','<a href=\"http://genviagramdmrx.com/#\" rel=\"nofollow\">buy viagra online</a> <a href=\"http://cialismdmarx.com/#\" rel=\"nofollow\">buy cialis online</a> <a href=\"http://chviagranrxusa.com/#\" rel=\"nofollow\">cheap viagra</a> <a href=\"http://cashpaydayusloans.com/#\" rel=\"nofollow\">quick cash advance online</a> <a href=\"http://cialisherrx.com/#\" rel=\"nofollow\">buy cialis</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.64 (Edition Yx)','',0,0),(154,179,'itegajale','ejiqyad@gmail.com','http://mewkid.net/order-cialis/#obudadac-w','62.210.83.206','2019-08-25 02:54:22','2019-08-25 00:54:22','cmlrZS5kZXY# <a href=\'http://mewkid.net/order-cialis/#obudadac-a\' rel=\"nofollow\">obudadac-a.anchor.com</a> [URL=http://mewkid.net/order-cialis/#obudadac-u]obudadac-u.anchor.com[/URL] http://mewkid.net/order-cialis/#obudadac-t http://mewkid.net/order-cialis/#obudadac-t http://mewkid.net/order-cialis/#obudadac-t http://mewkid.net/order-cialis/#obudadac-t http://mewkid.net/order-cialis/#obudadac-t http://mewkid.net/order-cialis/#obudadac-t http://mewkid.net/order-cialis/#obudadac-t http://mewkid.net/order-cialis/#obudadac-t ilakija',0,'spam','Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20100101 Firefox/21.0','',0,0),(155,116,'ejilifewi','ofohfu@gmail.com','http://mewkid.net/order-cialis/#ituswihe-w','62.210.83.206','2019-08-27 22:39:36','2019-08-27 20:39:36','cmlrZS5kZXY# <a href=\'http://mewkid.net/order-cialis/#ituswihe-a\' rel=\"nofollow\">ituswihe-a.anchor.com</a> [URL=http://mewkid.net/order-cialis/#ituswihe-u]ituswihe-u.anchor.com[/URL] http://mewkid.net/order-cialis/#ituswihe-t http://mewkid.net/order-cialis/#ituswihe-t http://mewkid.net/order-cialis/#ituswihe-t http://mewkid.net/order-cialis/#ituswihe-t http://mewkid.net/order-cialis/#ituswihe-t http://mewkid.net/order-cialis/#ituswihe-t http://mewkid.net/order-cialis/#ituswihe-t http://mewkid.net/order-cialis/#ituswihe-t aenaloda',0,'spam','Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20100101 Firefox/21.0','',0,0),(156,33,'namOpisa','lgaerfkls2@qmails.pro','','5.188.210.27','2019-08-29 19:25:05','2019-08-29 17:25:05','Pics of cialis pills <a href=\"http://cialisgenbrx.com/#\" rel=\"nofollow\">cheap cialis online</a> viagra maroc cialis 20mg <a href=\"https://cialisrxche.com/#\" rel=\"nofollow\">buy generic cialis online</a> personal loans nj <a href=\"http://paydaystip.com/#\" rel=\"nofollow\">personal loans</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36','',0,0),(157,33,'accenia','lgaerfkls0@qmails.pro','','5.188.210.27','2019-08-29 21:17:08','2019-08-29 19:17:08','Buy cialis online in america <a href=\"http://cialisgenbrx.com/#\" rel=\"nofollow\">generic cialis</a> generique cialis 20mg <a href=\"https://cialisrxche.com/#\" rel=\"nofollow\">generic cialis online</a> quick small loans <a href=\"http://paydaystip.com/#\" rel=\"nofollow\">personal loans</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36 Kinza/4.7.2','',0,0),(158,33,'frernwor','lgaerfkls1@qmails.pro','','5.188.210.27','2019-08-29 21:44:45','2019-08-29 19:44:45','Lilly brand cialis buy ontario cialis <a href=\"http://cialisgenbrx.com/#\" rel=\"nofollow\">online cialis</a> walgreens cialis online pharmacy <a href=\"https://cialisrxche.com/#\" rel=\"nofollow\">generic cialis</a> loan fast <a href=\"http://paydaystip.com/#\" rel=\"nofollow\">payday loans online</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(159,183,'Anthony Russell','info@deximinvestmentsolutionsukltd.com','https://www.google.com/','193.7.200.60','2019-09-03 16:46:19','2019-09-03 14:46:19','Good day, \r\n \r\nI am reaching out to you based on a request from a profiled client who is looking for a potential investment opportunity within your scope of business . \r\n \r\nDetails of investment proposal will be sent out to you on reading back from you as we deem it necessary to seek for your consent prior to any formal exchange of material information relating to the Subject matter . \r\n \r\nI look forward to your earliest response , please do contact me directly only via my private email address stated below . \r\n \r\n \r\nKind Regards, \r\n \r\nAnthony Russell \r\nManaging Partner \r\nTel Line: +447440934362 \r\nEmail : anthonyrussell@deximinvestmentsolutionsukltd.com',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(160,37,'Leisa Peddie','Milfort87082@hotmail.com','https://opensourcebridge.science/wiki/10_Reasons_Why_You_Need_To_Buy_Active_Instagram_Followers_Today','5.189.134.56','2019-09-05 13:12:36','2019-09-05 11:12:36','I precisely wished to thank you so much once more. I am not sure what I would\'ve created in the absence of those strategies discussed by you relating to such topic. It absolutely was the scary circumstance for me, however , noticing your expert tactic you resolved it forced me to cry for delight. I will be happier for your guidance and pray you comprehend what a powerful job you were doing teaching others through the use of a site. Probably you haven\'t met all of us.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(161,212,'Ressie Pioche','Hjelm53228@hotmail.com','http://www.chimisal.it/index.php?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=756495','5.189.134.56','2019-09-05 16:04:48','2019-09-05 14:04:48','Hi, I think your blog might be having browser compatibility issues. When I look at your website in Ie, it looks fine but when opening in Internet Explorer, it has some overlapping. I just wanted to give you a quick heads up! Other then that, very good blog!',0,'1','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(162,116,'Rey Mcsweeney','Quaile60704@hotmail.com','https://zenwriting.net/cbdoiloilcapsules01/cbd-oil-capsules-products','5.189.134.56','2019-09-05 21:56:57','2019-09-05 19:56:57','Hello. magnificent job. I did not anticipate this. This is a fantastic story. Thanks!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(163,33,'Marshall Nevland','Mosbey14685@hotmail.com','http://galbraithbossen42.xtgem.com/__xt_blog/__xtblog_entry/14089382-why-should-you-purchase-instagram-followers#xt_blog','5.189.134.56','2019-09-06 00:20:04','2019-09-05 22:20:04','Whats up very cool blog!! Man .. Excellent .. Amazing .. I will bookmark your site and take the feeds also…I am glad to search out numerous useful info right here in the submit, we want work out extra strategies in this regard, thank you for sharing. . . . . .',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(164,37,'Rubin Bedlion','Herry10167@hotmail.com','https://wanelo.co/glerupglerup69','5.189.134.56','2019-09-06 03:41:22','2019-09-06 01:41:22','With havin so much content do you ever run into any problems of plagorism or copyright infringement? My blog has a lot of exclusive content I\'ve either written myself or outsourced but it looks like a lot of it is popping it up all over the web without my permission. Do you know any methods to help stop content from being ripped off? I\'d truly appreciate it.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(165,39,'Lashell Turnblom','Kilgallon54645@hotmail.com','https://forums.huduser.gov/member.php?action=profile&amp;uid=297538','5.189.134.56','2019-09-06 03:46:30','2019-09-06 01:46:30','Good web site! I truly love how it is simple on my eyes and the data are well written. I am wondering how I could be notified when a new post has been made. I\'ve subscribed to your RSS which must do the trick! Have a great day!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(166,43,'Heide Prins','Defrang35990@hotmail.com','http://www.cattedralepozzuoli.it/index.php?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=1400050','5.189.134.56','2019-09-06 12:55:21','2019-09-06 10:55:21','You made some decent points there. I looked on the internet for the subject matter and found most individuals will agree with your blog.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(167,43,'Josie Choiniere','choiniere@centtip.xyz','https://www.centtip.xyz/roi','106.110.55.46','2019-09-06 15:50:02','2019-09-06 13:50:02','We Can Maximize Your Marketing ROI - 8-10x\r\n\r\nMy name is Josie and I am the founder at Centtip. We work with organizations like Native Ads, Inc. to  provide native advertising.\r\n\r\nNative advertising is essentially an ad that’s disguised as original content by the platform.There is less resistance from the consumer and attract more genuine interest.\r\n\r\nNative ads often see up to 8-10x higher CTRs than banner ads. HIGHER click through rates ultimately INCREASE your ROI.\r\n\r\nInterest? Take 10 minutes to explore, we\'re looking forward to working with you: https://www.centtip.xyz/roi\r\n\r\nCheers,\r\nJosie Choiniere\r\n\r\nUnsubscribe: send“no more”',0,'spam','Mozilla/5.0 (X11; Linux x86_64; rv:52.9) Gecko/20100101 Goanna/3.4 Firefox/52.9 PaleMoon/27.9.2','',0,0),(168,39,'Yonqgom','sunnaq@mail.ru','https://clck.ru/DwfTp','77.233.20.112','2019-09-10 09:02:29','2019-09-10 07:02:29','<a href=\"https://clck.ru/DwfTp\" rel=\"nofollow\">Лучший Хакерский сайт \"Творческая Лаборатория DedicateT\"</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(169,33,'tigree','oskudfert0@qmails.pro','','5.188.210.27','2019-09-11 19:38:06','2019-09-11 17:38:06','Generic cialis is it safe <a href=\"http://cialischmrx.com/#\" rel=\"nofollow\">buy generic cialis</a> canada generic cialis prices buy <a href=\"http://cialisdbrx.com/#\" rel=\"nofollow\">cialis cost</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(170,33,'SipPhype','oskudfert2@qmails.pro','','5.188.210.27','2019-09-11 19:38:06','2019-09-11 17:38:06','Cialis tablets uk <a href=\"http://mrxcialisrx.com/#\" rel=\"nofollow\">cialis online</a> viagra in canada <a href=\"http://viagramrxgeneric.com/#\" rel=\"nofollow\">cheap viagra online</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36 OPR/55.0.2994.44','',0,0),(171,33,'Dedamano','oskudfert1@qmails.co','','5.188.210.28','2019-09-11 23:02:53','2019-09-11 21:02:53','Edrugstore cialis pills <a href=\"http://cialisherrx.com/#\" rel=\"nofollow\">cialis</a> viagra online prices cialis levitra <a href=\"http://cialismdmarx.com/#\" rel=\"nofollow\">buy cialis online</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(172,33,'loyasoug','oskudfert1@qmails.pro','','5.188.210.27','2019-09-11 23:40:24','2019-09-11 21:40:24','Metformin onset cialis generic pills <a href=\"http://cialischbrx.com/#\" rel=\"nofollow\">buy generic cialis</a> vicodin identify buy cialis online buy <a href=\"http://cialisknfrx.com/#\" rel=\"nofollow\">buy cheap cialis</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36','',0,0),(173,33,'Alidige','oskudfert0@qmails.co','','5.188.210.28','2019-09-12 07:36:59','2019-09-12 05:36:59','Viagra where can i buy it <a href=\"http://chviagranrxusa.com/#\" rel=\"nofollow\">viagra online</a> cialis brand name online 20mg <a href=\"http://cialismnrx.com/#\" rel=\"nofollow\">buy cheap cialis coupon</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(174,33,'Illump','oskudfert2@qmails.co','','5.188.210.28','2019-09-13 04:20:40','2019-09-13 02:20:40','Cheap cialis pills <a href=\"http://cialismrxcialis.com/#\" rel=\"nofollow\">buy cheap cialis online</a> buy viagra online without prescriptions <a href=\"http://genviagramdmrx.com/#\" rel=\"nofollow\">generic viagra online</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(175,33,'Nitsuili','plsolserq0@qmails.pro','','5.188.210.27','2019-09-18 10:13:39','2019-09-18 08:13:39','Overdose on cialis pharmacy <a href=\"http://bmorelan.com/#\" rel=\"nofollow\">cialis</a> buy cialis online canada buy <a href=\"http://gamingpromo.com/#\" rel=\"nofollow\">cialis cheap</a> cheap cialis australia <a href=\"http://editaisbrasil.com.br/#\" rel=\"nofollow\">buy cialis</a> buy generic cialis online uk <a href=\"http://globalkos.org/#\" rel=\"nofollow\">buy cheap cialis online</a> risks buy tadalafil <a href=\"http://highbluewave.com/#\" rel=\"nofollow\">buy generic cialis online</a> cialis compare prices',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36 Kinza/4.7.2','',0,0),(176,33,'sorcyclE','plsolserq1@qmails.pro','','5.188.210.27','2019-09-18 11:06:26','2019-09-18 09:06:26','Generic cialis 20mg best buy cancun <a href=\"http://bcsalaska.com/#\" rel=\"nofollow\">generic cialis online</a> viagra beograd buy cialis online <a href=\"http://carbarnofcolumbia.com/#\" rel=\"nofollow\">cheap cialis</a> cialis professional online <a href=\"http://clubconfuse.com/#\" rel=\"nofollow\">Buy Cialis Online</a> emedicine viagra cialis pills <a href=\"http://ebizclass.com/#\" rel=\"nofollow\">cialis coupon</a> official site cialis pills <a href=\"http://bettychoyce.com/#\" rel=\"nofollow\">buy generic cialis</a> us pharmacy cialis generic medications',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(177,33,'inpubre','plsolserq2@qmails.pro','','5.188.210.27','2019-09-18 12:20:01','2019-09-18 10:20:01','Online order cialis overnight delivery <a href=\"http://almelafalturki.com/#\" rel=\"nofollow\">cialis</a> cheap online female cialis ciali s <a href=\"http://drewandersonphoto.com/#\" rel=\"nofollow\">cialis cheap</a> mixing viagra cialis generic cialis <a href=\"http://agoralabs.com/#\" rel=\"nofollow\">online cialis</a> next day brand cialis only online <a href=\"http://dcbarr.com/#\" rel=\"nofollow\">cialis</a> cialis soft tabs online pharmacy <a href=\"http://chorrera.com/#\" rel=\"nofollow\">buy cialis online</a> order cialis online without a prescription grapefruit juice',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(178,39,'UK Yellow Pages Scraper by Creative Bear Tech','vapery.com@gmail.com','https://creativebeartech.com','46.4.230.244','2019-09-19 13:59:44','2019-09-19 11:59:44','I am the head developer for the E mail Extractor and Search Engine Harvester by Creative Bear Tech - https://creativebeartech.com. In summary, this internet search engine scraper can scrape the majority of the search engines, featuring Google, Bing, AOL, Yandex alongside social media networks including Facebook, Instagram, Twitter, LinkedIn, Yellow Pages, Google Maps and a lot more. I believe it will be much easier if you read through the detailed guide at https://blockchainlifemag.com/2019/05/21/guide-email-extractor-and-search-engine-scraper-by-creative-bear-tech. The application is not official yet, but immediately after it is, it will be accessible on https://creativebeartech.com We are presently beta testing the software and seeking beta tester and software reviewers. You will be given the full licence key for the computer software and can even scrape B2B contact details for your own specialized niche. If interested, please give me a shout on Facebook https://www.facebook.com/Creative-Bear-Tech-2284249764963533/or just respond to this thread.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(179,43,'Muriel Roybal','Eyer@gmail.com','https://www.ted.com/profiles/13856174','23.83.179.202','2019-09-19 14:44:14','2019-09-19 12:44:14','First off I would like to say fantastic blog! I had a quick question that I\'d like to ask if you do not mind. I was interested to know how you center yourself and clear your mind prior to writing. I\'ve had a difficult time clearing my mind in getting my thoughts out there. I truly do take pleasure in writing but it just seems like the first 10 to 15 minutes are generally wasted simply just trying to figure out how to begin. Any suggestions or tips? Kudos!|',0,'1','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(180,43,'Armandina Lyell','Hoh@gmail.com','http://qna.nueracity.com/index.php?qa=user&amp;qa_1=bean75maclean','107.173.68.235','2019-09-19 14:44:46','2019-09-19 12:44:46','hey there and thank you for your info – I have certainly picked up anything new from right here. I did however expertise some technical issues using this web site, as I experienced to reload the site a lot of times previous to I could get it to load correctly. I had been wondering if your hosting is OK? Not that I am complaining, but slow loading instances times will often affect your placement in google and can damage your quality score if ads and marketing with Adwords. Well I\'m adding this RSS to my e-mail and could look out for a lot more of your respective fascinating content. Ensure that you update this again soon.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(181,39,'Peaches and Screams','info@vapingshop.nl','http://www.claddaghbodhrans.com/how-has-been-the-journey-of-b2b-business-concept/','5.62.43.161','2019-09-19 17:50:15','2019-09-19 15:50:15','Has anyone shopped at https://peachesandscreams.co.uk I wanted to buy their Kisses Of Gold Gown as a small Christmas gift for my companion .',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(182,41,'Hairstyles','Osofsky@gmail.com','https://www.hairstylescool.com','113.81.30.103','2019-09-19 23:26:44','2019-09-19 21:26:44','Heya i抦 for the first time here. I found this board and I find It truly useful &amp; it helped me out much. I hope to give something back and aid others like you aided me.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(183,43,'Hairstyles','Ollar@gmail.com','https://www.hairstylescool.com','113.81.30.103','2019-09-19 23:53:57','2019-09-19 21:53:57','Hey There. I found your blog using msn. This is a really well written article. I抣l be sure to bookmark it and return to read more of your useful info. Thanks for the post. I抣l certainly return.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(184,41,'Hairstyles','YongPomar@gmail.com','https://www.hairstylesvip.com','183.30.184.198','2019-09-20 04:19:58','2019-09-20 02:19:58','I do believe all of the ideas you have presented for your post. They are really convincing and can definitely work. Nonetheless, the posts are too brief for novices. May just you please extend them a little from subsequent time? Thanks for the post.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(185,43,'GuQin','LesleeLuft@gmail.com','http://www.guqinz.com','183.30.184.198','2019-09-20 04:59:55','2019-09-20 02:59:55','Hey there! I\'ve been reading your web site for some time now and finally got the bravery to go ahead and give you a shout out from  Lubbock Texas! Just wanted to tell you keep up the great job!',0,'1','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(186,39,'CBD Drip','sales@skyvape.co.uk','https://wowitloveithaveit.com/','31.3.152.144','2019-09-20 14:29:17','2019-09-20 12:29:17','Hi everybody! I was pondering whether anyone would love to register with me as a hemp and CBD goods reviewer? I have actually been given a bunch of cbd products from reputable brand names for example, NakedCBD I also have a lot of CBD and hemp products to send to CBD and hemp reviewers, consisting of CBD CARTRIDGES, CBD GUMMIES and CBD Syrup I also do vape reviews and am seeking a vape reviewer also to review the following eliquid brand names (will be shipped to you): Big League-juices, Elusive E-Juice and Poparazzi E-Liquid Thanks guys and have a fabulous day! You can reach me at https://allcbdstores.com',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(187,33,'Ramdrory','plsolserq1@qmails.pro','','5.188.210.27','2019-09-21 08:18:33','2019-09-21 06:18:33','Cialis on <a href=\"http://clubconfuse.com/#\" rel=\"nofollow\">generic cialis online</a> sell cialis generic <a href=\"http://gamingpcunder.com/#\" rel=\"nofollow\">cheap cialis online</a> viagra fact sheet cialis generic <a href=\"http://crescentactivitybank.co.uk/#\" rel=\"nofollow\">cheap cialis</a> mail order cialis <a href=\"http://hangar18.org/#\" rel=\"nofollow\">cialis generic</a> cialis generic cheap viagra <a href=\"http://christpreschurch.org/#\" rel=\"nofollow\">buy cialis online cheap</a> generic cialiscanada',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/17.17134','',0,0),(188,33,'Seache','plsolserq0@qmails.pro','','5.188.210.27','2019-09-21 10:45:31','2019-09-21 08:45:31','Tadalafil wiki buy generic cialis <a href=\"http://beiradapraia.com.br/#\" rel=\"nofollow\">cheap cialis</a> what are cialis tablets cialis <a href=\"http://geeknaveia.com.br/#\" rel=\"nofollow\">buy cialis online</a> cialis 10mg <a href=\"http://house2let.co.uk/#\" rel=\"nofollow\">cialis cheap</a> buy cialis online without prescripition <a href=\"http://bmorelan.com/#\" rel=\"nofollow\">buy cheap cialis online</a> buy generic cialis soft <a href=\"http://cosmeticgid.com/#\" rel=\"nofollow\">cialis cheap</a> cialis pharmacy cheap viagra buy',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36','',0,0),(189,33,'heanda','plsolserq2@qmails.pro','','5.188.210.27','2019-09-21 19:38:33','2019-09-21 17:38:33','Cialis 40 mg tablets cialis <a href=\"http://dcbarr.com/#\" rel=\"nofollow\">buy cialis</a> and cialis pharmacy paxil <a href=\"http://bedsgolfunion.org/#\" rel=\"nofollow\">buy generic cialis</a> viagra muscle pain cialis tablets <a href=\"http://atrativaweb.com.br/#\" rel=\"nofollow\">cialis online</a> low cost cialis generic <a href=\"http://chorrera.com/#\" rel=\"nofollow\">Buy Cheap Cialis Online</a> buy online cheap cialis generic <a href=\"http://camprv.com/#\" rel=\"nofollow\">cheap cialis</a> generic cialis pro',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.64','',0,0),(190,33,'Assauri','oskudfert1@qmails.co','','5.188.210.28','2019-09-21 20:19:09','2019-09-21 18:19:09','Cialis pills over the counter <a href=\"http://cialisherrx.com/#\" rel=\"nofollow\">buy cialis</a> cialis offer <a href=\"http://cialismdmarx.com/#\" rel=\"nofollow\">cialis cheap</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(191,33,'eryday','oskudfert2@qmails.co','','5.188.210.28','2019-09-22 00:18:20','2019-09-21 22:18:20','Heartburn cialis online pharmacy <a href=\"http://cialismrxcialis.com/#\" rel=\"nofollow\">buy cheap cialis online</a> viagra logo <a href=\"http://genviagramdmrx.com/#\" rel=\"nofollow\">buy viagra</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(192,33,'Onevear','oskudfert0@qmails.co','','5.188.210.28','2019-09-22 03:55:37','2019-09-22 01:55:37','When does viagra go generic <a href=\"http://chviagranrxusa.com/#\" rel=\"nofollow\">buy viagra</a> experiences cialis 20mg <a href=\"http://cialismnrx.com/#\" rel=\"nofollow\">buy cialis online</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36 Kinza/4.9.1','',0,0),(193,39,'ukakiyagu','azaqifoa@gmail.com','http://mewkid.net/order-cialis/#ilnujeeki-w','62.210.83.206','2019-09-23 21:55:31','2019-09-23 19:55:31','cmlrZS5kZXY# <a href=\'http://mewkid.net/order-cialis/#ilnujeeki-a\' rel=\"nofollow\">ilnujeeki-a.anchor.com</a> [URL=http://mewkid.net/order-cialis/#ilnujeeki-u]ilnujeeki-u.anchor.com[/URL] http://mewkid.net/order-cialis/#ilnujeeki-t http://mewkid.net/order-cialis/#ilnujeeki-t http://mewkid.net/order-cialis/#ilnujeeki-t http://mewkid.net/order-cialis/#ilnujeeki-t http://mewkid.net/order-cialis/#ilnujeeki-t http://mewkid.net/order-cialis/#ilnujeeki-t http://mewkid.net/order-cialis/#ilnujeeki-t http://mewkid.net/order-cialis/#ilnujeeki-t ipiwidavn',0,'spam','Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20100101 Firefox/21.0','',0,0),(194,10,'StevAbraro','carrington@miki7.site','http://lapizmoon.com','5.188.84.76','2019-09-23 23:35:35','2019-09-23 21:35:35','Buy Clomid Tablets Online. Cialis Vente Libre Pharmacie France  <a href=\"http://ordercheapvia.com\" rel=\"nofollow\">viagra</a> Cephalexin No Prescription',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(195,39,'Freebies Samples','Winkleman@gmail.com','https://www.cravefreebies.com/free-samples/','113.81.31.165','2019-09-23 23:45:33','2019-09-23 21:45:33','Crave Freebies is updated everyday with new Free stuff, Free samples, Special offers, Coupons and US freebies. www.cravefreebies.com We update our website daily with new US freebies.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(196,212,'StevAbraro','carrington@miki7.site','http://aquedan.com','5.188.84.76','2019-09-24 03:45:19','2019-09-24 01:45:19','What Is Cephalexin Prescribed To Treat Cheapest Canada Drugs Online Pharmacy  <a href=\"http://buycial.com\" rel=\"nofollow\">cheapest cialis 20mg</a> Cialis Ingrediente Activo Boite Propecia Ambilfy Without Prescription',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(197,33,'groomi','oskudfert0@qmails.pro','','5.188.210.27','2019-09-24 15:48:12','2019-09-24 13:48:12','Order cheap cialis online cialis <a href=\"http://cialischmrx.com/#\" rel=\"nofollow\">generic cialis</a> cialis 5mg price online canadian pharmacy <a href=\"http://cialisdbrx.com/#\" rel=\"nofollow\">cheap cialis</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.68','',0,0),(198,33,'Riskefs','oskudfert1@qmails.pro','','5.188.210.27','2019-09-24 19:33:29','2019-09-24 17:33:29','Comprare cialis online pharmacy <a href=\"http://cialischbrx.com/#\" rel=\"nofollow\">cialis online</a> us cialis online pharmacy buy viagra cialis a <a href=\"http://cialisknfrx.com/#\" rel=\"nofollow\">buy cheap cialis</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(199,33,'orbipt','oskudfert2@qmails.pro','','5.188.210.27','2019-09-24 19:54:08','2019-09-24 17:54:08','Buy generic cialis online without prescription <a href=\"http://mrxcialisrx.com/#\" rel=\"nofollow\">buy cheap cialis coupon</a> how does viagra work <a href=\"http://viagramrxgeneric.com/#\" rel=\"nofollow\">buy viagra</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.71','',0,0),(200,39,'elojolupu','uquvehe@eerr.namnerbca.com','http://mewkid.net/order-amoxicillin/','37.115.220.147','2019-09-26 17:34:59','2019-09-26 15:34:59','http://mewkid.net/order-amoxicillin/ - Online Amoxicillin <a href=\"http://mewkid.net/order-amoxicillin/\" rel=\"nofollow\">Amoxicillin 500mg Capsules</a> kkz.kuay.rike.dev.tru.hn http://mewkid.net/order-amoxicillin/',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.51','',0,0),(201,39,'cefidagonagu','inowot@eerr.namnerbca.com','http://mewkid.net/order-amoxicillin/','37.115.220.147','2019-09-26 18:00:16','2019-09-26 16:00:16','http://mewkid.net/order-amoxicillin/ - Amoxicillin 500mg Capsules <a href=\"http://mewkid.net/order-amoxicillin/\" rel=\"nofollow\">Amoxicillin 500mg Capsules</a> wqq.cmfu.rike.dev.tge.zo http://mewkid.net/order-amoxicillin/',0,'spam','Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36','',0,0),(202,24,'StevAbraro','carrington@miki7.site','http://mpphr.com','5.188.84.76','2019-09-27 05:11:00','2019-09-27 03:11:00','Amoxicillin Allergy Image Cialis Drogue Cialis Pils Cost  <a href=\"http://avdrug.com\" rel=\"nofollow\">levitra femme</a> Cephalexin And Drug Interactions',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(203,41,'Waltner','patrizia@hotmail.com','https://en.wikipedia.org/wiki/Free_fall','162.212.172.244','2019-09-27 09:24:06','2019-09-27 07:24:06','Discovered this article curious, added to reddit',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(204,39,'Hairstyles Look','Letts@gmail.com','https://www.hairstyleslook.com','183.30.180.179','2019-09-27 11:43:37','2019-09-27 09:43:37','Hmm it looks like your blog ate my first comment (it was extremely long) so I guess I\'ll just sum it up what I wrote and say, I\'m thoroughly enjoying your blog. I too am an aspiring blog blogger but I\'m still new to everything. Do you have any tips and hints for newbie blog writers? I\'d definitely appreciate it.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(205,43,'Freebies Samples','Vanduynhoven@gmail.com','https://www.cravefreebies.com/free-samples/','183.30.180.179','2019-09-27 12:00:27','2019-09-27 10:00:27','Valuable info. Lucky me I found your website by accident, and I am shocked why this accident did not happened earlier! I bookmarked it.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(206,212,'Rochelle','pedro@gmail.com','https://en.wikipedia.org/wiki/Free_fall','104.129.40.66','2019-09-28 08:03:19','2019-09-28 06:03:19','Discovered this article curious, added to mixx',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(207,183,'Patrickhed','briandok@viagrabestbuyrx.com','https://viagrabestbuyrx.com/','5.188.84.23','2019-09-28 13:35:38','2019-09-28 11:35:38','You said this fantastically. \r\n \r\nrosacea viagra \r\n<a href=\"https://viagrabestbuyrx.com/\" rel=\"nofollow\">https://viagrabestbuyrx.com/</a> \r\nviagra target market men age \r\n<a href=\"https://viagrabestbuyrx.com/\" / rel=\"nofollow\">https://viagrabestbuyrx.com/</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(208,183,'StevAbraro','carrington@miki7.site','http://mdsmeds.com','5.188.84.76','2019-09-30 00:42:05','2019-09-29 22:42:05','Fa Male Finasteride Propecia  <a href=\"http://etrobax.com\" rel=\"nofollow\">viagra vs cialis</a> Prix Viagra Pharmacie Suisse Is Amoxicillin Good For Treating Plurisey Avis Site Vente Kamagra',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(209,39,'Hairstyles VIP','Kuhne@gmail.com','https://www.hairstylesvip.com','183.30.181.230','2019-09-30 00:54:35','2019-09-29 22:54:35','Thanks for your information on this blog. One thing I want to say is always that purchasing gadgets items on the Internet is not something new. In fact, in the past several years alone, the market for online consumer electronics has grown a great deal. Today, you\'ll find practically any specific electronic tool and gizmo on the Internet, which include cameras in addition to camcorders to computer parts and games consoles.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(210,39,'Hairstyles','Shisila@gmail.com','https://www.hairstyleslook.com','183.30.181.230','2019-09-30 02:04:47','2019-09-30 00:04:47','Thanks for the auspicious writeup. It in fact was once a enjoyment account it. Look advanced to far added agreeable from you! However, how can we communicate?',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(212,41,'Cromer','patrizia@hotmail.com','https://en.wikipedia.org/wiki/Free_fall','196.196.88.134','2019-10-01 02:57:10','2019-10-01 00:57:10','Thanks for telling this article and making it public',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(213,39,'Hair Styles','Exe@gmail.com','https://www.hairstylesvip.com','183.30.181.230','2019-10-01 05:15:50','2019-10-01 03:15:50','Things i have observed in terms of pc memory is there are technical specs such as SDRAM, DDR etc, that must match up the requirements of the mother board. If the computer\'s motherboard is rather current and there are no computer OS issues, changing the ram literally usually takes under an hour or so. It\'s one of many easiest computer system upgrade types of procedures one can consider. Thanks for discussing your ideas.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(216,39,'owkaqiquye','aguwoxe@imap.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.180.146','2019-10-01 20:50:48','2019-10-01 18:50:48','http://mewkid.net/buy-xalanta/ - Buy Amoxicillin Online Without Prescription <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin No Prescription</a> rwg.rthz.rike.dev.ikn.rb http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/17.17134','',0,0),(217,39,'imeqehim','oevfihu@imap.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.180.146','2019-10-01 21:01:24','2019-10-01 19:01:24','http://mewkid.net/buy-xalanta/ - Amoxicillin 500mg <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Buy Amoxicillin</a> rxx.azpu.rike.dev.ysu.ju http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(218,116,'sirgliofrei','Betton54029@gmail.com','http://www.sirgliofrei.com/','107.167.92.82','2019-10-01 21:25:23','2019-10-01 19:25:23','I got what you intend, appreciate it for posting.Woh I am thankful to find this website through google.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(219,39,'ohibarinuwu','tatimoda@mail.namnerbca.com','http://mewkid.net/buy-xalanta/','5.248.165.110','2019-10-02 01:21:06','2019-10-01 23:21:06','http://mewkid.net/buy-xalanta/ - Amoxil Causes Gallstones <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin Without Prescription</a> sxd.xctj.rike.dev.ojc.id http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.99','',0,0),(220,39,'ipusqigp','evurofobo@mail.namnerbca.com','http://mewkid.net/buy-xalanta/','5.248.165.110','2019-10-02 01:52:59','2019-10-01 23:52:59','http://mewkid.net/buy-xalanta/ - Amoxicillin <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin Online</a> whb.altl.rike.dev.yfb.ej http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(221,39,'imenato','iyokude@pop4.iennfdd.com','http://mewkid.net/buy-xalanta/','195.154.242.89','2019-10-02 05:24:55','2019-10-02 03:24:55','http://mewkid.net/buy-xalanta/ - Amoxil <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500 Mg</a> toz.zwxd.rike.dev.bou.vu http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.62 Safari/537.36','',0,0),(222,39,'enubaxol','esaqevo@pop4.iennfdd.com','http://mewkid.net/buy-xalanta/','195.154.242.89','2019-10-02 05:42:08','2019-10-02 03:42:08','http://mewkid.net/buy-xalanta/ - Amoxicillin Without Prescription <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500 Mg</a> ous.zjlr.rike.dev.ezu.uk http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 Edge/16.16299','',0,0),(223,43,'sirglio frei','Bouza77074@gmail.com','http://www.sirgliofrei.com/','107.167.94.198','2019-10-02 07:06:05','2019-10-02 05:06:05','Thanks for all your efforts that you have put in this. very interesting info .',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(224,39,'uzemogo','ajuxip@asdff.iennfdd.com','http://mewkid.net/buy-xalanta/','195.154.226.67','2019-10-02 09:05:30','2019-10-02 07:05:30','http://mewkid.net/buy-xalanta/ - Amoxicillin 500 Mg <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin</a> yah.xzgu.rike.dev.iqp.kp http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(225,39,'ovowagiboxuri','okupuhi@asdff.iennfdd.com','http://mewkid.net/buy-xalanta/','195.154.226.67','2019-10-02 09:22:12','2019-10-02 07:22:12','http://mewkid.net/buy-xalanta/ - Amoxicillin Without Prescription <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin Without Prescription</a> kbo.plzr.rike.dev.bot.mo http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.62 Safari/537.36','',0,0),(226,39,'otocotig','ukokege@mail.namnerbca.com','http://mewkid.net/buy-xalanta/','5.248.165.110','2019-10-02 12:55:27','2019-10-02 10:55:27','http://mewkid.net/buy-xalanta/ - Amoxicillin 500 Mg <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500mg</a> ira.rivy.rike.dev.aeu.ki http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36 Kinza/4.8.2','',0,0),(227,39,'utumuesoni','ugorehej@mail.namnerbca.com','http://mewkid.net/buy-xalanta/','5.248.165.110','2019-10-02 13:25:28','2019-10-02 11:25:28','http://mewkid.net/buy-xalanta/ - Buy Amoxicillin <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500mg Capsules</a> xni.qaxj.rike.dev.lbo.yy http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(228,39,'ucuihust','idicop@mail.namnerbca.com','http://mewkid.net/buy-xalanta/','5.248.165.110','2019-10-02 13:52:34','2019-10-02 11:52:34','http://mewkid.net/buy-xalanta/ - Amoxil <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500 Mg</a> pzv.lrmk.rike.dev.kjg.th http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(230,39,'eaizzwoge','popuji@imap.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.180.146','2019-10-02 17:08:11','2019-10-02 15:08:11','http://mewkid.net/buy-xalanta/ - Amoxicillin <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin On Line</a> dxh.yhcx.rike.dev.hfv.jf http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(231,39,'uzejaquhuu','xebeco@imap.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.180.146','2019-10-02 17:17:53','2019-10-02 15:17:53','http://mewkid.net/buy-xalanta/ - Buy Amoxicillin Online <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Buy Amoxicillin</a> wln.uogi.rike.dev.gnu.zq http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36 Kinza/4.9.1','',0,0),(232,39,'azaqnekagi','inivija@prooor.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.139.12','2019-10-02 21:19:42','2019-10-02 19:19:42','http://mewkid.net/buy-xalanta/ - Amoxicillin No Prescription <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin Online</a> lhb.viwq.rike.dev.iey.fw http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36','',0,0),(233,39,'avamudu','tiluma@prooor.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.139.12','2019-10-02 21:29:47','2019-10-02 19:29:47','http://mewkid.net/buy-xalanta/ - Buy Amoxicillin <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin Without Prescription</a> cjk.rpqw.rike.dev.azg.wg http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(234,20,'StevAbraro','carrington@miki7.site','http://uscagsa.com','5.188.84.76','2019-10-02 22:27:15','2019-10-02 20:27:15','Amoxicillin For Uterine Infection  <a href=\"http://aquedan.com\" rel=\"nofollow\">vytorin</a> Buy Lipitor Online With No Prescription Propecia Peluqueria Hydroxyzine Over The Counter',0,'spam','Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(235,39,'oyaduwiikes','urasuv@pop4.iennfdd.com','http://mewkid.net/buy-xalanta/','195.154.242.89','2019-10-03 03:57:35','2019-10-03 01:57:35','http://mewkid.net/buy-xalanta/ - Amoxicillin Online <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500mg</a> qic.vxmt.rike.dev.pua.ar http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.51','',0,0),(236,39,'feganeguwu','olofedunu@pop4.iennfdd.com','http://mewkid.net/buy-xalanta/','195.154.242.89','2019-10-03 04:16:29','2019-10-03 02:16:29','http://mewkid.net/buy-xalanta/ - Amoxicillin 500 Mg <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500mg Capsules</a> lfg.navr.rike.dev.cnb.ss http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36','',0,0),(237,43,'high end vibrators','Stovel@fargus.eu','https://www.youtube.com/watch?v=dvIUDh6o3Ws','89.28.87.196','2019-10-03 07:17:06','2019-10-03 05:17:06','I really enjoy the article post.Really thank you! Really Great.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(238,39,'uhovocave','apavuo@mail.iennfdd.com','http://mewkid.net/buy-xalanta/','195.154.226.67','2019-10-03 09:57:08','2019-10-03 07:57:08','http://mewkid.net/buy-xalanta/ - Dosage For Amoxicillin 500mg <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500mg Capsules</a> lxc.svvh.rike.dev.gse.zu http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(239,39,'amepayu','upupikom@mailmail.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.180.146','2019-10-03 12:30:09','2019-10-03 10:30:09','http://mewkid.net/buy-xalanta/ - Amoxicillin <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500 Mg</a> lxk.uakk.rike.dev.mtp.gg http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(240,39,'uvepuzu','obtubumez@mailmail.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.180.146','2019-10-03 12:39:29','2019-10-03 10:39:29','http://mewkid.net/buy-xalanta/ - Amoxicillin 500mg Dosage <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500mg Capsules</a> iwq.evhy.rike.dev.ent.ax http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.68','',0,0),(241,39,'esepayocixir','uyoseuob@pop3.namnerbca.com','http://mewkid.net/buy-xalanta/','5.248.165.110','2019-10-03 16:11:15','2019-10-03 14:11:15','http://mewkid.net/buy-xalanta/ - Amoxicillin 500mg <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Buy Amoxicillin</a> zsf.lmij.rike.dev.ljc.ec http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(243,39,'yegolewehefa','izkohujil@pop3.namnerbca.com','http://mewkid.net/buy-xalanta/','5.248.165.110','2019-10-03 16:44:11','2019-10-03 14:44:11','http://mewkid.net/buy-xalanta/ - Amoxicillin 500 Mg <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin Online</a> lox.tsne.rike.dev.eli.oo http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(245,116,'/2019/04/20/get-a-csv-download-out-of-postgresql-or-lowdb-database-on-node-js/','caramccart@gmail.com','https://lemetfeldsmar.site123.me/blog/android-p-volume-slider-apk4free','37.44.252.129','2019-10-03 17:43:17','2019-10-03 15:43:17','If you desire to grow your familiarity only keep \r\nvisiting this website and be updated with \r\nthe most recent news posted here.',0,'spam','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.79 Safari/537.36 Maxthon/5.2.1.6000','',0,0),(246,39,'oofuwayu','ebabow@asd.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.139.12','2019-10-03 19:03:56','2019-10-03 17:03:56','http://mewkid.net/buy-xalanta/ - Amoxicillin 500mg Capsules <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500 Mg</a> hig.kckd.rike.dev.iys.bi http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36','',0,0),(247,39,'xkudozovofao','iteqow@ddf.manidn.com','http://mewkid.net/buy-xalanta/','5.188.211.100','2019-10-03 22:12:37','2019-10-03 20:12:37','http://mewkid.net/buy-xalanta/ - Amoxicillin Without Prescription <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Buy Amoxil</a> bdj.gquu.rike.dev.jda.ek http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.68','',0,0),(248,39,'ibimawuq','ozaseya@ddf.manidn.com','http://mewkid.net/buy-xalanta/','5.188.211.100','2019-10-03 22:22:26','2019-10-03 20:22:26','http://mewkid.net/buy-xalanta/ - 18 <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500mg Capsules</a> sae.slpu.rike.dev.pjc.ai http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36','',0,0),(249,39,'vabecijato','aqbuti@eerr.namnerbca.com','http://mewkid.net/buy-xalanta/','37.115.197.40','2019-10-04 01:17:24','2019-10-03 23:17:24','http://mewkid.net/buy-xalanta/ - Amoxicillin 500mg Capsules <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">18</a> auq.ulju.rike.dev.jdc.wg http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/17.17134','',0,0),(250,39,'avakajurabu','eyunocq@eerr.namnerbca.com','http://mewkid.net/buy-xalanta/','37.115.197.40','2019-10-04 01:42:10','2019-10-03 23:42:10','http://mewkid.net/buy-xalanta/ - Amoxicillin 500 Mg <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin</a> onk.zlyg.rike.dev.ebi.vv http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36','',0,0),(251,39,'xatawifuosedo','ixeyugobr@prooor.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.139.12','2019-10-04 04:16:05','2019-10-04 02:16:05','http://mewkid.net/buy-xalanta/ - Amoxicillin 500 Mg Dosage <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin No Prescription</a> fzg.icxn.rike.dev.wfq.hc http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(252,39,'abematuqoigup','oceriqi@prooor.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.139.12','2019-10-04 04:25:20','2019-10-04 02:25:20','http://mewkid.net/buy-xalanta/ - Buy Amoxicillin <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">18</a> tzw.eara.rike.dev.flo.vh http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36 Kinza/4.9.1','',0,0),(254,39,'evifumokiwuc','ubomovu@ddf.manidn.com','http://mewkid.net/buy-xalanta/','5.188.211.100','2019-10-04 07:27:37','2019-10-04 05:27:37','http://mewkid.net/buy-xalanta/ - Amoxicillin 500mg Capsules <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500 Mg</a> fen.qkgw.rike.dev.jnf.cw http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36','',0,0),(255,39,'ocuhuhezo','uyinjeya@ddf.manidn.com','http://mewkid.net/buy-xalanta/','5.188.211.100','2019-10-04 07:37:16','2019-10-04 05:37:16','http://mewkid.net/buy-xalanta/ - Amoxicillin <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxil Dose For 55 Pounds</a> ifr.vhnw.rike.dev.wuy.rs http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(256,39,'raoogisi','ewopizaj@pop4.iennfdd.com','http://mewkid.net/buy-xalanta/','195.154.242.89','2019-10-04 10:41:45','2019-10-04 08:41:45','http://mewkid.net/buy-xalanta/ - Amoxicillin No Prescription <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Buy Amoxil Online</a> rya.uinr.rike.dev.ile.nv http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(257,39,'upujxeing','egxiqaru@prooor.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.139.12','2019-10-04 13:25:12','2019-10-04 11:25:12','http://mewkid.net/buy-xalanta/ - Amoxil Dose For 55 Pounds <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin Without Prescription</a> agw.nbua.rike.dev.pse.zn http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.106','',0,0),(258,39,'oyuyeqxewocpi','qebuwuju@prooor.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.139.12','2019-10-04 13:34:34','2019-10-04 11:34:34','http://mewkid.net/buy-xalanta/ - Amoxicillin 500mg Capsules <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Buy Amoxicillin</a> zwy.vkxj.rike.dev.hbp.ui http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.54','',0,0),(259,39,'acogaaruna','ododocig@eerr.namnerbca.com','http://mewkid.net/buy-xalanta/','37.115.197.40','2019-10-04 20:10:01','2019-10-04 18:10:01','http://mewkid.net/buy-xalanta/ - Buy Amoxicillin <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Buy Amoxicillin Online</a> dmq.dpxp.rike.dev.scu.jw http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(260,39,'ijayicayifer','avoinim@eerr.namnerbca.com','http://mewkid.net/buy-xalanta/','37.115.197.40','2019-10-04 20:39:09','2019-10-04 18:39:09','http://mewkid.net/buy-xalanta/ - Amoxicillin <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin</a> uxm.xfcs.rike.dev.gbs.qm http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36','',0,0),(261,39,'ohubupdaxetxa','joxovu@imap.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.180.146','2019-10-04 23:09:19','2019-10-04 21:09:19','http://mewkid.net/buy-xalanta/ - Amoxicillin No Prescription <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Buy Amoxicillin Online Without Prescription</a> ijm.idvv.rike.dev.ecb.uc http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.75 Safari/537.36','',0,0),(262,39,'ixibowixuqi','ajakeruga@mailmail.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.180.146','2019-10-05 02:03:19','2019-10-05 00:03:19','http://mewkid.net/buy-xalanta/ - Buy Amoxicillin <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500 Mg</a> rwg.yoqx.rike.dev.arm.wr http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36','',0,0),(263,39,'apamosovejal','egapizuv@mailmail.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.180.146','2019-10-05 02:12:37','2019-10-05 00:12:37','http://mewkid.net/buy-xalanta/ - Amoxicillin 500mg Capsules <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Buy Amoxicillin Online</a> ujk.beoo.rike.dev.ess.bw http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.75 Safari/537.36','',0,0),(264,39,'sirglio frei','Mccaa57471@gmail.com','http://www.sirgliofrei.com/','107.167.94.238','2019-10-05 02:39:32','2019-10-05 00:39:32','You actually make it seem so easy along with your presentation but I find this topic to be actually one thing that I think I would never understand. It sort of feels too complex and very huge for me. I\'m looking ahead for your next publish, I’ll attempt to get the cling of it!',0,'1','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(265,39,'gilogagud','atamiweo@rr.manidn.com','http://mewkid.net/buy-xalanta/','5.188.211.100','2019-10-05 05:24:06','2019-10-05 03:24:06','http://mewkid.net/buy-xalanta/ - Amoxicillin Online <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500 Mg</a> hfc.tthn.rike.dev.maz.iq http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36 Kinza/4.9.1','',0,0),(266,39,'etavedosoome','apuhur@rr.manidn.com','http://mewkid.net/buy-xalanta/','5.188.211.100','2019-10-05 05:33:22','2019-10-05 03:33:22','http://mewkid.net/buy-xalanta/ - Amoxicillin 500mg Dosage <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500 Mg</a> fdw.auqz.rike.dev.uwz.ji http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(267,39,'uazkoifojapat','ozoyod@pop3.namnerbca.com','http://mewkid.net/buy-xalanta/','5.248.165.110','2019-10-05 05:34:33','2019-10-05 03:34:33','http://mewkid.net/buy-xalanta/ - Amoxicillin 500mg <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500mg</a> hwz.tkzq.rike.dev.xhu.cq http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(268,39,'casiretohuwa','imorauety@pop3.namnerbca.com','http://mewkid.net/buy-xalanta/','5.248.165.110','2019-10-05 06:03:29','2019-10-05 04:03:29','http://mewkid.net/buy-xalanta/ - Amoxicillin 500mg <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500 Mg</a> avv.vbdk.rike.dev.hhd.ov http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.99','',0,0),(269,39,'uazobot','aaedipa@email.namnerbca.com','http://mewkid.net/buy-xalanta/','37.115.197.40','2019-10-05 08:34:52','2019-10-05 06:34:52','http://mewkid.net/buy-xalanta/ - Buy Amoxil Online <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500 Mg Dosage</a> hvi.sgzl.rike.dev.qws.jv http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.64','',0,0),(270,39,'ebosoxepu','ubuvet@email.namnerbca.com','http://mewkid.net/buy-xalanta/','37.115.197.40','2019-10-05 09:10:10','2019-10-05 07:10:10','http://mewkid.net/buy-xalanta/ - Amoxicillin <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500mg Capsules</a> avt.afcg.rike.dev.yxc.wp http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(271,39,'Freelancer site for Vocals &amp; Instrumentals','Falsetta@bestfreelancesiteslist.com','https://sweatyquid.com/proposals/Olga/i-will-honestly-review-your-business-on-my-google-business-page','5.62.41.112','2019-10-05 09:10:51','2019-10-05 07:10:51','Hello I would like to use this as an opportunity to invite you to join Sweaty Quid, the leading marketplace for freelancers where you can hire freelancers for all your business needs as well as list and sell your own services for free. Get started right now and register at sweatyquid.com and give me a shout if you have any questions! I look forward to seeing you on Sweaty Quid',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(272,39,'icigutorod','oyeyuno@asd.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.139.12','2019-10-05 11:12:42','2019-10-05 09:12:42','http://mewkid.net/buy-xalanta/ - Amoxicillin 500 Mg <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin On Line</a> yrd.chmp.rike.dev.gnk.nz http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.71','',0,0),(273,39,'ejotexohumd','aheidahug@ddf.manidn.com','http://mewkid.net/buy-xalanta/','5.188.211.100','2019-10-05 13:49:31','2019-10-05 11:49:31','http://mewkid.net/buy-xalanta/ - Amoxicillin 500mg Capsules <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Buy Amoxicillin Online</a> rby.rnbr.rike.dev.jey.ad http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.71','',0,0),(274,39,'uuhefohux','aceces@ddf.manidn.com','http://mewkid.net/buy-xalanta/','5.188.211.100','2019-10-05 13:58:56','2019-10-05 11:58:56','http://mewkid.net/buy-xalanta/ - Amoxil Causes Gallstones <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500mg</a> swp.qcbr.rike.dev.red.ug http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(275,39,'iwrimeworia','ejenpodaj@imap.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.180.146','2019-10-05 17:13:17','2019-10-05 15:13:17','http://mewkid.net/buy-xalanta/ - Amoxil Causes Gallstones <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin No Prescription</a> cqz.jvpp.rike.dev.vjz.eb http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(276,39,'ukakepo','eqixuuj@imap.iennfdd.com','http://mewkid.net/buy-xalanta/','62.210.180.146','2019-10-05 17:23:25','2019-10-05 15:23:25','http://mewkid.net/buy-xalanta/ - Buy Amoxil Online <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500mg Capsules</a> hmo.adwr.rike.dev.atd.uv http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(277,39,'ejehiyalumo','igoqufuq@mail.namnerbca.com','http://mewkid.net/buy-xalanta/','5.248.165.110','2019-10-05 20:45:04','2019-10-05 18:45:04','http://mewkid.net/buy-xalanta/ - Dosage For Amoxicillin 500mg <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin Online</a> jvy.skjm.rike.dev.exa.mb http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 Edge/16.16299','',0,0),(278,39,'exabtdito','uwfusul@mail.namnerbca.com','http://mewkid.net/buy-xalanta/','5.248.165.110','2019-10-05 21:16:35','2019-10-05 19:16:35','http://mewkid.net/buy-xalanta/ - Amoxicillin Online <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500 Mg</a> itr.viep.rike.dev.yyi.oc http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.51','',0,0),(279,39,'owevabelinahg','ituvovu@mail.namnerbca.com','http://mewkid.net/buy-xalanta/','5.248.165.110','2019-10-05 21:43:19','2019-10-05 19:43:19','http://mewkid.net/buy-xalanta/ - Buy Amoxicillin <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Buy Amoxicillin</a> ftz.tgff.rike.dev.ptm.je http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.51','',0,0),(280,39,'eoloeficek','osiyek@asdff.iennfdd.com','http://mewkid.net/buy-xalanta/','195.154.226.67','2019-10-05 23:47:13','2019-10-05 21:47:13','http://mewkid.net/buy-xalanta/ - Buy Amoxil Online <a href=\"http://mewkid.net/buy-xalanta/\" rel=\"nofollow\">Amoxicillin 500 Mg</a> txe.vste.rike.dev.tqs.nr http://mewkid.net/buy-xalanta/',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.64','',0,0),(281,41,'StevAbraro','carrington@miki7.site','http://cidovir.com','5.188.84.76','2019-10-06 04:40:00','2019-10-06 02:40:00','Amoxicillin To Purchase Online Didanosine Zithromax Online Purchase  <a href=\"http://buycheapcial.com\" rel=\"nofollow\">viagra vs cialis</a> Aprender A Tomar Kamagra Order Name Brand Paxil No Rx Viagra In Tre Giorni On Line',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36 OPR/55.0.2994.44','',0,0),(282,43,'StevAbraro','carrington@miki7.site','http://66pills.com','5.188.84.76','2019-10-06 14:33:16','2019-10-06 12:33:16','Abilify Online Propecia Canadian Drug Stores Viagra Super Active Generi  [url=http://kamagorder.com][/url] Vyvanse Online Procurer Du Viagra Sans Ordonnance Vidal Cytotec',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.99','',0,0),(283,43,'Leopoldo Ruge','Tisue@gmail.com','http://selingan.web.id/story.php?title=xbox-game-pass-pc-games-list#discuss','207.244.117.13','2019-10-06 16:38:40','2019-10-06 14:38:40','I read this paragraph completely regarding the difference of hottest and previous technologies, it\'s amazing article.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(284,43,'Billie Paulo','Pavlosky@gmail.com','https://writeablog.net/rossstage0/hitman-pro-key-generator','206.41.179.161','2019-10-06 16:39:30','2019-10-06 14:39:30','I think this is one of the most vital info for me. And i\'m glad reading your article. But should remark on some general things, The web site style is wonderful, the articles is really excellent : D. Good job, cheers|',0,'1','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(285,183,'Kincannon','maria6932354@gmail.com','https://en.wikipedia.org/wiki/Free_fall','162.212.172.244','2019-10-07 14:46:09','2019-10-07 12:46:09','Came across this post interested, added to delicious',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(286,212,'Zelinka','maria6932354@gmail.com','https://en.wikipedia.org/wiki/Free_fall','185.122.170.25','2019-10-07 15:53:50','2019-10-07 13:53:50','Discovered this article engaged, added to digg',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(287,183,'StevAbraro','carrington@miki7.site','http://viaaorder.com','5.188.84.76','2019-10-07 16:12:53','2019-10-07 14:12:53','Kamagra Hipertension Pulmonar What Does Levitra Do  <a href=\"http://bmamasstransit.com\" rel=\"nofollow\">generic cialis overnight delivery</a> Canadian Pharcharmy Online No Script',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.51','',0,0),(288,116,'Neuhaus','patrizia123493@hotmail.com','https://en.wikipedia.org/wiki/Free_fall','23.105.159.45','2019-10-08 02:01:26','2019-10-08 00:01:26','Thanks for discussing this blog post and making it public',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(289,26,'Lafond','patrizia123493@hotmail.com','https://en.wikipedia.org/wiki/Free_fall','104.129.3.52','2019-10-08 05:34:21','2019-10-08 03:34:21','I have added this document to my favorites',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(290,41,'Budzinski','pedro32434@gmail.com','https://en.wikipedia.org/wiki/Free_fall','162.212.172.244','2019-10-08 06:23:22','2019-10-08 04:23:22','Many thanks sharing this particular document and making it public',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(291,39,'Hagopian','maria6932354@gmail.com','https://en.wikipedia.org/wiki/Free_fall','158.222.4.71','2019-10-08 21:40:32','2019-10-08 19:40:32','I\'ve included this blog post to my favorites',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(292,197,'Cappello','maria6932354@gmail.com','https://en.wikipedia.org/wiki/Free_fall','23.105.159.45','2019-10-08 23:40:26','2019-10-08 21:40:26','I\'ve included this article to my bookmarks',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(293,179,'Bowmer','patrizia123493@hotmail.com','https://en.wikipedia.org/wiki/Free_fall','185.122.170.25','2019-10-09 13:09:47','2019-10-09 11:09:47','Thanks for telling this particular document and rendering it public',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(294,39,'totogji.com//','robbie.tjangamarra@zoho.com','https://totogji.com/%ed%86%a0%ed%86%a0/','103.106.158.252','2019-10-10 21:34:30','2019-10-10 19:34:30','Amazing issues here. I\'m very happy to peer your article.\r\nThank you so much and I am lookingg forwaqrd to touch you.\r\nWill you kindly drop me a e-mail?',0,'spam','Opera/9.80 (Windows NT 6.2; Win64; x64) Presto/2.12.388 Version/12.17','',0,0),(295,179,'StevAbraro','carrington@miki7.site','http://buycheapcial.com','5.188.84.76','2019-10-10 23:19:37','2019-10-10 21:19:37','Cialis Urgente  <a href=\"http://ciali5mg.com\" rel=\"nofollow\">buy generic cialis online</a> Cialis Eli Lilly',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36','',0,0),(296,24,'StevAbraro','carrington@miki7.site','http://try-rx.com','5.188.84.76','2019-10-11 13:16:41','2019-10-11 11:16:41','Lamictal Makers  <a href=\"http://sildenaf100.com\" rel=\"nofollow\">buy viagra online</a> Rhineinc.In Purchase Cheap Cephalexin Without Prescription',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(297,183,'StevAbraro','carrington@miki7.site','http://ilfrc.com','5.188.84.76','2019-10-12 10:10:33','2019-10-12 08:10:33','Cialis Vente  <a href=\"http://cheapcial20mg.com\" rel=\"nofollow\">cialis 5 mg</a> Secure Real Progesterone 100mg Menopause Best Website Shop',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.54','',0,0),(298,116,'StevAbraro','carrington@miki7.site','http://leviplus.com','5.188.84.76','2019-10-12 10:14:06','2019-10-12 08:14:06','Dutasteride With Overnight Delivery New York Discount Generic Levitra Buy Antibiotics Online Fast Delivery  <a href=\"http://cial40mg.com\" rel=\"nofollow\">buy generic cialis</a> Comment Acheter Priligy',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(299,183,'StevAbraro','carrington@miki7.site','http://cialicheap.com','5.188.84.76','2019-10-12 15:45:04','2019-10-12 13:45:04','Cat Ate A 500 Mg Amoxicillin Amoxicillin Trihydrate 250 Dosage  <a href=\"http://bestlevi.com\" rel=\"nofollow\">levitra sold over the counter</a> Cialis Ch',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36','',0,0),(300,37,'Aleisha','elviadurr@mailforce.net','http://newsforyou323.com','209.99.134.240','2019-10-13 17:57:48','2019-10-13 15:57:48','I was very pleased to find this web site. I want to \r\nto thank you for your time due to this wonderful read!!\r\nI definitely liked every little bit of it and i also have you book-marked to look at new information on your web site.',0,'spam','Mozilla/5.0 (Windows NT 5.1; rv:30.0) Gecko/20100101 Firefox/36.0','',0,0),(301,39,'PorfirioBig','deborafrueh@yahoo.com','https://AndreasWee.blogspot.com','170.79.122.172','2019-10-15 15:12:48','2019-10-15 13:12:48','Hello. I have checked your rike.dev and i see you\'ve got some duplicate content so probably it is the reason that you don\'t \r\nrank hi in google. But you can fix this issue fast.\r\n\r\nThere is a tool that rewrites content like human, just search in google:  miftolo\'s tools',0,'spam','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36 OPR/52.0.2871.99','',0,0),(302,39,'Hairstyles','23138HoseaBesendorfer@gmail.com','https://www.hairstyleslook.com','113.81.28.153','2019-10-17 13:58:37','2019-10-17 11:58:37','What抯 Happening i\'m new to this, I stumbled upon this I\'ve found It absolutely helpful and it has aided me out loads. I hope to contribute &amp; help other users like its helped me. Good job.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(303,41,'میزبانی وب سایت','69352Ibbetson@gmail.com','http://parcian.com/web-service/hosting/','5.117.99.80','2019-10-18 00:47:48','2019-10-17 22:47:48','Ciao  Amazing! Its really awesome paragraph, I have got much clear idea regarding from this post. many thanks',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(304,183,'z','gloryharton@googlemail.com','http://bookerparadox.com/federal-prison-happy-meal/','196.245.237.154','2019-10-19 01:56:35','2019-10-18 23:56:35','I am really inspired with your writing skills and also with the layout for your weblog.\r\nIs that this a paid theme or did you modify it your self?\r\nAnyway keep up the excellent quality writing, it is uncommon to peer \r\na great blog like this one today..',0,'1','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.26 Safari/537.36 Core/1.63.5478.400 QQBrowser/10.1.1550.400','',0,0),(305,43,'Hairstyles','VeolaVandenbos@gmail.com','https://www.hairstylesvip.com','183.30.185.18','2019-10-19 14:08:37','2019-10-19 12:08:37','Thanks so much for providing individuals with such a splendid chance to read from here. It is often so amazing plus packed with a good time for me and my office peers to visit the blog at the very least 3 times weekly to read through the new things you will have. And of course, I am usually fulfilled considering the outstanding tips and hints you give. Certain 2 points in this post are absolutely the best we have all had.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(306,212,'Peter','p.j.jenner@hotmail.com','','144.131.202.61','2019-10-19 14:53:29','2019-10-19 12:53:29','Hi. I enjoyed reading your blog.\r\n\r\nI would like to use your Lord Of The Ring API and I have signed in and have accessed a token, but I do not know how to use the token. I am new to using json files and api.\r\n\r\nI am using http://jsoneditoronline.org to try to access the api.\r\n\r\nFor example, I would like to access information about the movies and I have tried  typing https://the-one-api.herokuapp.com/v1/movie/token but this does not work.\r\n\r\nCan you tell me where I am suppose to place the token if I wanted to access the movie data.\r\n\r\nThank You.\r\n\r\nThanks',0,'1','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','',0,0),(307,41,'Hairstyles','3375JohnathonCourse@gmail.com','https://www.hairstyleslook.com','183.30.183.134','2019-10-21 01:19:06','2019-10-20 23:19:06','Just about all of whatever you point out is supprisingly accurate and that makes me wonder the reason why I hadn\'t looked at this in this light before. This particular piece truly did switch the light on for me personally as far as this specific subject goes. Nevertheless there is one particular point I am not necessarily too cozy with and whilst I attempt to reconcile that with the actual central idea of the point, let me see what all the rest of the subscribers have to say.Well done.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(308,41,'Hairstyles','150TravisBurkstrand@gmail.com','https://www.hairstylesvip.com','183.30.183.134','2019-10-21 03:17:15','2019-10-21 01:17:15','I savour, lead to I discovered exactly what I used to be having a look for. You\'ve ended my 4 day long hunt! God Bless you man. Have a nice day. Bye',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(309,43,'Dawn Frasure','frasure@centtip.xyz','https://www.centtip.xyz/paidsurvey','117.93.32.50','2019-10-21 18:54:29','2019-10-21 16:54:29','Invite Bloggers and Webmasters to Fill out Paid Surveys\r\n\r\nI\'m Dawn from Centtip. \r\n\r\nWe are working with Inboxdollars to provide bloggers another opportunity to  earn cash or get rewards.\r\n\r\nAfter joining Inboxdollars, you will be able to get rewards by sharing your opinions online.\r\n\r\nPaid surveys have been prepared for you: https://www.centtip.xyz/paidsurvey \r\n\r\nRegards,\r\n\r\nDawn Frasure\r\n\r\n\r\nUnsubscribe: https://www.centtip.xyz/unsubscribe',0,'spam','Mozilla/5.0 (X11; Linux x86_64; rv:52.9) Gecko/20100101 Goanna/3.4 Firefox/52.9 PaleMoon/27.9.2','',0,0),(310,41,'Reptile Party','henryjamessmith@hotmail.com','http://www.reptileencounters.com.au','114.77.110.195','2019-10-27 06:02:26','2019-10-27 05:02:26','This very best. I use for horny for next for a a girliiiie Reptile Party for friind.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(311,43,'Hairstyles','48268MarcellaMata@gmail.com','https://www.hairstylescool.com/hairstyles','113.81.29.210','2019-10-27 20:53:34','2019-10-27 19:53:34','Looking for latest hairstyles ideas and best hair color trends 2019? Browse here for best collection of different hair lengths, www.hairstylescool.com hair tips and hair color highlights.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(312,43,'Free Stuff','40241SantosShively@gmail.com','https://www.cravefreebies.com','183.30.183.236','2019-10-29 08:39:39','2019-10-29 07:39:39','very good put up, i certainly love this web site, keep on it',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(313,197,'coque iphone 5s','vvsvul@gmail.com','https://www.anten.fr/','185.234.218.33','2019-10-29 19:14:04','2019-10-29 18:14:04','Per the over comment thanks a lot anyhow, I actually realized it out (for other individuals inside identical spot merely wide open iphoto and also dropbox in addition as well as drag &amp; drop in between plans rather simple).\r\n[url=https://www.anten.fr/]coque iphone 5s[/url]',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','',0,0),(314,41,'helpful hints','leesamoffit@gmail.com','https://www.soundsmusics.com/pengeluaran-hongkong-2019-tercepat-data-hongkong-live.html','186.179.25.25','2019-10-31 08:26:40','2019-10-31 07:26:40','Choose and setup hardware (sensors, receiver, Raspberry Pi) for a basic tracking \r\ntool on temperature and humidity &#8211; rike.dev  http://agenbolakaki.com',0,'spam','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36','',0,0),(315,43,'Free Stuff','62468JacquilineForkan@gmail.com','https://www.cravefreebies.com','113.81.30.64','2019-10-31 22:33:56','2019-10-31 21:33:56','The latest Free stuff, freebies, free samples, free trials, prize draws, competitions, discount codes, vouchers, www.cravefreebies.com coupons and hot deals from the UK.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(316,20,'https://ericsundwall.com/tarot-card-reading-and-meanings/','patsytruesdale@gmail.com','https://ericsundwall.com/tarot-card-reading-and-meanings/','191.101.70.191','2019-11-02 17:05:50','2019-11-02 16:05:50','tarot card meanings pdf https://ericsundwall.com/tarot-card-reading-and-meanings/ tarot card reading',0,'spam','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36 OPR/52.0.2871.64','',0,0),(317,212,'Willardutify','willardgoarf@buymodafinilmsn.com','http://buymodafinilntx.com/','178.137.165.122','2019-11-02 21:56:49','2019-11-02 20:56:49','You\'ve made your point extremely well!. \r\n<a href=\"http://buymodafinilntx.com/#\" rel=\"nofollow\">armodafinil vs modafinil</a> \r\nProvigil With Depakote',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36 OPR/55.0.2994.44','',0,0),(318,197,'Medium.com','demetragilmore@gmail.com','https://Medium.com/@618mediabacklink/dijital-pazarlama-ajans%C4%B1-www-618media-com-8387518c5247','77.83.202.34','2019-11-03 11:02:50','2019-11-03 10:02:50','Currently it appears like BlogEngine is the preferred blogging platform available right now.\r\n(from what I\'ve read) Is that what you are using on your blog?',0,'spam','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3463.1 Safari/537.36','',0,0),(319,41,'Free Stuff','49643GenaroSchieferstein@gmail.com','https://www.cravefreebies.com','113.81.29.91','2019-11-03 11:09:03','2019-11-03 10:09:03','Thanks so much for providing individuals with an extremely pleasant chance to check tips from this site. It can be so terrific and stuffed with amusement for me and my office friends to visit the blog not less than thrice in one week to study the new secrets you will have. And definitely, I am also at all times fascinated with your wonderful opinions you serve. Some 1 areas in this article are indeed the most effective I\'ve had.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(320,20,'https://ericsundwall.com/tarot-card-reading-and-meanings/','audra_fulford@freenet.de','https://ericsundwall.com/tarot-card-reading-and-meanings/','198.144.178.20','2019-11-03 20:14:10','2019-11-03 19:14:10','one card tarot reading https://ericsundwall.com/tarot-card-reading-and-meanings/ how to do a tarot \r\nreading',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36','',0,0),(321,212,'Becky','bexa@madhatgirls.com','http://www.madhatgirls.com','90.254.34.205','2019-11-03 22:42:17','2019-11-03 21:42:17','You made such cool and relevant projects! I actually came here from your fem_tech bot tweets on twitter &lt;3 You inspire me, I&#039;ve always wanted to get into coding but for some reason, I get really disheartened every time I start as I don&#039;t know how to progress from learning the code and putting it into proper use/an app/program! Do you have any advice for the most basic application i could work on using python or node/js ?',0,'1','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','',0,0),(322,197,'Becky Liu','bexa@madhatgirls.com','http://madhatgirls.com','90.254.34.205','2019-11-03 22:43:52','2019-11-03 21:43:52','OH, this is amazing I posted the previous comment not properly checking your site!! I will use this for my twitter!',0,'1','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','',0,0),(323,39,'linked resource site','Tower@gmail.com','https://flattr.com/profile/bikespree','165.231.54.22','2019-11-04 00:42:42','2019-11-03 23:42:42','I loved as much as you\'ll receive carried out right here. The sketch is tasteful, your authored material stylish. nonetheless, you command get bought an impatience over that you wish be delivering the following. unwell unquestionably come more formerly again since exactly the same nearly very often inside case you shield this increase.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(324,212,'Vertie Roskovensky','Ghaziani@gmail.com','http://www.docspal.com/viewer?id=cceajjwa-16224687','165.231.212.171','2019-11-04 15:13:35','2019-11-04 14:13:35','Hello! I just want to offer you a big thumbs up for the great info you have got here on this post. I will be returning to your web site for more soon.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(325,41,'Free Stuff','37674BlaineKirner@gmail.com','https://www.cravefreebies.com','113.81.29.224','2019-11-05 10:07:41','2019-11-05 09:07:41','Today, while I was at work, my cousin stole my iphone and tested to see if it can survive a thirty foot drop, just so she can be a youtube sensation. My iPad is now destroyed and she has 83 views. I know this is completely off topic but I had to share it with someone!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(326,41,'Hairstyles Look','61691MichelBradt@gmail.com','https://www.hairstyleslook.com','183.30.181.65','2019-11-07 17:41:53','2019-11-07 16:41:53','What I have observed in terms of computer system memory is the fact there are specs such as SDRAM, DDR or anything else, that must fit in with the features of the motherboard. If the pc\'s motherboard is kind of current while there are no os issues, upgrading the memory literally takes under sixty minutes. It\'s on the list of easiest pc upgrade types of procedures one can envision. Thanks for sharing your ideas.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(327,41,'Hairstyles','34883MarilynnCreegan@gmail.com','https://www.hairstyleslook.com','183.30.181.65','2019-11-07 18:15:34','2019-11-07 17:15:34','Our guides will help you figure out what hairstyles &amp; haircuts you can create. www.hairstyleslook.com Read on to discover articles and check out our galleries for inspiration.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(328,41,'Hairstyles','19193LyndsayAmill@gmail.com','https://www.hairstylesvip.com','183.30.181.65','2019-11-07 20:19:27','2019-11-07 19:19:27','Looking for a new hairstyle? Thinking about a new hair color or haircut? www.hairstylesvip.com This is your ultimate resource to get the hottest hairstyles and haircuts in 2019.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(329,30,'StevAbraro','carrington@miki7.site','http://allngos.com','5.188.84.76','2019-11-08 10:05:17','2019-11-08 09:05:17','Amoxicillin For Kids Dosage Buy Plavix In Canada  <a href=\"http://sildenafdosage.com\" rel=\"nofollow\">viagra</a> Clomid C Est Comment Amoxicillin Freeze Itchy Amoxicillin Rash',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36 Kinza/4.9.1','',0,0),(330,212,'Yulanda Flipp','Dacruz@gmail.com','http://adfoc.us/x72330285','107.174.236.174','2019-11-10 06:44:35','2019-11-10 05:44:35','Hey are using Wordpress for your blog platform? I\'m new to the blog world but I\'m trying to get started and create my own. Do you require any html coding knowledge to make your own blog? Any help would be greatly appreciated!|',0,'1','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(331,212,'rike','hello@rike.dev','','89.14.59.103','2019-11-10 10:42:18','2019-11-10 09:42:18','Hi Yulanda, yes, I\'m using WordPress, a quick way to get started with blogging but highly costumizable, too - if you want to!',0,'1','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','',330,1),(332,212,'rike','hello@rike.dev','','89.14.59.103','2019-11-10 10:53:34','2019-11-10 09:53:34','Hi Becky, thank you so much for your heartwarming comment! <3 I\'m very happy that my content helps others to get into coding. It\'s all about learning by doing! Start with a small project, maybe deploy a small static website about yourself or continue with a wheather app for your country/city to work on more dynamic content. There is so much to discover and learn in web development but it\'s totally worth it! There are a lot of free learning platforms out there too, especially for folks that get into coding a little later coming from other career paths. If you need more advice on specific resources just contact me on Twitter! :) Keep up your journey! Best, Rike',0,'1','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','',321,1),(333,212,'rike','hello@rike.dev','','89.14.59.103','2019-11-10 11:05:12','2019-11-10 10:05:12','Hi Peter, I recommend using a http client like Postman for testing the Lord of the Rings API. There you insert the endpoint you want to acces (e.g. https://the-one-api.herokuapp.com/v1/movie/) and then you add your access token in the request header. Here is a screenshot how to do that in Postman:\n\n<img src=\"https://rike.dev/wp-content/uploads/postman.png\" alt=\"Add request header\" />\n\nI hope that helps a bit! If not, just contact me again on Twitter! Best, Rike',0,'1','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','',306,1),(334,183,'rike','hello@rike.dev','','89.14.59.103','2019-11-10 11:07:04','2019-11-10 10:07:04','Thank you for your nice words! You are right, the theme is very beautiful and not made by me but those great folks: https://www.elmastudio.de/\nBest, Rike :)',0,'1','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','',304,1),(335,197,'beli emas hari ini','margarettereynell@gmail.com','http://emasku.com/','107.174.238.226','2019-11-11 08:06:31','2019-11-11 07:06:31','Top-notch post it is definitely. We have been waiting for this update.',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.57 Safari/537.17 SE 2.X MetaSr 1.0','',0,0),(336,41,'Graphsite','lzonioc433@gmail.com','https://www.storybookmarking.com/story.php?title=ED86A0ED86A0ED959CEBA8B9ED8A80EAB280ECA69DEBA8B9ED8A80EAB280ECA69DEC82ACEC9DB4ED8AB8EAB280ECA69DEB909CEB8680EC9DB4ED84B0#discuss','183.111.196.197','2019-11-11 09:23:44','2019-11-11 08:23:44','|when I desire to place gallery or LightBox or yet a slider on my web site I always try to use jQuery script in favor of that.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(337,41,'Unover','jplefypyrww3287@gmail.com','http://cody1rd69.isblog.net/5-simple-statements-about-graph-game-information-explained-11771998','183.111.196.197','2019-11-11 13:32:51','2019-11-11 12:32:51','Do not be too timid and squeamish about your actions. All life is an experiment. by Ralph Waldo Emerson.Thank you.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(338,41,'candle','Elvjudgme3052527@gmail.com','http://lane5dn05.bloginwi.com/15774941/the-best-side-of-sign-money-site','183.111.196.197','2019-11-11 15:54:03','2019-11-11 14:54:03','Remarkable video, actually a fastidious quality, this YouTube video touched me a lot in terms of features.Thanks!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(339,43,'plenty of fish dating site','brettkroeger@emailplus.org','http://tinyurl.com/qp4zyue','23.236.228.91','2019-11-12 15:15:08','2019-11-12 14:15:08','I\'m really loving the theme/design of your website.\r\nDo you ever run into any web browser compatibility issues?\r\nA handful of my blog visitors have complained about my site not operating correctly in Explorer but looks great in Firefox.\r\nDo you have any ideas to help fix this issue?',0,'spam','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.99','',0,0),(340,41,'Unover','Elvjudgme3052527@gmail.com','http://damien8nw37.blogkoo.com/the-definitive-guide-to-online-powerball-game-betting-13570429','183.111.196.197','2019-11-13 23:00:21','2019-11-13 22:00:21','Do not be too timid and squeamish about your actions. All life is an experiment. by Ralph Waldo Emerson.Thank you.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(341,41,'cliesehycle','2012submitnews@bk.ru','http://www.embromix.com','77.222.102.1','2019-11-15 03:50:50','2019-11-15 02:50:50','I know been examinating out a few of your articles and i can commonwealth pretty better matter. I will sure marker your site.',0,'spam','Mozilla/4.0 (compatible; MSIE 4.01; Digital AlphaServer 1000A 4/233; Windows NT; Powered By 64-Bit Alpha Processor)','',0,0),(342,26,'StevAbraro','carrington@miki7.site','http://rxbill6.com','5.188.84.76','2019-11-15 10:34:41','2019-11-15 09:34:41','De Amoxil Amoxil Po De Suite Zithromax Overnight  <a href=\"http://allngos.com\" rel=\"nofollow\"></a> Cialis Prix Pharmacie Belgique Viagra Soft 100mg',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(343,43,'Elton Prauner','Mikhaiel@gmail.com','http://www.sicipiscine.it/index.php?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=260174','131.108.16.214','2019-11-15 14:20:24','2019-11-15 13:20:24','I couldn\'t resist commenting. Very well written!|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(344,43,'Brian Frigge','Vaquerano@gmail.com','https://halsey48rosales.bladejournal.com/post/2019/08/30/wondershare-filmora-crack-for-windows-10','200.10.37.114','2019-11-15 14:23:20','2019-11-15 13:23:20','Hi there! I know this is somewhat off topic but I was wondering if you knew where I could find a captcha plugin for my comment form? I\'m using the same blog platform as yours and I\'m having difficulty finding one? Thanks a lot!|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(345,43,'coconut oil there','hallienarvaez@gmail.com','http://bit.ly/352JoOb','23.254.4.46','2019-11-16 06:39:26','2019-11-16 05:39:26','Write more, thats all I have to say. Literally, it seems as though you \r\nrelied on the video to make your point. You definitely know what \r\nyoure talking about, why waste your intelligence on just posting videos to your weblog \r\nwhen you could be giving us something informative to read?',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 SE 2.X MetaSr 1.0','',0,0),(346,212,'jalowkicielne','Austill@aol-online.com','http://jalowkicielne.pl','165.231.37.161','2019-11-16 14:05:14','2019-11-16 13:05:14','*Spot on with this write-up, I truly think this website needs much more consideration. I?ll probably be again to read much more, thanks for that info.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(347,43,'Angelo Jerkin','Vaught@gmail.com','http://tuansogarmanurung.org/index.php?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=534277','165.231.212.171','2019-11-17 00:36:38','2019-11-16 23:36:38','Hey! This is kind of off topic but I need some advice from an established blog. Is it hard to set up your own blog? I\'m not very techincal but I can figure things out pretty quick. I\'m thinking about setting up my own but I\'m not sure where to start. Do you have any tips or suggestions?  Many thanks|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(348,43,'Kyle Garces','Sweis@gmail.com','http://finvyu.com/beta/index.php?qa=user&amp;qa_1=fuller78suhr','107.174.236.174','2019-11-17 00:37:00','2019-11-16 23:37:00','Hey there! Do you know if they make any plugins to safeguard against hackers? I\'m kinda paranoid about losing everything I\'ve worked hard on. Any suggestions?|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(349,39,'Yonqgom','leylamalina@mail.ru','https://clck.ru/DwfTp','77.233.21.37','2019-11-17 02:33:25','2019-11-17 01:33:25','<a href=\"https://clck.ru/DwfTp\" rel=\"nofollow\">\"Творческая Лаборатория DedicateT\"</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(350,41,'acutemotor','qkaftpc809@gmail.com','https://www.goodreads.com/story/show/1159457-sports-betting','183.111.196.197','2019-11-17 07:34:03','2019-11-17 06:34:03','I’m trying to find a template or plugin that might beable to correct this problem. If you have any suggestions, please share.Appreciate it!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(351,212,'Lyndon Bandarra','Pikula@gmail.com','https://freesound.org/people/crowellmelton24/','209.99.165.25','2019-11-17 11:17:47','2019-11-17 10:17:47','This piece of writing will help the internet people for building up new weblog or even a weblog from start to end.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(352,212,'StevAbraro','carrington@miki7.site','http://cialionline.com','5.188.84.76','2019-11-18 15:18:03','2019-11-18 14:18:03','Levitra Im Preisvergleich Cod Only Acticin Scabies Where To Purchase Medication Zestoretic No Rx  <a href=\"http://bmamasstransit.com\" rel=\"nofollow\">cialis 5 mg best price usa</a> How To Buy Isotretinoin Tablets Without Perscription Online',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(353,43,'Alexia Neja','Coughlan@gmail.com','https://www.gapyear.com/members/ballardballard3/','131.108.16.214','2019-11-18 18:57:46','2019-11-18 17:57:46','Heya i\'m for the first time here. I found this board and I in finding It truly useful &amp; it helped me out much. I hope to give something again and help others like you aided me.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(354,197,'cialis buy online','janpino@live.de','http://brandcial.com','5.188.84.76','2019-11-19 18:41:54','2019-11-19 17:41:54','Please let me know if you\'re looking for a article author \r\nfor your site. You have some really good articles and I believe I would be a \r\ngood asset. If you ever want to take some \r\nof the load off, I\'d absolutely love to write some content for your blog in exchange for a link \r\nback to mine. Please send me an email if interested.\r\nMany thanks!',0,'spam','Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; MDDCJS; rv:11.0) like Gecko,gzip(gfe)','',0,0),(355,41,'Hairstyles','66374BudGenovese@gmail.com','https://www.hairstylesvip.com','113.81.29.25','2019-11-20 00:57:07','2019-11-19 23:57:07','Today, while I was at work, my cousin stole my apple ipad and tested to see if it can survive a 25 foot drop, just so she can be a youtube sensation. My iPad is now destroyed and she has 83 views. I know this is completely off topic but I had to share it with someone!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(356,41,'Long Hairstyles','23202MonteMeinershagen@gmail.com','https://www.hairstylesvip.com/long-hairstyles','113.81.29.25','2019-11-20 02:41:04','2019-11-20 01:41:04','I think this is one of the most vital information for me. And i am satisfied studying your article. But want to observation on few basic things, The website style is great, the articles is truly great : D. Excellent process, cheers',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(357,43,'tinyurl.com','emma.hypes@web.de','http://tinyurl.com/quest-bars-cheap-39003','23.95.200.159','2019-11-20 12:40:02','2019-11-20 11:40:02','You really make it seem so easy with your presentation but I \r\nfind this matter to be really something which I think I would never \r\nunderstand. It seems too complex and extremely broad for \r\nme. I\'m looking forward for your next post, I will try to get the hang \r\nof it!',0,'spam','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.68 (Edition Baidu)','',0,0),(358,212,'바카라','Deshaies@gmail.com','https://japook.com','23.81.61.180','2019-11-21 19:55:26','2019-11-21 18:55:26','Best what world can have , is Girls !',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(359,43,'tinyurl.com','leonapalma@aol.com','http://tinyurl.com/tb85ujg','23.236.152.58','2019-11-22 04:00:51','2019-11-22 03:00:51','I was suggested this web site by my cousin. I am not sure whether this post is written by him \r\nas nobody else know such detailed about my trouble. You\'re incredible!\r\nThanks!',0,'spam','Mozilla/5.0 (Windows NT 6.0; Win64; x64; rv:50.0) Gecko/20100101 Firefox/50.0','',0,0),(360,41,'GuQin','RollandMoquin@gmail.com','http://www.guqinz.com','183.30.185.118','2019-11-24 11:32:25','2019-11-24 10:32:25','I wanted to write you that very little remark to be able to say thanks the moment again relating to the fantastic techniques you\'ve shared on this site. This is quite particularly open-handed with you to provide without restraint what a few people might have sold as an ebook to help make some cash for themselves, primarily given that you might have done it if you ever desired. The pointers likewise worked like a fantastic way to understand that other people have a similar interest much like my own to know the truth a little more with reference to this problem. I am certain there are a lot more enjoyable periods up front for people who read through your site.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(361,41,'Dulppidatal','lorisf198712@qmail.com','https://www.download-embroidery.com','37.113.165.126','2019-11-24 23:58:03','2019-11-24 22:58:03','Profitable companies should activity their items efficiently. At verbalise, the net is a pivotal instrumentality for marketing a friendship. With wonderful recording lessons you air on-line, you are healthy to get to more and more people in a really direct phase of clip. The advice that practices ought to be of plus of you.',0,'spam','Mozilla/4.0 (compatible; MSIE 5.5; Windows NT 5.0; T312461)','',0,0),(362,33,'BotLike','hpvwel@gmail.com','https://www.like.in.th/','38.95.160.36','2019-11-27 09:01:01','2019-11-27 08:01:01','Status Liker, Increase Likes, Working Auto Liker, auto liker, Autolike International, Autoliker, Autoliker, Autolike, Auto Liker, autolike, Photo Liker, autoliker, ZFN Liker, auto like, Photo Auto Liker, Status Auto Liker, Auto Like',0,'spam','Mozilla/5.0 (Windows NT 5.1) AppleWebKit/5351 (KHTML, like Gecko) Chrome/13.0.871.0 Safari/5351','',0,0),(363,43,'Rashad Kopper','Husselbee@gmail.com','http://www.decorgarden.it/index.php?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=1911791','165.231.212.171','2019-11-28 12:28:30','2019-11-28 11:28:30','I read this article completely about the difference of latest and previous technologies, it\'s amazing article.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(364,43,'Gale Tawwab','Sirmans@gmail.com','https://knowyourmeme.com/users/kristensen91crabtree/','172.245.70.42','2019-11-28 12:32:15','2019-11-28 11:32:15','Hiya! Quick question that\'s completely off topic. Do you know how to make your site mobile friendly? My blog looks weird when browsing from my apple iphone. I\'m trying to find a template or plugin that might be able to resolve this issue. If you have any suggestions, please share. Appreciate it!|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(365,33,'Lisaerath','tracytomm@probbox.com','http://elimite2.com/','5.188.210.242','2019-11-30 06:07:43','2019-11-30 05:07:43','<a href=\"http://elimite2.com/\" rel=\"nofollow\">where to buy elimite cream over the counter</a>',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36','',0,0),(366,41,'confirm','luca0714bhk@gmail.com','http://forum.evony.com/member.php?327905-face72sudan','183.111.196.197','2019-12-01 11:38:28','2019-12-01 10:38:28','Thank you for the sensible critique. Me and my neighbor were just preparing to do a little research on this.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(367,212,'Margarito Hora','Kincey56492@gmail.com','https://','45.35.94.230','2019-12-01 15:40:17','2019-12-01 14:40:17','Hi Björn.  Interesting.  I have not looked at the reasons for paragliding accidents specifically and can’t comment on that.  Most (but not all) sailplane accidents are avoidable but a lot of accidents have involved very experienced pilots including multiple world champions.  I’m a bit surprised that this is not true for paragliding but I don’t have data to claim otherwise.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(368,212,'Angelo Saum','Kesinger34909@gmail.com','https://testing.com','205.185.198.224','2019-12-01 20:05:16','2019-12-01 19:05:16','and.. has everyone turned in their Chicago songs????Vancouver- which I think was AlvieSan Jose which I think was AmyPhiladelphia which I have no idea who had themI will be looking for your songs people!!!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(369,33,'Paulerath','veritolopez@probbox.com','https://elimite2.com/','5.188.210.242','2019-12-02 04:38:55','2019-12-02 03:38:55','<a href=\"https://elimite2.com/\" rel=\"nofollow\">elimite cream</a>',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(370,41,'allegiance','kenneth9738myi@gmail.com','http://francisco7fm93.loginblogin.com/166909/new-step-by-step-map-for-totohan-sports-toto','183.111.196.197','2019-12-02 06:51:27','2019-12-02 05:51:27','On every weekend, we all friends jointly used to watch show, as enjoyment is also essential in life.full advantage of the features.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(371,41,'pasture','king2849eox@gmail.com','http://baidu2.sishuluntan.com/home.php?mod=space&amp;uid=330141','183.111.196.197','2019-12-02 18:56:10','2019-12-02 17:56:10','Heya i’m for the primary time here. I found this board andI to find It truly helpful &amp; it helped me outmuch. I am hoping to give one thing again and help others such as you aided me.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(372,33,'StevAbraro','carrington@miki7.site','http://cialibuy.com','5.188.84.76','2019-12-03 03:10:15','2019-12-03 02:10:15','Levitra Assuefazione Canada Pharmacy Online Review  <a href=\"http://cialibuy.com\" rel=\"nofollow\">cialis</a> Commander Lasix Ou Furosemide Effet Viagra Femme',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(373,41,'crow','oscar7382fta@gmail.com','https://gold-forum.kitco.com/member.php?300865-Danielpiede','183.111.196.197','2019-12-03 09:57:50','2019-12-03 08:57:50','Way cool! Some extremely valid points! I appreciate you writing this article and also the restof the website is also really good.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(374,39,'StevAbraro','carrington@miki7.site','http://cialibuy.com','5.188.84.76','2019-12-03 10:39:05','2019-12-03 09:39:05','Cheap Soft Viagra  <a href=\"http://cialibuy.com\" rel=\"nofollow\">cialis</a> Sildenafil Tomar Propecia Celulosa Microcristalina Medshop24net',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(375,41,'GuQin','OswaldoGuziczek@gmail.com','http://www.guqinz.com','185.236.200.27','2019-12-03 23:59:46','2019-12-03 22:59:46','whoah this blog is magnificent i love reading your posts. Keep up the great work! You know, lots of people are looking around for this information, you can help them greatly.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(376,41,'grievous','harrison6047uzb@gmail.com','http://raymond1sa60.blogsidea.com/169958/about-overseas-safety-playground','183.111.196.197','2019-12-04 03:06:11','2019-12-04 02:06:11','Good day! Do you know if they make any plugins to safeguard againsthackers? I’m kinda paranoid about losing everythingI’ve worked hard on. Any tips?',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(377,33,'Markerath','cesarepederzini@probbox.com','https://elimite2.com/','5.188.210.242','2019-12-04 19:19:13','2019-12-04 18:19:13','<a href=\"https://elimite2.com/\" rel=\"nofollow\">elimite cream over the counter</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(378,43,'mobile legends upcoming heroes','sallyellery@freenet.de','http://ow.ly/e5lZ50xqHJx','104.227.61.244','2019-12-05 06:18:26','2019-12-05 05:18:26','Good post. I learn something new and challenging on sites I stumbleupon every day.\r\nIt will always be useful to read through articles from other \r\nauthors and practice something from their websites.',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 SE 2.X MetaSr 1.0','',0,0),(379,41,'summon','eric9515tdj@gmail.com','http://mario3uz33.dsiblogger.com/18511364/the-definitive-guide-to-online-game-site-join-money','183.111.196.197','2019-12-05 10:30:08','2019-12-05 09:30:08','The Ninety credit college degree meets the other bachelor diploma requirements then when you earn the associate of arts in BA online.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(380,33,'Maryerath','karry@probbox.com','https://elimite2.com/','5.188.210.242','2019-12-05 12:10:58','2019-12-05 11:10:58','<a href=\"https://elimite2.com/\" rel=\"nofollow\">where can you buy elimite cream</a>',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36','',0,0),(381,43,'rank of mobile legends','daciastocks@zoho.com','http://ow.ly/4wtx50xqHJw','198.154.82.181','2019-12-05 16:27:21','2019-12-05 15:27:21','I loved as much as you\'ll receive carried out right here.\r\nThe sketch is attractive, your authored subject matter \r\nstylish. nonetheless, you command get bought an edginess over that you wish be delivering the following.\r\nunwell unquestionably come further formerly again as \r\nexactly the same nearly very often inside case you shield this increase.',0,'spam','Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.6 Safari/537.36','',0,0),(382,41,'offerings','timothy2948gpw@gmail.com','http://waylon0qy36.blogacep.com/208386/5-simple-statements-about-online-ladder-games-explained','183.111.196.197','2019-12-06 07:39:05','2019-12-06 06:39:05','I’m gone to say to my little brother, that he should also visit thiswebpage on regular basis to get updated from hottest gossip.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(383,41,'Free Samples','36964AnnetteCampagnone@gmail.com','https://www.cravefreebies.com','37.120.147.170','2019-12-06 10:37:12','2019-12-06 09:37:12','Thanks for your write-up on this weblog. From my own personal experience, occasionally softening upwards a photograph may provide the photographer with a little bit of an artsy flare. Often however, the soft clouds isn\'t exactly what you had planned and can often times spoil a normally good picture, especially if you intend on enlarging that.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(384,41,'Free Samples','57986CreolaHeubusch@gmail.com','https://www.cravefreebies.com','37.120.147.170','2019-12-06 10:45:39','2019-12-06 09:45:39','I will right away snatch your rss as I can not to find your e-mail subscription hyperlink or e-newsletter service. Do you\'ve any? Kindly allow me recognise so that I could subscribe. Thanks.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(385,41,'Hairstyles','62410MyrtieHughe@gmail.com','https://www.hairstyleslook.com','37.120.147.170','2019-12-06 12:08:34','2019-12-06 11:08:34','Thanks for giving your ideas with this blog. Likewise, a fable regarding the finance institutions intentions if talking about foreclosure is that the traditional bank will not take my repayments. There is a specific amount of time the bank is going to take payments from time to time. If you are very deep in the hole, they\'re going to commonly demand that you pay that payment 100 . However, that doesn\'t mean that they will have any sort of repayments at all. When you and the financial institution can be capable to work some thing out, the foreclosure course of action may stop. However, in case you continue to miss out on payments within the new system, the property foreclosures process can just pick up exactly where it left off.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(386,41,'Hairstyles','67574ValrieSpartin@gmail.com','https://www.hairstyleslook.com','81.92.203.76','2019-12-06 14:04:01','2019-12-06 13:04:01','Its like you read my mind! You seem to know a lot about this, like you wrote the book in it or something. I think that you could do with a few pics to drive the message home a little bit, but instead of that, this is magnificent blog. A great read. I will certainly be back.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(387,43,'Lashonda Pritchard','Fessler@gmail.com','https://squareblogs.net/salehherndon12/transformer-prime-king-of-android-tablets','172.245.70.42','2019-12-06 22:01:22','2019-12-06 21:01:22','Keep on working, great job!|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(388,43,'Halina Tatters','Badillo@gmail.com','https://diigo.com/0fbriz','196.196.86.119','2019-12-06 22:01:50','2019-12-06 21:01:50','It\'s going to be end of mine day, except before finish I am reading this enormous post to increase my knowledge.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(389,43,'Lincoln Grasha','Pilley@gmail.com','http://chan64hendrix.unblog.fr/2019/10/04/download-crack-videopad-by-nch-software/','165.231.212.171','2019-12-07 02:04:38','2019-12-07 01:04:38','Hey very nice blog!|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(390,41,'guides','corbin7372gnv@gmail.com','http://cash0td60.blog-gold.com/217207/everything-about-hold-em-site','183.111.196.197','2019-12-07 07:16:05','2019-12-07 06:16:05','I will appreciate if you continue this in future. Numerous people will be benefited from your writing.Cheers! natalielise pof',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(391,212,'Renay Schramek','Pizano@gmail.com','https://bookmarkingworld.review/story.php?title=cleanmymac-x-crack-tnt-5#discuss','172.245.70.42','2019-12-07 15:52:06','2019-12-07 14:52:06','What\'s up friends, its fantastic piece of writing on the topic of educationand entirely explained, keep it up all the time.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(392,43,'https://www.getjar.com/categories/all-games/action-games/Mobile-Legends-Hack-Cheat-Mod-940071','jaunitasouthard@gmail.com','http://ow.ly/fk3v50xqHJC','23.94.21.254','2019-12-07 16:54:31','2019-12-07 15:54:31','Hi there I am so glad I found your blog page, I really found you by error, while I was searching on Digg \r\nfor something else, Nonetheless I am here now and would just like to say \r\ncheers for a tremendous post and a all round exciting \r\nblog (I also love the theme/design), I don’t have time to read through it all at the minute but I have bookmarked it and also added \r\nyour RSS feeds, so when I have time I will be back \r\nto read a lot more, Please do keep up the awesome b.',0,'spam','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.183 Safari/537.36 Vivaldi/1.96.1147.47','',0,0),(393,41,'sweetly','jayce1737rcl@gmail.com','http://francisco5yc47.pointblog.net/Graph-Game-Information-Options-26978916','183.111.196.197','2019-12-07 18:44:12','2019-12-07 17:44:12','Hmm is anyone else encountering problems with the pictures on thisblog loading? I’m trying to find out if its a problem on my end or if it’s the blog.Any feed-back would be greatly appreciated.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(394,212,'https://www.getjar.com/categories/all-games/action-games/Mobile-Legends-Hack-Cheat-Mod-940071','wendybrentnall@zoho.com','http://ow.ly/9m6K50xqHJB','23.229.22.121','2019-12-08 09:41:36','2019-12-08 08:41:36','Oh my goodness! Amazing article dude! Thank you so much,\r\nHowever I am experiencing problems with your RSS. I \r\ndon\'t know the reason why I am unable to join it. Is there anybody getting similar RSS problems?\r\nAnyone that knows the solution will you kindly respond?\r\nThanx!!',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 YaBrowser/18.3.1.1232 Yowser/2.5 Safari/537.36','',0,0),(395,41,'rotten','harrison3059oal@gmail.com','http://zander0zs24.uzblog.net/getting-my-hash-game-to-work-9468096','183.111.196.197','2019-12-08 17:45:37','2019-12-08 16:45:37','Hi there, I found your blog by way of Google even as looking for a similar topic, your web site came up, it looksgood.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(396,41,'cliesehycle','kirill12968@gmails.com','https://xn-----7kcbhqdofimspdifbr4b7k8bhn3dj.xn--p1ai','37.113.165.126','2019-12-09 00:32:07','2019-12-08 23:32:07','Wow, marvellous journal layout! How long pic you been blogging for? you variety blogging move simplified. The boilersuit see of your web computer is howling, as easily as the system',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; Avant Browser [avantbrowser.com]; Hotbar 4.4.5.0)','',0,0),(397,41,'cliesehycle','kirill12968@gmails.com','https://xn-----7kcbhqdofimspdifbr4b7k8bhn3dj.xn--p1ai','37.113.165.126','2019-12-09 12:16:44','2019-12-09 11:16:44','Thank you for the groovy writeup. It in fact was a diversion accounting it. Sensing advanced to much another conformable from you! However, how could we communicate?',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]','',0,0),(398,41,'fugitive','harrison3059oal@gmail.com','http://lane5dn05.bloginwi.com/16041346/a-review-of-verified-site-referrals','183.111.196.197','2019-12-09 18:03:20','2019-12-09 17:03:20','Would you offer guest writers to write content to suit your needs?I wouldn’t mind producing a post or elaborating on some of the subjects you write in relation to here.Again, awesome site!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(399,43,'Steph B','doglovr888@gmail.com','https://biblefreedom.com','96.44.145.19','2019-12-10 00:18:07','2019-12-09 23:18:07','Hi there! I want to share with you a very important message going around the internet.\r\n\r\nWould you allow your government to place a microchip in your body?\r\n\r\nThis is the future we are heading towards with RFID microchip technology.\r\n\r\nEven more note worthy, did you know there was somone almost 2000 years ago who prophesied of a cashless society in the last days? His name is Jesus.\r\n\r\nDid you know that this RFID Microchip lines up perfectly with the Mark of the Beast in Revelation 13:16-18?\r\n\r\n\"He(the false prophet) causes all, both small and great, rich and poor, free and slave, to receive a mark on their right hand or on their foreheads, and that no one may buy or sell except one who has the mark or the name of the beast, or the number of his name.\r\n\r\nHere is wisdom. Let him who has understanding calculate the number of the beast, for it is the number of a man: His number is 666\" (Revelation 13:16-18).\r\n\r\nReferring to the last days, this could only be speaking of a cashless money society, which we have yet to see, but are moving towards. Otherwise we could still buy or sell without the mark among others if physical money was still currency. This mark could not be spiritual, because the word references two distinct physical locations on the body. If it was spiritual, it would just say in the forehead.\r\n\r\nCarl Sanders attended seventeen New World Order meetings with heads-of-state officials such as Henry Kissinger and Bob Gates of the C.I.A. to discuss plans on how to bring forth this one-world system. The US government commissioned Carl Sanders to design a microchip for identifying and controlling the peoples of the world-a microchip that could be placed under the skin with a hypodermic needle(a quick, convenient process that would be gradually accepted by society).\r\n\r\nCarl Sanders, with a group of engineers behind him, with US grant monies supplied by US tax dollars, took on this project and designed a microchip that is powered by a lithium battery, rechargeable through the temperature fluctuations in our skin. Without having knowledge of the Bible(Mr. Sanders was not a believer at the time), these engineers spent one and a half million dollars doing research on the best and most convenient place to have the microchip inserted.\r\n\r\nGuess what? These researchers found that the forehead and the back of the hand(the two places Revelation says the mark will go) are not just the most convenient spots, but are also the only viable spots for rapid, consistent temperature fluctuations in the skin to recharge the lithium battery. The RFID chip is about seven millimeters in length, .75 millimeters in diameter, about the size of a grain of rice. It is capable of containing pages upon pages of information about you. All your general history, work history, crime record, health history, and financial data can be stored on this chip.\r\n\r\nCarl Sanders believes that this microchip, which he regretfully helped design, is the \"mark\" spoken about in Revelation 13:16-18. The original Greek word for \"mark\" is \"charagma,\" which means a \"scratch or etching.\" It is also interesting to note that the number 666 is actually a word in the original Greek language. The word is \"chi xi stigma,\" with the last part, \"stigma,\" also meaning \"to stick or prick. Carl believes this is referring to the use of a hypodermic needle being poked into the human flesh to insert the microchip.\"\r\n\r\nMr. Sanders spoke with a doctor asking what would happen if the lithium contained within the RFID chip leaked into the body. The doctor answered by saying a terrible sore would appear in that spot. This is what the book of Revelation says:\r\n\r\n\"And the first(Angel) went, and poured out his vial on the earth; and there fell a noisome and grievous sore on the men which had the mark of the beast, and on them which worshipped his image\" (Revelation 16:2).\r\n\r\nThe Bible tells us we cannot buy or sell without the mark of the beast, or the number of its name. This number is identified as 666. The Bible tells us to calculate the number 666.\r\n\r\nIn this world we are identified by numbers, whether it is our social security number, drivers license, or cards used to make payments. The number of the beast represents something like this, to identify us in a one world government system. This number will be contained inside the RFID chip to identify each and every one of us so we may buy or sell.\r\n\r\nTo see the hidden meaning behind calculating the number 666(6+6+6=18), and how it matches up with scipture perfectly,\r\n\r\nGo to: https://biblefreedom.com/rfid-mark-revealed\r\n\r\nThe Bible warns us in the last days that a false prophet will rise up doing miracles to deceive many to receive this mark. No matter the cost, do not take it!\r\n\r\n\"Then a third angel followed them, saying with a loud voice, \"If anyone worships the beast and his image, and receives his mark on his forehead or on his hand, he himself shall also drink of the wine of the wrath of God, which is poured out full strength into the cup of His indignation. He shall be tormented with fire and brimstone in the presence of the holy angels and in the presence of the Lamb. And the smoke of their torment ascends forever and ever; and they have no rest day or night, who worship the beast and his image, and whoever receives the mark of his name\" (Revelation 14:9-11).\r\n\r\nOut of all the world religions, how can we be sure the Bible got it right? The scientific data has established and continues to support that the universe once had a beginning in which space, time and matter were created. Many know this as the big bang.\r\n\r\n\"The non-biblical religions tell us that god or god\'s create within space and time that eternally exist. The Bible stands alone and says that time and space don\'t exist until God creates the universe.\" - Hugh Ross\r\n\r\nDid you know that the real Noah\'s Ark was discovered where the Bible told us it would be with the correct dimensions? As well as hard evidence for the destruction of Sodom Gomorrah and the Exodus account of the Red Sea crossing?\r\n\r\nThe Bible is the most translated and read book in the history of the world, full of predictive prophecies. Wouldn\'t you expect God\'s word to be so?\r\n\r\nThis information can all be found at https://biblefreedom.com\r\n\r\n\"And He(Jesus) said to me(Apostle John), \"It is done! I am the Alpha and the Omega, the Beginning and the End. I will give of the fountain of the water of life freely to him who thirsts\" (Revelation 21:6).\r\n\r\n\"Jesus answered and said to her, \"Whoever drinks of this water will thirst again, but whoever drinks of the water(the Holy Spirit) that I shall give him will never thirst. But the water that I shall give him will become in him a fountain of water springing up into everlasting life\" (John 4:13-14).\r\n\r\n\"Jesus answered, \"Most assuredly, I say to you, unless one is born of water and the Spirit, he cannot enter the kingdom of God. That which is born of the flesh is flesh, and that which is born of the Spirit is spirit. Do not marvel that I said to you, \'You must be born again.\' (John 3:5-6).\r\n\r\nAll religion is man-made. Man can create religion, but no one can create the Holy Spirit that comes from God out of Heaven. Jesus never told us to follow a religion or denomination:\r\n\r\n\"Then He(Jesus) said to them all, \"If anyone desires to come after Me, let him deny himself, and take up his cross daily, and follow Me\" (Luke 9:23).\r\n\r\nYou can receive the Spirit of God right now. If you are willing to humble yourself before Jesus, and believe in your heart that God raised Him from the dead on the third day; call out to God and ask Him to forgive your sins, to receive His Holy Spirit. If you are genuine, He is faithful and just to forgive, and He will give you a new heart, a renewing of the mind, restoring everything the devil has stolen from you; making you like a child again.\r\n\r\nWhen we receive the Spirit of God, we become born from above, and His seed resides within us. We no longer make a practice of sin, but rather turn away from unrighteousness and receive the righteousness of Christ.\r\n\r\nFrom that point onward, we must put all our hope and trust in Jesus, and grow to walk in His ways, not straying from the narrow path. For Jesus says,\r\n\r\n\"Enter by the narrow gate; for wide is the gate and broad is the way that leads to destruction, and there are many who go in by it. Because narrow is the gate and difficult is the way which leads to life, and there are few who find it\" (Matthew 7:13-14).\r\n\r\n\"Holy, holy, holy, Lord God Almighty(One God), Who was(Jesus) and is(YHWH) and is to come(Jesus)!\" (Revelation 4:8).',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(400,43,'Marcel Plaxico','Cieslak@gmail.com','https://writeablog.net/mcphersonmccormick02/crack-dragonframe-mac','196.196.86.119','2019-12-10 01:25:46','2019-12-10 00:25:46','Since the admin of this web site is working, no hesitation very shortly it will be famous, due to its feature contents.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(401,43,'Stephenie Brennan','Pinckard@gmail.com','https://www.playbuzz.com/lomholtzachariassen6210/how-to-obtain-a-cheap-hotel-for-business-travel','172.245.70.42','2019-12-10 01:26:12','2019-12-10 00:26:12','Please let me know if you\'re looking for a writer for your weblog. You have some really good articles and I think I would be a good asset. If you ever want to take some of the load off, I\'d absolutely love to write some material for your blog in exchange for a link back to mine. Please send me an email if interested. Many thanks!|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(402,43,'Hairstyles','37768MonteTonetti@gmail.com','https://www.hairstylescool.com','37.120.147.169','2019-12-10 02:32:41','2019-12-10 01:32:41','I would like to add that when you do not already have got an insurance policy otherwise you do not form part of any group insurance, you could possibly well take advantage of seeking the aid of a health insurance professional. Self-employed or individuals with medical conditions typically seek the help of the health insurance broker. Thanks for your writing.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(403,41,'planning','timothy1838uis@gmail.com','http://keegan4bi70.free-blogz.com/18336077/5-essential-elements-for-casino-site','183.111.196.197','2019-12-10 05:04:50','2019-12-10 04:04:50','When you come into a port you are not treated as a tourist by locals, you are a sailor and they respect that.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(404,43,'Tequila Warriner','Frawley@gmail.com','http://qna.nueracity.com/index.php?qa=user&amp;qa_1=flanaganflanagan3','198.144.187.66','2019-12-10 05:20:54','2019-12-10 04:20:54','An outstanding share! I have just forwarded this onto a coworker who was doing a little research on this. And he in fact ordered me dinner because I stumbled upon it for him... lol. So allow me to reword this.... Thank YOU for the meal!! But yeah, thanks for spending some time to talk about this matter here on your internet site.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(405,212,'me google it','yuettemarana@yahoo.com','http://Let\'s','167.114.78.97','2019-12-10 12:57:31','2019-12-10 11:57:31','If you are seeking for the top service to get website visitors to your web page, i advise to use seowebsitetrafficnet. I am using it with a great result. Simply just type \"seo website traffic net\" in google, yahoo and bing.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(406,43,'Free Stuff','69445CyrilBroking@gmail.com','https://www.cravefreebies.com','37.120.147.167','2019-12-11 01:07:23','2019-12-11 00:07:23','I\'m not sure why but this site is loading extremely slow for me. Is anyone else having this issue or is it a issue on my end? I\'ll check back later on and see if the problem still exists.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(407,43,'Tricia Teall','Courcelle@gmail.com','http://bestbookmark.cf/story.php?title=download-visual-studio-2008-full-crack-64-bit#discuss','172.245.70.42','2019-12-11 07:06:31','2019-12-11 06:06:31','My programmer is trying to persuade me to move to .net from PHP. I have always disliked the idea because of the expenses. But he\'s tryiong none the less. I\'ve been using Movable-type on numerous websites for about a year and am worried about switching to another platform. I have heard excellent things about blogengine.net. Is there a way I can import all my wordpress content into it? Any help would be really appreciated!|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(408,43,'Sterling Lessmann','Porchia@gmail.com','https://www.fanfiction.net/u/12859887/','196.196.86.119','2019-12-11 07:06:54','2019-12-11 06:06:54','Hello, I enjoy reading all of your post. I like to write a little comment to support you.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(409,41,'ignored','jaden0581ejm@gmail.com','https://logienicolas.wixsite.com/game/post/online-casino-fundamentals-explained','183.111.196.197','2019-12-11 10:47:43','2019-12-11 09:47:43','Hello, all is going perfectly here and ofcourse every one issharing data, that’s genuinely good, keep up writing.Ι couldn’t resist commentіng. Very well written!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(410,43,'Sherley Dalmata','Stieglitz@gmail.com','https://zenwriting.net/castrocastro6/stock-market-summary-june-10th-auto-insurance-at-the-days-leaders-and-laggards','196.196.86.119','2019-12-11 11:36:38','2019-12-11 10:36:38','It\'s a pity you don\'t have a donate button! I\'d definitely donate to this superb blog! I suppose for now i\'ll settle for bookmarking and adding your RSS feed to my Google account. I look forward to brand new updates and will talk about this blog with my Facebook group. Chat soon!|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(411,43,'Bernardo Niesporek','Benchoff@gmail.com','https://britt14weinstei.livejournal.com/1315.html','200.10.37.114','2019-12-12 13:19:30','2019-12-12 12:19:30','Today, while I was at work, my sister stole my iphone and tested to see if it can survive a twenty five foot drop, just so she can be a youtube sensation. My iPad is now destroyed and she has 83 views. I know this is completely off topic but I had to share it with someone!|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(412,43,'Mariano Sylney','Stemen@gmail.com','https://foursquare.com/user/550599462/list/avg-antivirus-uk','173.44.154.130','2019-12-12 13:19:55','2019-12-12 12:19:55','Excellent blog here! Also your website loads up very fast! What host are you using? Can I get your affiliate link to your host? I wish my website loaded up as fast as yours lol|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(413,43,'Sherell Babjeck','Teixeira@gmail.com','https://www.openlearning.com/u/stern66kaufman/blog/GuitarProComCrack/','200.10.37.114','2019-12-12 20:02:24','2019-12-12 19:02:24','It\'s remarkable designed for me to have a website, which is valuable designed for my experience. thanks admin|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(414,41,'Troy Roderick','Preisser8199@gmail.com','http://www.aothungiaretphcm.com','58.187.168.28','2019-12-12 22:27:48','2019-12-12 21:27:48','I’m grateful for having you as a friend!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(415,43,'Hairstyles','82709VanGochanour@gmail.com','https://www.hairstylescool.com','82.102.30.88','2019-12-13 02:50:16','2019-12-13 01:50:16','I have learn some good stuff here. Certainly value bookmarking for revisiting. I wonder how a lot attempt you put to make one of these great informative web site.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(416,212,'Freebies Stuff','76654TheronHenrich@gmail.com','https://www.cravefreebies.com/free-stuff/','82.102.30.84','2019-12-13 07:19:12','2019-12-13 06:19:12','One other thing is that an online business administration course is designed for scholars to be able to effortlessly proceed to bachelors degree courses. The 90 credit education meets the lower bachelor education requirements when you earn your own associate of arts in BA online, you may have access to the most up-to-date technologies on this field. Several reasons why students have to get their associate degree in business is because they can be interested in this area and want to get the general schooling necessary ahead of jumping right into a bachelor diploma program. Thx for the tips you actually provide in your blog.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(417,41,'YesBet88 Slots','Yaggi@gmail.com','https://bestplay777.com','172.241.244.88','2019-12-13 09:42:21','2019-12-13 08:42:21','Best stereo systems is here , check it out ! https://bestplay777.com',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(418,212,'Harold Holmgren','Kravec@gmail.com','http://borupyang46.postbit.com/lumion-8-crack-version.html','200.10.37.114','2019-12-13 10:35:43','2019-12-13 09:35:43','Piece of writing writing is also a fun, if you be acquainted with after that you can write otherwise it is complicated to write.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(419,41,'Yesbet88 Casino','Klohr@gmail.com','https://bestplay777.com','172.84.80.117','2019-12-14 02:51:33','2019-12-14 01:51:33','Loe travel , best offers here !  https://bestplay777.com',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(420,33,'Lisaerath','mkleroy1@probbox.com','http://elimite2.com/','5.188.210.242','2019-12-14 22:53:28','2019-12-14 21:53:28','<a href=\"http://elimite2.com/\" rel=\"nofollow\">elimite cream cost</a>',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(421,43,'Josiah Yancy','Rottinghaus@gmail.com','https://www.eventbrite.com/o/como-baixar-e-crackear-adobe-premiere-pro-cs660-26244378615','107.174.236.174','2019-12-15 00:24:53','2019-12-14 23:24:53','It\'s an awesome paragraph in support of all the online visitors; they will get benefit from it I am sure.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(422,43,'Elias Honokaupu','Bradica@gmail.com','http://askmehub.com/index.php?qa=user&amp;qa_1=ludvigsenludvigsen25','173.44.154.130','2019-12-15 00:25:20','2019-12-14 23:25:20','Hello I am so excited I found your web site, I really found you by mistake, while I was researching on Askjeeve for something else, Anyhow I am here now and would just like to say thanks for a tremendous post and a all round thrilling blog (I also love the theme/design), I don\'t have time to look over it all at the minute but I have bookmarked it and also included your RSS feeds, so when I have time I will be back to read a lot more, Please do keep up the superb work.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(423,43,'Joni Bronder','Antoniewicz@gmail.com','https://8tracks.com/becker56hanson','138.94.217.186','2019-12-15 05:54:15','2019-12-15 04:54:15','Good blog you have here.. It\'s hard to find quality writing like yours these days. I seriously appreciate individuals like you! Take care!!|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(424,43,'Hairstyles Men','67934JanellPanto@gmail.com','https://www.hairstyleslook.com','82.102.30.90','2019-12-15 21:33:40','2019-12-15 20:33:40','I will immediately grab your rss feed as I can not to find your e-mail subscription hyperlink or e-newsletter service. Do you have any? Please let me understand in order that I may subscribe. Thanks.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(425,212,'Patrick Crecelius','Landress@gmail.com','https://forsythforsyth38.bladejournal.com/post/2019/10/07/muvizu-full-version-free-download-with-crack','107.174.236.174','2019-12-15 21:36:17','2019-12-15 20:36:17','What\'s up, yes this article is really good and I have learned lot of things from it about blogging. thanks.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(426,43,'mobile legends hack diamond 2019 apk download','normand_iacovelli@gmx.net','http://sergiozzsie.diowebhost.com/23475248/mobile-legends-for-dummies','65.99.193.93','2019-12-17 03:10:05','2019-12-17 02:10:05','Hi, I do think this is an excellent web site.\r\nI stumbledupon it ;) I will come back yet again since i have saved as a favorite it.\r\n\r\nMoney and freedom is the greatest way to change, may you be rich and continue to guide \r\nothers.',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/B85648','',0,0),(427,33,'Paulerath','donyafiorentino@probbox.com','https://elimite2.com/','5.188.210.242','2019-12-17 03:39:23','2019-12-17 02:39:23','<a href=\"https://elimite2.com/\" rel=\"nofollow\">elimite 5 cream over the counter</a>',0,'spam','Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36','',0,0),(428,10,'StevAbraro','carrington@miki7.site','http://cialibuy.com','5.188.84.76','2019-12-19 01:27:01','2019-12-19 00:27:01','Cialis 10 Mg Tabletas Water Pills For Bloating Want To Buy Amoxicilina Antibiotic Over Night Tennessee  <a href=\"http://cialibuy.com\" rel=\"nofollow\">where to buy cialis online safely</a> Propecia Online Pharmacy Cialis Levitra Amoxicillin Long Term Use For Kidneys Amoxicillin Suspension Dosage For Cat',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(429,212,'StevAbraro','carrington@miki7.site','http://cialibuy.com','5.188.84.76','2019-12-19 03:49:40','2019-12-19 02:49:40','Meglio Levitra O Cialis  <a href=\"http://cialibuy.com\" rel=\"nofollow\">cialis</a> Fluconazole Without Prescription Cialis Si Puo Dividere Doryx Where Can I Buy Medication Visa Accepted',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36','',0,0),(430,41,'Cory Leonpacher','DiedraHerrea@yahoo.com','http://savetheoa.com','104.223.103.44','2019-12-19 23:34:12','2019-12-19 22:34:12','I asked you to believe in impossible things. #TheOA needs your help.  #SaveTheOA',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(431,43,'Karly Chappo','Oppy@gmail.com','https://vw88vn.com/forum/profile.php?section=personality&amp;id=465886','200.10.37.114','2019-12-20 07:04:03','2019-12-20 06:04:03','Hello, everything is going well here and ofcourse every one is sharing information, that\'s actually fine, keep up writing.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(432,43,'Anibal Sowada','Boundy@gmail.com','https://bitly.com/2TkJdZ2+','165.231.212.171','2019-12-20 07:04:44','2019-12-20 06:04:44','Thank you for another wonderful article. Where else may anyone get that type of information in such a perfect manner of writing? I have a presentation next week, and I am on the search for such info.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(433,24,'StevAbraro','carrington@miki7.site','http://cialibuy.com','5.188.84.76','2019-12-20 09:08:00','2019-12-20 08:08:00','Acquistare Viagra Yahoo  <a href=\"http://cialibuy.com\" rel=\"nofollow\">canadian cialis</a> Natural Antibotic Amoxicillin',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36 OPR/55.0.2994.44','',0,0),(434,43,'Mariano Winfred','Salimas@gmail.com','https://delgado53matzen.livejournal.com/510.html','200.10.37.114','2019-12-20 12:24:10','2019-12-20 11:24:10','of course like your web site however you need to take a look at the spelling on quite a few of your posts. Several of them are rife with spelling issues and I to find it very bothersome to tell the reality nevertheless I\'ll surely come back again.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(435,41,'Lucilla Cavallario','MichaFiala@yahoo.com','http://savetheoa.com','179.61.172.245','2019-12-20 13:46:14','2019-12-20 12:46:14','Thats what an angel is. Dust pressed into a diamond by the weight of this world. #TheOA needs your help.  #SaveTheOA',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(436,33,'Markerath','trudy@probbox.com','https://elimite2.com/','5.188.210.242','2019-12-20 17:42:38','2019-12-20 16:42:38','<a href=\"https://elimite2.com/\" rel=\"nofollow\">where can i buy elimite cream</a>',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(437,33,'Maryerath','tomparlet@probbox.com','https://elimite2.com/','5.188.210.242','2019-12-20 19:38:16','2019-12-20 18:38:16','<a href=\"https://elimite2.com/\" rel=\"nofollow\">elimite cream</a>',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(438,212,'Brianne Ransone','Queal@gmail.com','https://forums.huduser.gov/member.php?action=profile&amp;uid=175335','165.231.212.171','2019-12-21 03:44:31','2019-12-21 02:44:31','Hey there! Do you know if they make any plugins to help with Search Engine Optimization? I\'m trying to get my blog to rank for some targeted keywords but I\'m not seeing very good success. If you know of any please share. Cheers!|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(439,43,'Ross Reynolds','reynolds@perfectmedialab.com','https://www.perfectmedialab.com/getfunds','49.83.18.119','2019-12-23 20:00:14','2019-12-23 19:00:14','Inquiry from San Diego\r\n\r\nHello,\r\n\r\nMy name is Reynolds from Perfectmedialab, and we partner with Gotorro to help small business grow.\r\n\r\nAre you dissatisfied with the difficult loan application process? \r\n\r\nAre you dissatisfied with a lengthy wait for a credit decision?\r\n\r\nDo you think the process lacks transparency? \r\n\r\nGotorro offers easy access to fast, transparency and simply-priced small business loans to help you grow your business. The dedicated support staff ensure your total satisfaction\r\n\r\nTake 5 minutes to apply, and get funds within 24 hours of approval: https://www.perfectmedialab.com/getfunds\r\n\r\nRoss Reynolds\r\n\r\nCompany: Perfectmedialab\r\nAddress: 2448 Historic Decatur Rd #210, San Diego, CA 92106\r\nUnsubscribe: https://www.perfectmedialab.com/unsubscribe',0,'spam','Mozilla/5.0 (X11; Linux x86_64; rv:52.9) Gecko/20100101 Goanna/3.4 Firefox/52.9 PaleMoon/27.9.2','',0,0),(440,43,'Hairstyles Men','SalvatoreManzanares@gmail.com','https://www.hairstylesvip.com','209.58.136.85','2019-12-24 11:48:24','2019-12-24 10:48:24','What抯 Going down i\'m new to this, I stumbled upon this I have found It positively useful and it has helped me out loads. I hope to give a contribution &amp; help other users like its helped me. Great job.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(441,43,'Hairstyles','ShawndaEflin@gmail.com','https://www.hairstylesvip.com','172.241.214.247','2019-12-24 22:12:00','2019-12-24 21:12:00','My brother suggested I may like this blog. He was once totally right. This post actually made my day. You can not imagine just how a lot time I had spent for this info! Thanks!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(442,43,'Hairstyles VIP','BarryVictorine@gmail.com','https://www.hairstylesvip.com','172.241.214.247','2019-12-24 22:26:24','2019-12-24 21:26:24','Hi there are using Wordpress for your blog platform? I\'m new to the blog world but I\'m trying to get started and create my own. Do you require any coding expertise to make your own blog? Any help would be greatly appreciated!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(443,43,'Hairstyles Women','LynnRovack@gmail.com','https://www.hairstylescool.com','23.81.177.21','2019-12-25 20:52:17','2019-12-25 19:52:17','Fascinating blog! Is your theme custom made or did you download it from somewhere? A design like yours with a few simple adjustements would really make my blog stand out. Please let me know where you got your theme. Thanks a lot',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(444,43,'Sherril Hollandsworth','Brumaghim@gmail.com','','23.108.254.128','2019-12-26 11:22:13','2019-12-26 10:22:13','Everything is very open with a precise clarification of the issues. It was definitely informative. Your website is extremely helpful. Thanks for sharing!|\r\n\r\nhttp://wastenot.wales/story.php?title=cleanmymac-os-mojave-crack#discuss',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(445,43,'Tressie Gunyon','Louch@gmail.com','https://fiskerhave189.shutterfly.com/21','198.144.178.2','2019-12-26 11:22:38','2019-12-26 10:22:38','I know this website gives quality based articles or reviews and extra data, is there any other website which offers these kinds of data in quality?|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(446,43,'Ardath Edmison','Lobingier@gmail.com','https://www.gapyear.com/members/bentleyball13/','23.108.254.128','2019-12-26 17:35:36','2019-12-26 16:35:36','It is the best time to make some plans for the future and it is time to be happy. I have read this post and if I could I wish to suggest you few interesting things or tips. Maybe you could write next articles referring to this article. I want to read more things about it!|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(447,212,'John Nanny','Caine@gmail.com','http://www.popolls.com/index.php?qa=user&amp;qa_1=crockettfoster5','104.203.124.53','2019-12-27 10:01:08','2019-12-27 09:01:08','Hey I know this is off topic but I was wondering if you knew of any widgets I could add to my blog that automatically tweet my newest twitter updates. I\'ve been looking for a plug-in like this for quite some time and was hoping maybe you would have some experience with something like this. Please let me know if you run into anything. I truly enjoy reading your blog and I look forward to your new updates.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(448,212,'MelvinImmuh','nwhitlockor@gmail.com','https://eflstudy.com','91.122.30.68','2019-12-29 18:53:52','2019-12-29 17:53:52','How To Choose A Topic For Languages Essay\r\n\r\nBooks Lindsay Ellis\'s latest video essay is about Barthe\'s Death of the Author and the relevance it has to some modern texts, especially John Green\'s The Fault In Our Stars. The minimum or maximum number of pages or words for admission essays is often given, so you have to write one that is concise but comprehensive. Lots of colleges and universities have developed different kinds of degree programs which can provide you a fruitful degree from someone else life experience and that is known as a life experience degree This is only a graduate degree.\r\n \r\n<a href=\"https://mmsoftek.com\" rel=\"nofollow\">more help</a>\r\n<a href=\"https://joinsamme.com\" rel=\"nofollow\">love it</a>\r\n<a href=\"https://maisfl.com\" rel=\"nofollow\">try what he says</a>\r\n \r\n \r\nHow To Choose A Topic For Languages Essay\r\n\r\nSometimes it seems that logical essay writing is a single factor that you need for making your paper compelling. Use specific reasons and examples to support your recommendation. This will help the company offer timely essay writing help to the clents. Reading articles, and books, essay samples, as well as writing essays encourage thoughts formation. Topic Sentence: A shorter school year would benefit students and teachers by giving them more time off.\r\n \r\n<a href=\"http://www.m13online.com/?page_id=50&amp;cpage=291#comment-653305\" rel=\"nofollow\">Introduction, Types Of Essays, Tips For Essay Writing, Questions</a>\r\n<a href=\"http://my360-car.com/2016/10/27/hello-world/#comment-19706\" rel=\"nofollow\">Jeff Soto\'s Last Voyage</a>\r\n<a href=\"http://pat.design/thesis-defense-bio-hci/#comment-31487\" rel=\"nofollow\">An Incongruous Juxtaposition Of Incompatibilities</a>\r\n 6eabbae',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(449,39,'talking to','Poague@gmail.com','https://evermotion.org/vbulletin/member.php?875482','107.175.155.109','2020-01-03 07:54:09','2020-01-03 06:54:09','Valuable information. Fortunate me I discovered your website by chance, and I\'m shocked why this twist of fate did not took place earlier! I bookmarked it.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(450,41,'goose','jude6371emu@gmail.com','http://www.affiliated-business.com/story.php?title=ED86A0ED86A0EC82ACEC9DB4ED8AB8EC82ACEC84A4ED86A0ED86A0EC82ACEC9DB4ED8AB8EBA8B9ED8A80EC8898ECB2A9EBA994EC9DB4ECA080EB8680EC9DB4ED84B0#discuss','183.111.196.197','2020-01-04 15:17:44','2020-01-04 14:17:44','I am sure this post has touched all the internetpeople, its really really good article on building up new website.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(451,41,'blinded','bryan0593xjt@gmail.com','http://zandertgqy4.dailyhitblog.com/283689/little-known-facts-about-social-graph-game','183.111.196.197','2020-01-06 03:01:27','2020-01-06 02:01:27','Excellent goods from you, man. I have understandyour stuff previous to and you’re just extremely magnificent.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(452,43,'Mark of the Beast','catlovr888@hotmail.com','https://biblefreedom.com','66.71.240.201','2020-01-06 16:57:26','2020-01-06 15:57:26','Hi,\r\n\r\nI want to share some very important news that has been spreading around the internet concerning our future well being.\r\n\r\nWe are approaching a future of a one-world cashless society in which they will mandate us to have an RFID microchip implanted in our body. This chip will contain all our personal information and we will lose much more of our privacy because of the tracking capabilities.\r\n\r\nMore importantly, did you know that this was all prophesied almost 2000 years ago by a man named Jesus? Don\'t believe me? Keep reading...This may be the most important thing you will ever read.\r\n\r\n\"He(the false prophet) causes all, both small and great, rich and poor, free and slave, to receive a mark on their right hand or on their foreheads, and that no one may buy or sell except one who has the mark or the name of the beast, or the number of his name.\r\n\r\nHere is wisdom. Let him who has understanding calculate the number of the beast, for it is the number of a man: His number is 666\" (Revelation 13:16-18).\r\n\r\nReferring to the last days, this could only be speaking of a cashless money society, which we have yet to see, but are heading towards. Why? Because we could still buy or sell without receiving the mark among one another if physical money was still currency. It logically deduces itself to this reason.\r\n\r\nThis mark could not be spiritual, because the word references two different physical locations. If it was spiritual, it would just say in the forehead.\r\n\r\nThis is where it really starts to come together. It is shocking how accurate the Bible is concerning this RFID microchip. These are notes from a man named Carl Sanders who worked with a team of engineers to help develop this RFID microchip in the 90\'s.\r\n\r\nCarl Sanders attended seventeen New World Order meetings with heads of state officials such as Henry Kissinger and Bob Gates of the C.I.A. to discuss their agenda on how to bring about this one-world system. The government commissioned Mr. Sanders to engineer a microchip for identifying and controlling the peoples of the world-a microchip that could be placed under the skin with a hypodermic needle(a quick, convenient method that would be gradually accepted by society).\r\n\r\nCarl Sanders, with a group of engineers behind him, with U.S. grant monies supplied by tax dollars, took on this project and designed a chip that is powered by a lithium battery, rechargeable by the temperature changes in our skin. Without the knowledge of the Bible(Carl Sanders was not a Christian at the time), these engineers spent one-and-a-half-million dollars doing research on the best and most convenient place to have the microchip inserted.\r\n\r\nGuess what? These researchers found that the forehead and the back of the hand(the two places Revelation says the mark will go) are not only the most convenient spots, but are also the only viable places for rapid, consistent temperature changes in the skin to recharge the lithium battery. The chip is approximately seven millimeters in length, .75 millimeters in diameter, about the size of a grain of rice. It is capable of holding pages upon pages of information about you. All your general history, work history, crime record, health history, and financial data can be stored on this chip.\r\n\r\nCarl Sanders believes that this microchip, which he regretfully helped engineer, is the \"mark\" spoken about in Revelation 13:16-18. The original Greek word for \"mark\" is \"charagma,\" which means a \"scratch or etching.\" It is also interesting to note that the number 666 is a word in the original Greek. The word is \"chi xi stigma,\" with the last part, \"stigma,\" also meaning \"to stick or prick. Carl believes this is referring to the use of a hypodermic needle being poked into the human flesh to insert the microchip.\"\r\n\r\nCarl Sanders asked a doctor what would happen if the lithium contained within the RFID chip leaked into the body. The doctor answered by saying a terrible sore would appear in that spot. This is what the book of Revelation says:\r\n\r\n\"And the first(Angel) went, and poured out his vial on the earth; and there fell a noisome and grievous sore on the men which had the mark of the beast, and on them which worshipped his image\" (Revelation 16:2).\r\n\r\nThe Bible tells us we cannot buy or sell without the mark of the beast, or the number of its name. This number is identified as 666. The Bible tells us to calculate the number 666. How do we calculate 666?\r\n\r\nThis is where it gets really interesting. Calculating the number 666 has been long debated throughout the centuries, but has now been revealed in these last days by God. What I will show you confirms itself with the Bible the true meaning to calculate 666.\r\n\r\nThroughout the Bible, God uses the number 3 as confirmation of things. Here are a few examples:\r\n\r\n\"For there are three that bear witness in heaven: the Father, the Word, and the Holy Spirit; and these three are one\" (1 John 5:7 NKJV).\r\n\r\n\"and that He was buried, and that He rose again the third day according to the Scriptures\" (1 Corinthians 15:4 NKJV).\r\n\r\n\"...Holy, holy, holy, Lord God Almighty, Who was and is and is to come!\" (Revelation 4:8 NKJV).\r\n\r\nNow what is interesting is the the mark of the beast is decribed in detail in three seperate verses (Revelation 13:16,17,18), and each verse lists three different examples of the given topic. The last three being the number 6 being used three times in a row. This is a key point to unlocking how to calculate the number 666.\r\n\r\nWhat does it mean to count? It means to add up. So how could we add up 666? Remember my previous point about God confirming in threes. So logically, what would be the best way to count the number 666? To count it equally in threes based off the number. We cannot count it equally as 600+60+6, this would also bring us back to the start. We cannot count it as 600+600+600, or 60+60+60, because there are no zeroes in between or at the end of 666. The only logical option is 6+6+6=18. What is interesting is that the verse that reveals for us to count the number itself is verse 18, being the third verse out of three verses that describe the mark of the beast. What is 18 divided by 3? 6. So 3x6=18, or 6+6+6=18.\r\n\r\nAnother interesting point is the only two other combinations (making a total of three possible combinations) for placing a \"+\" symbol in between the 6\'s are 66+6=72, and 6+66=72. Add both 72\'s together and you get 144. Why the number 144 is interesting is because the verse following Revelation 13:18 is the first time in the Bible where the 144,000 are being described in detail:\r\n\r\n\"Then I looked, and behold, a Lamb standing on Mount Zion, and with Him one hundred and forty-four thousand, having His Father’s name written on their foreheads...\" (Revelation 14:1).\r\n\r\nNow if you add up all three numbers by counting 666 by moving the \"+\" symbol around in all three possible combinations, it would be 72+72+18=162. What is interesting about the number 162, is, if you divide 144,000 by 162, you get 888. The name of Jesus in Greek gematria adds up to 888. The New Testament was orignally written in Greek. Revelation 14:1 not only mentions the 144,000, but also the Lamb who is Jesus.\r\n\r\nNow what is interesting about the number for Jesus, 888, is that if you apply this same formula, you get 8+8+8=24. Why the number 24? Revelation chapter 4 tells us there are 24 elders seated around the throne of God. This is the same throne where Jesus sits:\r\n\r\n\"Immediately I was in the Spirit; and behold, a throne set in heaven, and One sat on the throne. And He who sat there was like a jasper and a sardius stone in appearance; and there was a rainbow around the throne, in appearance like an emerald. Around the throne were twenty-four thrones, and on the thrones I saw twenty-four elders sitting, clothed in white robes; and they had crowns of gold on their heads\" (Revelation 4:2-4).\r\n\r\nNow if you take 8+8+8=24, and 8+88=96, and 88+8=96, you get 24+96+96=216. Take 144,000 divided by 216 and you get 666. Remember that this was the same exact formula to get the number 162 out of counting 666 that brought about the number 888 when dividing 144,000 by 162. It is perpetual.\r\n\r\nWith using the same formula of counting by adding the \"+\" symbol in between the numbers, why do all these numbers relate in such a way?\r\n\r\nAnother interesting point to note is that if you add up all the numbers from 1 to 36, it totals 666. The number 36, as in three sixes? Could this be a hint that we should add up three sixes instead of perceiving the number as six-hundred sixty six?\r\n\r\nSo what could this mean? Well we know in this world we are identified by numbers in various forms. From our birth certificate to social security, as well as our drivers license, being identified based on a system of ruler ship. So it is possible that this RFID microchip will contain a new identification that has a total of 18 characters.\r\n\r\nCould this be the name of the beast, the number of its name? The one-world beast system that is identified by 18 characters? This would fit scripture that speaks of a mark that we must have to buy or sell in our right hand or forehead, and that it also contains the number of the beast, during a future cashless money society.\r\n\r\nGo to: http://biblefreedom.com to see all the proof!\r\n\r\nThe Bible warns us in the end times that a false prophet will rise up doing miracles to deceive many to receive this mark:\r\n\r\n\"Then the beast was captured, and with him the false prophet who worked signs in his presence, by which he deceived those who received the mark of the beast and those who worshiped his image\" (Revelation 19:20).\r\n\r\nNo matter the cost, DO NOT TAKE IT!\r\n\r\n\"Then a third angel followed them, saying with a loud voice, “If anyone worships the beast and his image, and receives his mark on his forehead or on his hand, he himself shall also drink of the wine of the wrath of God, which is poured out full strength into the cup of His indignation. He shall be tormented with fire and brimstone in the presence of the holy angels and in the presence of the Lamb. And the smoke of their torment ascends forever and ever; and they have no rest day or night, who worship the beast and his image, and whoever receives the mark of his name\" (Revelation 14:9-11).\r\n\r\nWe are living in very prophetic times with major Biblical prophecies being fulfilled. When Donald Trump recognized Jerusalem as captial of Israel in December of 2017, this was a big step to bring about the Third Temple prophesied in the Bible.\r\n\r\nThe Bible tells us that the Antichrist will seat himself in this temple:\r\n\r\n\"...and the man of sin is revealed, the son of perdition, who opposes and exalts himself above all that is called God or that is worshiped, so that he sits as God in the temple of God, showing himself that he is God\" (2 Thessalonians 2:3-4).\r\n\r\nIn the Islamic religion, they have man called the Mahdi, known as their messiah who they are waiting to appear. There are many testimonies from people online who believe this man will be Barack Obama who is to be the biblical Antichrist. I myself have had strange dreams about him. He came on stage claiming to be a Christian with no affiliation to the Muslim faith, but was later revealed by his own family members that he indeed is a devout Muslim.\r\n\r\nHis real name is said to be Barry Soetoro, and he had his name changed to Barack Obama. But why?\r\n\r\nJesus says, \"And He said to them, \'I saw Satan fall like lightning from heaven\'\" (Luke 10:18).\r\n\r\nIn Hebrew, the word Barack means \"lighting\", and the use of Bama (Strongs Hebrew word 1116) is used to refer to the \"heights\"” of heaven.\r\n\r\nThe day following the election of Barack Obama (11/04/08), the winning pick 3 lotto numbers in Illinois (Obama\'s home state) for 11/5/08 were 666.\r\n\r\nObama was a U.S. senator for Illinois, and his zip code was 60606.\r\n\r\nRegardless, whoever seats himself in that Third Temple in Jerusalem declaring himself to be God IS THE ANTICHRIST. DO NOT BE DECEIVED.\r\n\r\nWhy do we need Jesus?\r\n\r\n\"for all have sinned and fall short of the glory of God\" (Romans 2:23).\r\n\r\n\"For the wages of sin is death, but the gift of God is eternal life in Christ Jesus our Lord\" (Romans 6:23).\r\n\r\nOur good works cannot save us. If we step before a judge, being guilty of a crime, the judge will not judge us by the good that we have done, but rather the crimes we have committed. If we as fallen humanity, created in God\'s image, pose this type of justice, how much more a perfect, righteous, and Holy God?\r\n\r\nGod has brought down His moral law\'s through the 10 commandments given to Moses at Mt. Siani. These laws were not given so we may be justified, but so that we may see the need for a savior. They are the mirrior of God\'s character of what He has put in each and every one of us, with our concious bearing witness that we know that it is wrong to steal, lie, dishonor our parents, and so forth.\r\n\r\nWe can try and follow the moral laws of the 10 commandments, but we will never catch up to them to be justified before a Holy God. That same word of the law given to Moses became flesh over 2000 years ago in the body of Jesus Christ. He came to be our justification by fullfilling the law, living a sinless perfect life that only God could fulfill.\r\n\r\nThe gap between us and the law can never be reconciled by our own merit, but the arm of Jesus is stretched out by the grace and mercy of God. And if we are to grab on, through faith in Him, He will pull us up being the one to justify us. As in the court of law, if someone steps in and pays your fine, even though you are guilty, the judge can do what is legal and just and let you go free. This is what Jesus did almost 2000 years ago on the cross. It was a legal transaction being fulfilled in the spritual realm by the shedding of His blood, with His last words being, \"...It is finished!...\" (John 19:30).\r\n\r\nNow why did Jesus have to die for us?\r\n\r\nBecause God is Holy and just, the wrath that we deserve could not go unoticed. Through the perfect righteousness and justice of God\'s character, it must be dealt with, it must be quenched and satisfied.\r\n\r\nFor God takes no death in the pleasure of the wicked (Ezekiel 18:23). This is why in Isaiah chapter 53, where it speaks of the coming Messiah and His soul being a sacrifice for our sins, why it says it pleased God to crush His only begotten Son.\r\n\r\nThis is because the wrath that we deserve was justified by being poured out upon His Son. For if it was poured out upon us who deserve it, we would all die and go to hell. God created a way of escape by pouring it out on His Son who\'s soul could not be left in hades, but was raised and seated at the right hand of God in power.\r\n\r\nSo now when we put on the Lord Jesus Christ (Romans 13:14), God no longer see\'s the person who deserves His wrath, but rather the glorious image of His perfect Son dwelling in us, justifing us as if we received the wrath we deserve, making a way of escape from the curse of death.\r\n\r\nNow what we must do is repent and trust in the savior, confessing and forsaking our sins. This is not just a head knowledge of believing in Jesus, but rather receiving His words, taking them to heart. Where we no longer live to practice sin, but rather turn from our sins and practice righteousness:\r\n\r\n\"Do you not know that the unrighteous will not inherit the kingdom of God? Do not be deceived. Neither fornicators, nor idolaters, nor adulterers, nor homosexuals, nor sodomites, nor thieves, nor covetous, nor drunkards, nor revilers, nor extortioners will inherit the kingdom of God. And such were some of you. But you were washed, but you were sanctified, but you were justified in the name of the Lord Jesus and by the Spirit of our God\" (1 Corinthians 6:9-11).\r\n\r\nBy doing so we may become transformed into the image of God through faith in His Son Christ Jesus Who is willing to give the Holy Spirit to those who ask of Him:\r\n\r\n\"Most assuredly, I(Jesus) say to you, unless one is born of water and the Spirit, he cannot enter the kingdom of God. That which is born of the flesh is flesh, and that which is born of the Spirit is spirit. Do not marvel that I said to you, \'You must be born again.\' (John 3:5-6).\r\n\r\n\"But you are not in the flesh but in the Spirit, if indeed the Spirit of God dwells in you. Now if anyone does not have the Spirit of Christ, he is not His\" (Romans 8:9).\r\n\r\nWhat are you waiting for? Our Father in heaven only wants the best for us, restoring everything this world has stolen from us. This is what it means to by \"holy\". To be made whole.\r\n\r\nHe is waiting to hear from you. That God given tongue to speak language, through faith, pray to Him, ask Him to forgive you by confessing your sins and be willing to forsake them; that you accept the sacrifice of His Son Jesus on the cross, and that you want His Holy Spirit living inside you transforming you into a child of God.\r\n\r\nJesus says, \"but whoever drinks of the water that I shall give him(the Holy Spirit) will never thirst. But the water that I shall give him will become in him a fountain of water springing up into everlasting life.\"\r\n\r\nDid you know that Jesus spoke more about hell than anyone else, even more than he spoke about heaven?! For this very reason He came to die for us, to rescue us from this place that we deserve.\r\n\r\nHe describes hell as a real place where,\r\n\r\n\"Their worm does not die And the fire is not quenched\" (Mark 9:44)\r\n\r\nAnd where,\r\n\r\n\"There will be weeping and gnashing of teeth...\" (Luke 13:28).\r\n\r\nJesus tells us who to fear,\r\n\r\n\"And do not fear those who kill the body but cannot kill the soul. But rather fear Him who is able to destroy both soul and body in hell\" (Matthew 10:28).\r\n\r\n\"Now I saw a new heaven and a new earth, for the first heaven and the first earth had passed away. Also there was no more sea. Then I, John, saw the holy city, New Jerusalem, coming down out of heaven from God, prepared as a bride adorned for her husband. And I heard a loud voice from heaven saying, \'Behold, the tabernacle of God is with men, and He will dwell with them, and they shall be His people. God Himself will be with them and be their God. And God will wipe away every tear from their eyes; there shall be no more death, nor sorrow, nor crying. There shall be no more pain, for the former things have passed away.\'\r\n\r\nThen He who sat on the throne said, \'Behold, I make all things new.\' And He said to me, \'Write, for these words are true and faithful.\'\r\n\r\nAnd He said to me, \'It is done! I am the Alpha and the Omega, the Beginning and the End. I will give of the fountain of the water of life freely to him who thirsts. He who overcomes shall inherit all things, and I will be his God and he shall be My son. But the cowardly, unbelieving, abominable, murderers, sexually immoral, sorcerers, idolaters, and all liars shall have their part in the lake which burns with fire and brimstone, which is the second death.\'\" (Revelation 21:1-8).\r\n\r\nOut of all the world religions, how can we be sure the Bible got it right? The scientific data has established and continues to support that the universe once had a beginning in which space, time and matter were created. Many know this as the big bang.\r\n\r\n\"The non-biblical religions tell us that god or god\'s create within space and time that eternally exist. The Bible stands alone and says that time and space don\'t exist until God creates the universe.\" - Astronomer(Phd) Hugh Ross\r\n\r\nThe Bible not only got it right that space, time and matter all came into existence at the beginning of the universe, it also states in 11 different places that the universe is expanding thousands of years before scientists discovered these things.\r\n\r\nDid you know that the real Noah\'s Ark was discovered where the Bible told us it would be with the correct dimensions? As well as proof for the destruction of Sodom Gomorrah and the Exodus account of the Red Sea crossing?\r\n\r\nThe Bible is the most translated and read book in the history of the world, full of predictive prophecies, matching what we find in the book of nature. Wouldn\'t you expect God\'s word to be so?\r\n\r\nThis information and more can all be found here: http://biblefreedom.com\r\n\r\nGod loves you!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(453,43,'Free Stuff','BarrettWalgren@gmail.com','https://www.cravefreebies.com','172.241.250.179','2020-01-08 03:23:58','2020-01-08 02:23:58','I am constantly looking online for ideas that can help me. Thx!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(454,43,'Hairstyles','AyannaHerdon@gmail.com','https://www.hairstylesvip.com','172.241.250.179','2020-01-08 03:46:10','2020-01-08 02:46:10','In these days of austerity along with relative stress about running into debt, many people balk resistant to the idea of using a credit card in order to make purchase of merchandise or pay for any gift giving occasion, preferring, instead only to rely on a tried plus trusted technique of making transaction - cash. However, in case you have the cash on hand to make the purchase completely, then, paradoxically, that is the best time to be able to use the card for several factors.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(455,41,'boot','preston6383sdm@gmail.com','http://gunnerhryf7.link4blogs.com/13149379/the-best-side-of-graph-betting-site','183.111.196.197','2020-01-08 10:53:56','2020-01-08 09:53:56','Magnificent beat ! I would like to apprentice while youamend your website, how can i subscribe for a blog site?The account aided me a acceptable deal.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(456,33,'jnllzgen','saljepif@oiltempof.icu','https://cbdoilnumber1.com','5.188.210.4','2020-01-09 03:00:38','2020-01-09 02:00:38','american shaman cbd  cbd oil  <a href=\"https://cbdoilnumber1.com\" rel=\"nofollow\">cbd oil  </a>  buy cbd oil cure cbd oil  cbd oil cbd cream \r\n \r\ncbd oil  cbd oil  <a href=\"https://cbdoilnumber1.com\" rel=\"nofollow\">cbd oil </a>  oil cbd  cbd oil cbd oil benefits',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.51','',0,0),(457,41,'pollination','silas3060oam@gmail.com','http://titusjvfo0.tinyblogging.com/Social-Graph-Game-No-Further-a-Mystery-29460118','183.111.196.197','2020-01-09 11:13:44','2020-01-09 10:13:44','My coder is trying to convince me to move to .net from PHP.I have always disliked the idea because of the costs.But he’s tryiong none the less.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(458,41,'goose','eric8371tcg@gmail.com','http://riveramwe7.blogvivi.com/15580/the-ultimate-guide-to-graph-betting-site','183.111.196.197','2020-01-10 11:55:35','2020-01-10 10:55:35','I do not even know how I ended up here, but I thought this post wasgreat. I do not know who you are but certainly you’re going to a famous blogger if you aren’t already Cheers!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(459,183,'StevAbraro','stevboycle@tuda.icu','http://cialibuy.com','5.188.84.76','2020-01-10 22:43:47','2020-01-10 21:43:47','Efectos Del Viagra En El Hombre Zithromax Online Uk  <a href=\"http://cialibuy.com\" rel=\"nofollow\">Buy Cialis</a> Pfizer Viagra From Canada',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.146 Safari/537.36','',0,0),(460,26,'StevAbraro','stevboycle@tuda.icu','http://cialibuy.com','5.188.84.76','2020-01-11 13:12:29','2020-01-11 12:12:29','Levitra Lawyers Shipped Ups Stendra Medicine Fastestshiponcialis  <a href=\"http://cialibuy.com\" rel=\"nofollow\">Buy Cialis</a> Cialis 20 Mg De',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.99','',0,0),(461,41,'briskly','axel6271zjr@gmail.com','http://jaredrcrc6.blogprodesign.com/13104537/the-single-best-strategy-to-use-for-graph-game','183.111.196.197','2020-01-12 18:27:57','2020-01-12 17:27:57','want and his dick wouldstill be wet 24/7. That shit is effectively always about money or having a super big dick for the SQs beach dresses.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(462,30,'StevAbraro','stevboycle@tuda.icu','http://cialibuy.com','5.188.84.76','2020-01-13 03:19:22','2020-01-13 02:19:22','Buy Cheap Tamoxifen Online  <a href=\"http://cialibuy.com\" rel=\"nofollow\">Buy Cialis</a> Farmacias Viagra Sin Receta Levitra Coupons',0,'spam','Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(463,212,'Hairstyles','EdwinKrebs@gmail.com','https://www.hairstylescool.com','64.188.31.11','2020-01-13 09:06:55','2020-01-13 08:06:55','Terrific work! This is the type of information that should be shared around the net. Shame on Google for not positioning this post higher! Come on over and visit my website . Thanks =)',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(464,212,'Julio Bairos','Carrabine@gmail.com','http://www.visevi.it/index.php?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=1372920','142.234.203.70','2020-01-13 09:13:15','2020-01-13 08:13:15','I\'m impressed, I must say. Seldom do I come across a blog that\'s equally educative and interesting, and without a doubt, you have hit the nail on the head. The problem is something that too few people are speaking intelligently about. I\'m very happy I stumbled across this in my search for something regarding this.|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(465,41,'remnant','jeremy6383znz@gmail.com','http://lukasnyhq1.get-blogging.com/10646/sports-toto-betting-an-overview','183.111.196.197','2020-01-13 17:19:55','2020-01-13 16:19:55','I’m gone to say to my little brother, that he should also pay a quick visit this webpage on regular basis to take updated from hottest news update.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(466,5,'StevAbraro','stevboycle@tuda.icu','http://cialibuy.com','5.188.84.76','2020-01-14 04:06:32','2020-01-14 03:06:32','Combining Metronidazole And Amoxicillin Prix Cialis Boite De 4 Como Conseguir Cytotec En Chicago  <a href=\"http://cialibuy.com\" rel=\"nofollow\">cialis 20mg for sale</a> Rischi Del Viagra',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.99','',0,0),(467,41,'apreapriah','maximus6382bkq@gmail.com','http://charliehyjs3.blogolize.com/5-Essential-Elements-For-Private-toto-site-30306054','183.111.196.197','2020-01-14 17:59:06','2020-01-14 16:59:06','Hi there, all the time i used to check website postshere in the early hours in the daylight, for the reason that i love to find out more and more.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(468,37,'StevAbraro','stevboycle@belan.space','http://cialibuy.com','5.188.84.76','2020-01-14 19:41:49','2020-01-14 18:41:49','Cialis Vendita Svizzera Compra Finasteride Propecia Zithromax Heart Arrhythmia  <a href=\"http://cialibuy.com\" rel=\"nofollow\">Cialis</a> What Is Keflex 750 Cap Confezioni Viagra 100 Mg Daily Cialis Without Prescription',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(469,197,'StevAbraro','stevboycle@belan.space','http://cialibuy.com','5.188.84.76','2020-01-14 23:00:49','2020-01-14 22:00:49','Viagra Kaufen Augsburg  <a href=\"http://cialibuy.com\" rel=\"nofollow\">п»їcialis</a> Levitra Gegen Zu Fruhes Kommen',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.71','',0,0),(470,12,'StevAbraro','stevboycle@belan.space','http://cialibuy.com','5.188.84.76','2020-01-15 06:36:03','2020-01-15 05:36:03','Effects Of Alcohol On Amoxicillin Clobetasol With Next Day Delivery Cheap Viagra Super Active  <a href=\"http://cialibuy.com\" rel=\"nofollow\">Buy Cialis</a> Buy Glucophage 500 Mg Cialis Order',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36 Kinza/4.9.1','',0,0),(471,43,'Hairstyles Men','ShirleeRevering@gmail.com','https://www.hairstyleslook.com','82.102.30.85','2020-01-16 14:18:26','2020-01-16 13:18:26','Would you be occupied with exchanging links?',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(472,41,'hpysicist','oscar8515epy@gmail.com','http://xuejava.org/space-uid-53448.html','183.111.196.197','2020-01-17 02:04:23','2020-01-17 01:04:23','Hello, all is going perfectly here and ofcourse every one issharing data, that’s genuinely good, keep up writing.Ι couldn’t resist commentіng. Very well written!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(473,41,'nugracious','brady1739nyh@gmail.com','http://sn025.com/home.php?mod=space&amp;uid=44658','183.111.196.197','2020-01-18 01:44:38','2020-01-18 00:44:38','Some players who walk out the front door but wish to avoid The Swarm time their departure to the moment Kelly drives his cart through the gate.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(474,41,'ivndicate','jude6272rbi@gmail.com','http://xzbook.cn/bbs/home.php?mod=space&amp;uid=43844','183.111.196.197','2020-01-19 04:39:58','2020-01-19 03:39:58','Attractive section of content. I just stumbled upon yourwebsite and in accession capital to assert that I get actuallyenjoyed account your blog posts.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(475,41,'cliesehycle','s1921enz@gmails.com','https://www.embromix.com','37.113.164.83','2020-01-19 10:55:10','2020-01-19 09:55:10','I real believe this transfer. I?ve been writer all over for this! Change degree I make it on Bing. You\'ve prefabricated my day! Thanks again',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; MyIE2; Deepnet Explorer)','',0,0),(476,39,'cliesehycle','s1921enz@gmails.com','https://www.embromix.com','37.113.172.9','2020-01-19 16:16:34','2020-01-19 15:16:34','Hi, I do anticipate this is an excellent diary. I stumbledupon it ;) I am leaving to income yet again since i love blest as a contender it. Money and freedom is the optimal way to commute, may you be plush and travel to amend added group.',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','',0,0),(477,197,'Hairstyles','LyleVaghy@gmail.com','https://www.hairstylesvip.com','37.120.147.174','2020-01-20 02:00:37','2020-01-20 01:00:37','Hello this is somewhat of off topic but I was wanting to know if blogs use WYSIWYG editors or if you have to manually code with HTML. I\'m starting a blog soon but have no coding skills so I wanted to get guidance from someone with experience. Any help would be greatly appreciated!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(478,41,'etamster','alejandro9626fte@gmail.com','http://wfod07-2.dgweb.kr/community/board02/?page=1&amp;method=view&amp;no=322','183.111.196.197','2020-01-20 06:00:11','2020-01-20 05:00:11','My partner and I stumbled over here coming from a different web address and thought I should check things out.I like what I see so now i am following you. Look forward to looking into your web page again.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(479,41,'rtemendously','abraham4161juc@gmail.com','http://bbs.sijige.net/home.php?mod=space&amp;uid=68888','183.111.196.197','2020-01-20 10:04:22','2020-01-20 09:04:22','Please let me know if you have any kind of recommendationsor tips for brand new aspiring bloggers. Thankyou!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(480,212,'MelvinImmuh','marksburyv@gmail.com','https://newszou.com','91.122.30.68','2020-01-20 19:09:37','2020-01-20 18:09:37','When The Note Turned Blue\r\n\r\nBooks Lindsay Ellis\'s latest video essay is about Barthe\'s Death of the Author and the relevance it has to some modern texts, especially John Green\'s The Fault In Our Stars. And, given the consequences that can extend beyond just their reputation, it\'s no wonder that professional and academic writers who wish to avoid them take the time to understand the complete definition of plagiarism and run their work through a plagiarism checker before sending it out into the world.\r\n \r\n<a href=\"https://newszou.com\" rel=\"nofollow\">content</a>\r\n<a href=\"https://myessaymaster.com\" rel=\"nofollow\">made my day</a>\r\n<a href=\"https://astischool.com\" rel=\"nofollow\">one-time offer</a>\r\n \r\n \r\n7 Tips On Writing An Effective Essay\r\n\r\nAn introduction to academic writing for English Language Learners, focusing on essay development, grammatical correctness, and self-editing. A nonfiction writing prompt (in case you didn\'t know) is a simple brainstorming tool that helps you come up with new blog posts, articles and ebook topics to write about. Conclude the essay with a paragraph that restates the thesis and recaps the descriptive and sensory details.\r\n \r\n<a href=\"https://www.osymbilgi.com/jandarma-astsubay-temel-egitim-kursu-sinavi/#comment-315\" rel=\"nofollow\">English Essay Help. #1 UK Essay Service. Reputable &amp; Trusted!</a>\r\n<a href=\"http://zmc-sittard.nl/#comment-17478\" rel=\"nofollow\">Sample Gilman Essay #2</a>\r\n<a href=\"http://www.talkingsports.info/discussion/index.php?topic=2.new#new\" rel=\"nofollow\">Is It Ethical To Use Essay Writing Services?</a>\r\n fa2b62_',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.146 Safari/537.36','',0,0),(481,116,'Armand Canham','KelleyBreyfogle5554@gmail.com','https://dreamproxies.com/dreamproxies-introduction-video','138.128.108.56','2020-01-22 04:21:04','2020-01-22 03:21:04','some really  good information, Sword lily I found this.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(482,41,'awterworks','kaden8514ygm@gmail.com','http://bbs.g-bits.com/home.php?mod=space&amp;uid=685982','183.111.196.197','2020-01-22 13:44:45','2020-01-22 12:44:45','Very nice post. I just stumbled upon your weblog and wished to say that Ihave really enjoyed browsing your blog posts.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(483,39,'всеобщая история 6 класс решебник крючкова онлайн','denhcdfxz@bigmir.net','http://starangen.webcindario.com/dibavatu/vseobshaya-istoriya-6-klass-reshebnik-kryuchkova-onlayn.php','178.137.19.3','2020-01-23 21:23:47','2020-01-23 20:23:47','Howdy just wanted to give you a quick heads up. The text in your content seem to be running off the screen in Ie. I\'m not sure if this is a format issue or something to do with web browser compatibility but I thought I\'d post to let you know. The design look great though! Hope you get the problem resolved soon. Cheers|  а',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(484,41,'psectacular','silas6158txa@gmail.com','https://www.globalsatellite.us/users/vincentlaf','183.111.196.197','2020-01-24 17:55:16','2020-01-24 16:55:16','What’s Going down i’m new to this, I stumbled upon this I have discoveredIt absolutely helpful and it has helped me out loads.I hope to contribute &amp; assist other users like its helped me.Great job.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(485,41,'nuconditional','liangr655@gmail.com','http://louisgsbl9.post-blogs.com/12952069/facts-about-sports-toto-betting-revealed','183.111.196.197','2020-01-25 17:43:14','2020-01-25 16:43:14','I also am a blogger,and I was wondering your situation; many of us havedeveloped some nice procedures and we are looking to swapsolutions with other folks, be sure to shoot me an email ifinterested.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(486,41,'jalowkicielne','Damis@aol-online.com','http://jalowkicielne.pl','196.245.185.49','2020-01-25 19:24:38','2020-01-25 18:24:38','*Your place is valueble for me. Thanks!?',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(487,41,'apmphleteer','abel4272cqb@gmail.com','http://rafaeljvoe7.blogofoto.com/19144169/totohan-sports-betting-site-options','183.111.196.197','2020-01-26 17:22:54','2020-01-26 16:22:54','You actually make it seem so easy with your presentation but I find this topicto be actually something which I think I would never understand.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(488,41,'CBD Reviewers Wanted - CBD Drinks','oncustserv@woolworths.co.za','https://allcbdstores.com/','176.9.253.244','2020-01-26 23:23:06','2020-01-26 22:23:06','We are currently searching for individuals to review CBD items from various CBD companies on our website at allcbdstores.com. If anybody here is interested, feel free to reply here or DM me and I will get some CBD products, including CBD Vaping, CBD CARTRIDGES and CBD Flower sent out to you for your review.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(489,41,'asilboat','kai6383tfp@gmail.com','http://emiliofrbk9.blog5star.com/341447/the-best-side-of-graph-betting-site','183.111.196.197','2020-01-28 01:41:50','2020-01-28 00:41:50','I have been a little bit familiar of this yourbroadcast offered vivid clear idea Currently it looks like BlogEngine is the best blogging platform available right now.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(490,41,'tsabilize','preston4058xuq@gmail.com','http://griffincaup0.dailyblogzz.com/23879/join-money-game-site-secrets','183.111.196.197','2020-01-29 01:57:43','2020-01-29 00:57:43','Thankfulness to my father who told me regarding this web site,this website is actually amazing.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(491,41,'Gold Tooth eJuice','info@zoorvapor.com','https://allvapebrands.com/','176.9.253.244','2020-01-29 04:47:18','2020-01-29 03:47:18','Good Afternoon! I was hoping whether anyone can help me with choosing some new ejuice lines for our global vape marketplace https://allvapebrands.com? In about 2 weeks, I will be adding the following e-juice brands - FAR Made In USA E-liquid, Bali Fruits SALTS, Evercloud eJuice , In Your Face Eliquids and Puff Labs MFG. Has anyone tried these brands?',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(492,41,'uprlieus','zhaoyounan641@gmail.com','http://archeruirz5.bloginder.com/70172/indicators-on-graph-game-betting-site-you-should-know','183.111.196.197','2020-01-30 01:40:52','2020-01-30 00:40:52','Could you please extend them a bit from subsequent time?Thanks for the post.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(493,39,'Vape Shops in Pembroke Pines, Florida','hello@sindicatocigars.com','https://allvapestores.com/','176.9.253.244','2020-01-30 05:13:51','2020-01-30 04:13:51','Good morning, We would like to take this specific opportunity to invite you to post your firm on All Vape Stores, a popular CBD and Vape Shop Catalogue. A Little Bit about Us - All Vape Stores is a worldwide CBD and Vape Shop Database that is aimed to aid people locate their nearby CBD and vape shops. We already receive more than 100,000 distinct and highly-targeted website visitors a month, primarily from the UK and UNITED STATES. We attain such a high site visitor traffic number by operating a very successful CBD and vape blog precisely where we cover the most up to date CBD and vape industry news, customer reviews and user guides. We also send frequent weekly newsletters to our users when we post new articles. By listing your company with All Vape Stores, you will get an opportunity to grow your brand\'s exposure, web site traffic and consumer base. Clients will have the opportunity to get in touch with you via a contact form directly on your business listing web page. Furthermore, you will receive a backlink from your listing which will aid you with your S.E.O link building for organic online search engine rankings. To list your company, please head to: https://allvapestores.com/ We eagerly anticipate seeing you onboard. Kind regards, All Vape Stores Group',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(494,39,'BETA Testers Wanted for Ask Scraper and Email Extractor by Creative Bear Tech','support@earthshealing.com','http://www.downloadscart.com','46.4.230.232','2020-01-30 09:01:35','2020-01-30 08:01:35','Hi, I am the lead developer responsible for the Google search engine Scraper and Email Extractor by Creative Bear Tech. I am trying to find potential beta software testers. If anybody is interested, please let me know. You can DM me here or send me a message on https://creativebeartech.com.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(495,39,'BETA Testers Wanted for LinkedIn Scraper and Email Extractor by Creative Bear Tech','sean@glassheadswholesale.com','https://creativebeartech.com/page/b2b-email-marketing-list-of-all-vape-shops-in-russia','176.9.221.119','2020-01-30 10:25:44','2020-01-30 09:25:44','Hi, I am the lead developer responsible for the Search Engine Scraper and E-mail Extractor by Creative Bear Tech. I am looking out for potential beta software testers. If anybody is interested, please let me know. You can DM me right here or send me a message on https://creativebeartech.com.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(496,43,'666','doglovr888@gmail.com','https://biblefreedom.com','104.200.159.72','2020-01-30 10:36:40','2020-01-30 09:36:40','Hello,\r\n\r\nI\'d like to share some very significant information that\'s been spreading throughout the internet relevant to our future security.\r\n\r\nWe are coming towards a future of a one-world cashless society in which they will mandate us to have an RFID microchip inserted in our body. This chip will hold all our data and we will lose much more of our privacy due to the tracking capabilities.\r\n\r\nEven more importantly, did you hear that this was all predicted almost 2000 years ago from a person named Jesus? Don\'t believe me? Read on... This could be the most important thing you will read.\r\n\r\n- \"And he(the false prophet) makes everyone—small and great, rich and poor, free and slave—to receive a mark on his right hand or on his forehead, so that no one can buy or sell unless he has the mark: the beast’s name or the number of its name.\r\n\r\nThis calls for wisdom: Let the one who has understanding calculate the number of the beast, because it is the number of a person. Its number is 666\" (Revelation 13:16-18 CSB)....\r\n\r\nSpeaking on the last times, this could only be referring to a cashless society, which we have yet to see, but we are making our way towards. How come? Because we could still buy or sell without accepting the mark of the beast between one another if tangible money was still around. It logically deduces itself to this reason.\r\n\r\nThe mark of the beast cannot be anything spiritual, because the word references two distinct physical locations. If it were to be spiritual, the text would only conclude one place.\r\n\r\nNow here is where it gets interesting. It is startling how perfect the word of God is with respect to this RFID microchip. Here are some notes from a man named Carl Sanders who labored with a team of engineers to help produce this RFID microchip in the 90\'s.\r\n\r\nMr. Carl Sanders sat in seventeen New World Order conferences with heads-of-state officials such as Henry Kissinger and Bob Gates of the C.I.A. to talk about their agenda on how to bring about this one-world system. The government commissioned Carl Sanders to design a microchip for identifying and controlling the peoples of the nations-a microchip that would be placed under the skin with a hypodermic needle(a quick, convenient procedure that would be progressively accepted by society).\r\n\r\nCarl Sanders, with a group of engineers behind him, with U.S. grant monies supplied by US tax dollars, took on this challenge and engineered a microchip that is powered by a lithium battery, rechargeable with the aid of the temperature changes in our skin. With out having understanding of the Bible (Sanders was not a follower of Christ at the time), these men spent one and a half million dollars doing research on the best and most convenient place to have the RFID microchip placed within the body.\r\n\r\nGuess what? These researchers found that the forehead and the back of the hand(the two locations Revelation says the mark will be placed) are not only the most convenient locations, but are also the only viable locations for fast, steady temperature changes inside the skin to recharge the lithium battery. The RFID microchip is around 7 millimeters in length, .75 millimeters in diameter, about the size of a grain of rice. It\'s capable of storing pages upon pages of information about you. All of your basic information, work history, crime records, health information, and financial records may be stored on this chip.\r\n\r\nMr. Sanders believes that this chip, which he remorsefully helped bring about, is the \"mark\" mentioned in Revelation 13:16-18. The original Greek word for \"mark\" is \"charagma,\" which means a \"scratch or etching.\" It is also interesting to observe that the number 666 is actually a word in the original Greek language. That word is \"chi xi stigma,\" with the final word, \"stigma,\" additionally meaning \"to stick or prick. Carl believes this is referring to using a hypodermic needle being poked into the human flesh to insert the RFID microchip.\"\r\n\r\nCarl Sanders reached out to a doctor asking what would take place if the lithium contained within the RFID microchip leaked into the human body. The doctor replied by saying a horrible sore would arise in that location. This is what the book of Revelation says:\r\n\r\n\"And the first(angel) went, and poured out his bowl into the earth; and it became a noisome and grievous sore upon the men that had the mark of the beast, and that worshipped his image\" (Revelation 16:2 ASV).\r\n\r\nThe holy scriptures tell us we cannot buy or sell without receiving the mark of the beast, or the number of its name. This number of the beast being 666. The Bible tells us to calculate the number 666. How can we calculate 666?\r\n\r\nThis is where it becomes an eye opener. Counting the number 666 has been long debated throughout centuries, but has finally been unveiled in these final days by the revelation of God. What I will show you establishes itself with the Bible the true meaning to count six-six-six.\r\n\r\nIn the Bible, God uses the number 3 as confirmation of things. Below are a some examples:\r\n\r\n\"For there are three that bear witness in heaven: the Father, the Word, and the Holy Spirit; and these three are one\" (1 John 5:7 NKJV).\r\n\r\n\"and that He was buried, and that He rose again the third day according to the Scriptures\" (1 Corinthians 15:4 NKJV).\r\n\r\n\"...Holy, holy, holy, Lord God Almighty, Who was and is and is to come!\" (Revelation 4:8 NKJV).\r\n\r\nNow what is interesting is the the mark of the beast is explained in detail in three distinct verses (Revelation 13:16,17,18), and each verse lists 3 different characteristics of the given subject. The last 3 being the number 6 used 3 times in a row. This leads to the mystery to unlocking how to calculate the number 666.\r\n\r\nWhat does it mean to count? It means to add up. How may we add up 666? Call back to mind my past key point regarding God confirming in 3\'s. So logically, what would be the most rational way to count the number 666? To add it up equally in 3\'s based off the number. It is not rational to count it equally as 600+60+6, this would also revert us back to the beginning. We cannot add it as 600+600+600, or 60+60+60, because there are no zeroes in between or at the end of 666. The only logical option is 6+6+6=18. What is interesting is that the verse that tells us to count the number of the beast itself is verse 18, being the 3rd verse out of 3 verses that describe the mark. What is 18 divided by 3? 6. So 3x6=18, or 6+6+6=18.\r\n\r\nAnother fascinating point is that the two other combinations (bringing a total of three possible combinations) for placing a \"+\" symbol in between the sixes are 66+6=72, and 6+66=72. Count both 72\'s together and you get 144. Why the number 144 is interesting is because the verse following Revelation 13:18 is the first time in scripture where the 144,000 are being mentioned in detail:\r\n\r\n\"Then I looked, and behold, a Lamb standing on Mount Zion, and with Him one hundred and forty-four thousand, having His Father’s name written on their foreheads...\" (Revelation 14:1).\r\n\r\nNow if you add up all three values by counting 666 by moving the \"+\" symbol around in all three possible combinations, it would be 72+72+18=162. What is interesting about the number 162, is, if you divide 144,000 by 162, you get 888. The name for Jesus in Greek gematria calculates to 888. The New Testament was written in the Greek language. Revelation 14:1 not only mentions the 144,000, but also the Lamb of God being Jesus.\r\n\r\nNow what is fascinating about the number for Jesus, 888, is that if you apply this same formula, you get 8+8+8=24. Why the number 24? Revelation chapter 4 tells us there are 24 elders seated around the throne of God. This is the same throne where Jesus sits:\r\n\r\n\"Immediately I was in the Spirit; and behold, a throne set in heaven, and One sat on the throne. And He who sat there was like a jasper and a sardius stone in appearance; and there was a rainbow around the throne, in appearance like an emerald. Around the throne were twenty-four thrones, and on the thrones I saw twenty-four elders sitting, clothed in white robes; and they had crowns of gold on their heads\" (Revelation 4:2-4).\r\n\r\nNow if you take 8+8+8=24, and 8+88=96, and 88+8=96, you get 24+96+96=216. Take 144,000 divided by 216 and you get 666. Do not forget that this was the identical formulation to get the number 162 out of counting 666 that brought about the number 888 when dividing 144,000 by 162. It\'s perpetual.\r\n\r\nWith using the same method of counting by adding the plus symbol in between the numbers, why do all these numbers relate in such a way?\r\n\r\nYet another interesting factor to observe is that if you add up all of the numbers from 1 to 36, it totals 666. The number 36, as in three sixes? May this be a hint that we should add up three sixes as opposed to perceiving the number as six-hundred sixty six?\r\n\r\nSo what might this mean? Well we all know in this world we are identified by numbers in numerous forms. From our birth certificate to our social security card, as well as our drivers license, being identified based on a system of ruler ship. So it is plausible that this RFID microchip will include a new identification that has a total of 18 characters.\r\n\r\nCould this be the title of the beast, the number of its name? The one-world beast system that\'s recognized by 18 characters? This is able to fit the scriptures that speaks of a mark that we must have to buy or sell in our right-hand or forehead, and that it additionally contains the number of the beast, during a future cashless money society.\r\n\r\nGo to: https://biblefreedom.com to see all the proof!\r\n\r\nThe scriptures warns us in the end times that a false prophet will stand up doing miracles to deceive many to acquire the beasts mark:\r\n\r\n\"Then the beast was captured, and with him the false prophet who worked signs in his presence, by which he deceived those who received the mark of the beast and those who worshiped his image\" (Revelation 19:20).\r\n\r\nAt all costs, DO NOT TAKE IT!\r\n\r\n\"Then a third angel followed them, saying with a loud voice, \"If anyone worships the beast and his image, and receives his mark on his forehead or on his hand, he himself shall also drink of the wine of the wrath of God, which is poured out full strength into the cup of His indignation. He shall be tormented with fire and brimstone in the presence of the holy angels and in the presence of the Lamb. And the smoke of their torment ascends forever and ever; and they have no rest day or night, who worship the beast and his image, and whoever receives the mark of his name\" (Revelation 14:9-11).\r\n\r\nWe\'re residing in very prophetic times with major Biblical prophecies being fulfilled. When Donald Trump recognized Jerusalem as capital of Israel in December of 2017, this was a large step to bring about the Third Temple foretold within the the scriptures.\r\n\r\nGod\'s word tells us that the Antichrist will seat himself in this temple:\r\n\r\n\"...and the man of sin is revealed, the son of perdition, who opposes and exalts himself above all that is called God or that is worshiped, so that he sits as God in the temple of God, showing himself that he is God\" (2 Thessalonians 2:3-4).\r\n\r\nInside the Islamic religion, there is a figure called the Mahdi, known as their messiah who they are waiting to be revealed. There are a number of testimonies from individuals on-line who believe this man will be Barack Obama who may be the biblical Antichrist. I myself have had unusual dreams concerning Barack. He got on stage proclaiming himself to be a follower of Jesus with no affiliation to the Muslim religion, but was later revealed by his own family members that he certainly is a faithful Muslim.\r\n\r\nHis real name is said to be Barry Soetoro, and he had his name switched to Barack Obama. Why would he do this?\r\n\r\nJesus says, \"And He said to them, \'I saw Satan fall like lightning from heaven\'\" (Luke 10:18).\r\n\r\nIn Hebrew, the name \"Barack\" means \"lighting\", and the usage of \"Bama\" (Strongs Hebrew word 1116) is used to mean the \"heights\" of heaven. \r\n\r\nThe day following the election of Barack Obama (11/04/08), the triumphing pick three lotto numbers in Illinois (Obama’s home state) for 11/5/08 were 666.\r\n\r\nObama was formerly a U.S. senator for Illinois, and his zip code was 60606.\r\n\r\nRegardless, whoever seats himself in the Third Temple that is to be built in Jerusalem, declaring themselves to be God WILL BE THE ANTICHRIST. NEVER FORGET.\r\n\r\nWhy do we need Jesus?\r\n\r\n\"for all have sinned and fall short of the glory of God\" (Romans 2:23).\r\n\r\n\"For the wages of sin is death, but the gift of God is eternal life in Christ Jesus our Lord\" (Romans 6:23).\r\n\r\nOur good works can\'t save us. If we step before a judge, being responsible of a crime, the judge will not judge us by the good that we\'ve accomplished, but rather the crimes we have committed. If we as fallen humanity, created in God\'s image, pose this kind of moral justice, how much greater a perfect, righteous, and Holy creator?\r\n\r\nGod has delivered to us His moral regulation\'s through the 10 commandments handed to Moses at Mt. Siani. These laws were not given so we may be justified, however in order that we could see the need for our saviour. They are the mirror of God\'s character of what He has put in each of us, with our conscious bearing witness that we all know that it\'s an act of evil to steal, lie, dishonor our parents, and son on.\r\n\r\nWe may try to follow all the moral laws of the 10 commandments, however we will never catch up to them to be justified before a Holy God. The same word of the law given to Moses became flesh over 2000 years ago inside the body of Jesus Christ. He came to be our justification by perfectly fulfilling the law, living a sinless life that only God may fulfill.\r\n\r\nThe distance between us and the law can in no way be reconciled by our own personal merit, but the arm of Jesus is stretched out by the grace and mercy of God. And if we\'re to grab on, by faith in Him, He will pull us forward being the one to justify us. As in the court of law, if someone steps in and pays your fine, even though you\'re guilty, the judge can do what\'s legal and just and allow you to go free. This is what Jesus did nearly 2000 years ago on the cross. It was a legal transaction being fulfilled within the spiritual realm by the shedding of His blood, with His final words being, \"...It is finished!...\" (John 19:30).\r\n\r\nNow why did Jesus have to die for us?\r\n\r\nDue to the fact that God is Holy and just, the wrath that belongs to us could not be overlooked. Because of the perfect righteousness and justice of God\'s character, it ought to be reconciled, it ought to be quenched and satisfied.\r\n\r\nFor God takes no pleasure in the dying of the wicked (Ezekiel 18:23). That is why in Isaiah chapter 53, the place it speaks of the coming Messiah and His soul being a sacrifice for our sins, why it says it pleased God to crush His only begotten Son.\r\n\r\nThis is because the wrath that we deserve was justified by being poured out upon His Son. For if it were to be poured out upon us deserve it, we\'d all die and go to hell. God created a means of escape by pouring it out on His Son who\'s soul could not stay in Hades, but was raised and seated on the right hand of God in power.\r\n\r\nNow after we put on the Lord Jesus Christ (Romans 13:14), God no longer looks at the person who deserves His wrath, but now the glorious image of His perfect Son living in us, justifying us as if we received the wrath we deserve, making a way of escape from the curse of death.\r\n\r\nNow what we must do is turn from our sins and trust in the savior, confessing and turning from our sins. This is not only a head knowledge of believing in Jesus, howeverrather receiving His words, taking them to heart. Where we no longer live to practice sin, however turn away from our sins and practice righteousness:\r\n\r\n\"Do you not know that the unrighteous will not inherit the kingdom of God? Do not be deceived. Neither fornicators, nor idolaters, nor adulterers, nor homosexuals, nor sodomites, nor thieves, nor covetous, nor drunkards, nor revilers, nor extortioners will inherit the kingdom of God. And such were some of you. But you were washed, but you were sanctified, but you were justified in the name of the Lord Jesus and by the Spirit of our God\" (1 Corinthians 6:9-11).\r\n\r\nBy doing so we will come to be transformed into the image of God by way of faith in His Son Christ Jesus Who\'s inclined to give the Holy Spirit to those who ask of Him:\r\n\r\n\"Most assuredly, I(Jesus) say to you, unless one is born of water and the Spirit, he cannot enter the kingdom of God. That which is born of the flesh is flesh, and that which is born of the Spirit is spirit. Do not marvel that I said to you, \'You must be born again.\' (John 3:5-6).\r\n\r\n\"But you are not in the flesh but in the Spirit, if indeed the Spirit of God dwells in you. Now if anyone does not have the Spirit of Christ, he is not His\" (Romans 8:9).\r\n\r\nSo what are you waiting for? Our Father in heaven only desires the best for us all, restoring all the things this world has stolen from us. That is what it means to be \"holy\". To be made whole.\r\n\r\nHe is ready to listen to you. That God given tongue to speak language, through faith, pray to Him, ask Him to forgive you by confessing your sins and be willing to forsake them; that you receive the sacrifice of His Son Jesus on the cross, and that you want His Holy Spirit living inside you reworking you into a child of God.\r\n\r\nJesus says, \"but whoever drinks of the water that I shall give him(the Holy Spirit) will never thirst. But the water that I shall give him will become in him a fountain of water springing up into everlasting life.\"\r\n\r\nDid you know that Jesus spoke more about hell than any individual else in the Bible, even more than He spoke about heaven?! For this very reason He was brought forth to die for us, to deliver us from this place that we earned by our sins against a holy God.\r\n\r\nHe describes hell as a actual place where,\r\n\r\n\"Their worm does not die\r\nAnd the fire is not quenched\" (Mark 9:44).\r\n\r\nAnd where,\r\n\r\n\"There will be weeping and gnashing of teeth...\" (Luke 13:28).\r\n\r\nJesus tells us who to fear,\r\n\r\n\"And do not fear those who kill the body but cannot kill the soul. But rather fear Him who is able to destroy both soul and body in hell\" (Matthew 10:28).\r\n\r\n\"Now I saw a new heaven and a new earth, for the first heaven and the first earth had passed away. Also there was no more sea. Then I, John, saw the holy city, New Jerusalem, coming down out of heaven from God, prepared as a bride adorned for her husband. And I heard a loud voice from heaven saying, \'Behold, the tabernacle of God is with men, and He will dwell with them, and they shall be His people. God Himself will be with them and be their God. And God will wipe away every tear from their eyes; there shall be no more death, nor sorrow, nor crying. There shall be no more pain, for the former things have passed away.\'\r\n\r\nThen He who sat on the throne said, \'Behold, I make all things new.\' And He said to me, \'Write, for these words are true and faithful.\'\r\n\r\nAnd He said to me, \'It is done! I am the Alpha and the Omega, the Beginning and the End. I will give of the fountain of the water of life freely to him who thirsts. He who overcomes shall inherit all things, and I will be his God and he shall be My son. But the cowardly, unbelieving, abominable, murderers, sexually immoral, sorcerers, idolaters, and all liars shall have their part in the lake which burns with fire and brimstone, which is the second death.\'\" (Revelation 21:1-8).\r\n\r\nOut of all of the world religions, how can we make sure the Bible has it right? The scientific facts has established and continues to support that the universe once had a beginning in which space, time and matter were created. Many know this as the big bang.\r\n\r\n\"The non-biblical religions tell us that god or god\'s create within space and time that eternally exist. The Bible stands alone and says that time and space don\'t exist until God creates the universe.\" - Astronomer(Phd) Hugh Ross\r\n\r\nThe Bible not only got it correct that space, time and matter all came into existence at the beginning of the universe, it additionally states in 7 distinct scriptures that the universe is in a continuous state of expansion 1000\'s of years before scientists found out these things.\r\n\r\nDid you know that the actual Noah\'s Ark was found where God\'s word told us it would be with the correct dimensions? As well as proof for the destruction of Sodom and Gomorrah and the Exodus event of the Red Sea crossing?\r\n\r\nThe Bible is the most translated and read historical document in the history of the world, packed with predictive prophecies, matching what we discover in the book of nature. Would not you expect God\'s word to be so?\r\n\r\nThis info and more can all be found right here: https://biblefreedom.com\r\n\r\nGod loves you!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(497,39,'CBD Reviewers WANTED - CBD Supplements','mario@balacatering.com','https://cbdlifemag.com/how-to-reuse-your-vaped-weed-vaping-your-weed/','95.216.87.154','2020-01-30 19:20:11','2020-01-30 18:20:11','We are currently looking for individuals to review CBD product lines from various CBD Brands on our blog at cbdlifemag.com. If anyone is interested, feel free to respond right here or DM me and I will get some CBD goods, including CBD E-Juice, CBD CARTRIDGES and CBD Oil Syringes sent to you for your evaluation.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(498,43,'Free Stuff','49390KylieKampf@yahoo.com','https://www.cravefreebies.com','64.188.1.148','2020-01-30 21:17:36','2020-01-30 20:17:36','Good day! This is my first comment here so I just wanted to give a quick shout out and say I genuinely enjoy reading your blog posts. Can you recommend any other blogs/websites/forums that cover the same subjects? Appreciate it!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(499,41,'Vape Shops in SKOPLJE, Macedonia','careers@address.com','https://allvapestores.com/','176.9.253.244','2020-01-31 08:18:06','2020-01-31 07:18:06','Good morning, We would love to take this specific opportunity to invite you to post your firm on All Vape Stores, a leading CBD and Vape Company Website Directory. A Tiny Bit about Us - All Vape Stores is a worldwide CBD and Vape Store Catalogue that is aimed to aid folks discover their local CBD and vape companies. We already receive more than 100,000 unique and highly-targeted website visitors a month, primarily from the UK and UNITED STATES. We attain such a high internet site web traffic figure by operating a very successful CBD and vape blog site in which we cover the latest CBD and vape industry news, reviews and user guides. We also send frequent daily newsletters to our subscribers when we post new articles. By listing your business with All Vape Stores, you will receive an opportunity to develop your brand\'s publicity, website traffic and consumer base. Clients will have the chance to get in touch with you via a contact form straight on your business listing page. Additionally, you will receive a backlink from your listing which will help you with your ONLINE MARKETING link building for organic google rankings. To list your company, please head to: https://allvapestores.com/ We eagerly anticipate seeing you on-board. Kind regards, All Vape Stores Team',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(500,41,'Become a CBD Reviewer - CBD Drinks','bordertownvt@gmail.com','https://cbdlifemag.com/how-to-choose-the-perfect-cannabis-strain/','95.216.87.154','2020-01-31 23:33:52','2020-01-31 22:33:52','We are presently seeking individuals to review CBD items from leading CBD Brands on our blog at cbdlifemag.com. If anyone is interested, please reply right here or DM me and I will get some CBD products, including CBD GUMMIES, CBD For Pets and CBD Oil Syringes sent out to you for your evaluation.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(501,43,'Bible','animallovr888@aol.com','https://biblefreedom.com','104.200.159.72','2020-02-01 01:40:44','2020-02-01 00:40:44','I hope you could find the time to look this over,\r\n\r\nI\'d like to share some extremely important news that has been spreading throughout the internet relating to our future security.\r\n\r\nWe are approaching a future of a one world cashless money society in which we will be mandated to have an RFID chip implanted in our body. This microchip will store all of our information and we will lose our privacy because of the tracking power.\r\n\r\nMore importantly, did you know that this was all foretold about two thousand years ago from a man named Jesus? How could this be? Read on... This may be the most important thing you will read.\r\n\r\n- \"He(the false prophet) forces everyone—the small and great, the rich and poor, the free and slaves—to have a mark put on their right hand or on their forehead. He will not allow anyone to make a purchase or sell anything unless the person has the mark with the beast’s name or the number of its name. This calls for wisdom. Let the one who understands calculate the beast’s number, for it’s a human being’s number. Its number is six hundred sixty-six\" (Revelation 13:16-18 CEB)...\r\n\r\nSpeaking on the final times, this could only be referring to a cashless money society, which has yet to occur, but we are on the horizon of. Why? Because we would be able to buy or sell without taking the mark of the beast between each other if tangible money was still in use. It logically deduces itself to this end.\r\n\r\nThe mark can\'t be anything spiritual, because the word references two unique physical locations. If it were to be spiritual, the text would only conclude one place.\r\n\r\nHere is where it really ties together. It is shocking how precise the word of God is in the matter of this RFID chip. Here are some notes from a guy named Carl Sanders who labored with a squad of engineers to help develop this RFID chip in the 1900\'s.\r\n\r\nMr. Carl Sanders sat in seventeen New World Order meetings with heads of state officials such as Henry Kissinger and Bob Gates of the C.I.A. to discuss plans on how to bring forth this one-world system. The government commissioned Carl Sanders to invent a microchip for identifying and controlling the peoples of the world-a microchip that could be inserted below the skin with a hypodermic needle(a fast, convenient method that would be progressively received by the world).\r\n\r\nCarl Sanders, with a crew of engineers behind him, with US grant monies provided by US tax dollars, took on this task and designed a chip that is powered by a lithium battery, rechargeable through the temperature changes in our skin. With out having knowledge of the biblical scriptures (Sanders was not a follower of Christ at the time), these men spent one-and-a-half-million dollars gathering information on the best and most convenient location to have the RFID microchip placed in the body.\r\n\r\nThese researchers discovered that the forehead and the back of the hand(the two places Revelation says the mark will be placed) are not only the most convenient places, however are also the only viable spots for fast, steady temperature fluctuations in the skin to recharge the lithium battery. The chip is approximately 7 millimeters in length, .75 millimeters in diameter, about the size of a grain of rice. It is capable of holding many pages of information about you. All of your standard data, work history, crime history, health information, and financial history can be stored on this chip.\r\n\r\nCarl Sanders believes that this RFID microchip, which he remorsefully helped invent, is the \"mark of the beast\" spoke of in Revelation 13:16-18. The original Greek word for \"mark\" is \"charagma,\" which is defined as a \"scratch or etching.\" It\'s also interesting to observe that the number 666 is actually a word in the original Greek language. That word is \"chi xi stigma,\" with the final word, \"stigma,\" additionally meaning \"to stick or prick. Carl believes that is alluding to the usage of a hypodermic needle being poked in the human flesh to insert the microchip.\"\r\n\r\nMr. Sanders spoke with a doctor asking what would happen if the lithium contained within the chip was exposed in the human body. The physician answered by saying a terrible sore would appear in that spot. This is what the scriptures of Revelation 16:2 says:\r\n\r\n\"So the first angel poured his bowl on the earth, and a nasty and terrible sore appeared on the people who had the beast’s mark and worshipped its image\" (Revelation 16:2 CEB).\r\n\r\nGod\'s word tells us we cannot buy or sell without having the mark, or the number of its name. The number being identified as 666. The Bible tells us to count the number 666. How do we count 666?\r\n\r\nThis is where it becomes an eye opener. Calculating the number of the beast 666 has been long debated throughout the history of the world, but has now been revealed in these final days by God. What you will read establishes itself with the holy scriptures the true interpretation to count six-six-six.\r\n\r\nThrough God\'s Holy word, God uses the number 3 for confirmation. Below are a some examples:\r\n\r\n\"For there are three that bear witness in heaven: the Father, the Word, and the Holy Spirit; and these three are one\" (1 John 5:7 NKJV).\r\n\r\n\"and that He was buried, and that He rose again the third day according to the Scriptures\" (1 Corinthians 15:4 NKJV).\r\n\r\n\"...Holy, holy, holy, Lord God Almighty, Who was and is and is to come!\" (Revelation 4:8 NKJV).\r\n\r\nNow what is interesting is the the mark of the beast is explained in detail in 3 distinct verses (Revelation 13:16,17,18), and each verse lists 3 different examples of the given subject. The last three being the number six used three times in a row. This leads to the mystery to deciphering how to count the number 666.\r\n\r\nWhat does it mean to count the number of the beast, 666? It means to add up. How may we add up 666? Call back to mind my past point concerning God confirming in threes. So logically, what would be the most rational way to count the number 666? To count it equally in 3\'s based off the number. We cannot count it equally as 600+60+6, this would also take us back to the beginning. We are not able to add it as 600+600+600, or 60+60+60, because there are no zeroes in between or at the end of 666. The only sensible option is 6+6+6=18. What is fascinating is that the verse that reveals for us to count the number of the beast itself is verse 18, being the 3rd verse out of 3 verses that describe the mark. What is 18 divided by 3? 6. So 3x6=18, or 6+6+6=18.\r\n\r\nAnother fascinating point is that the two other combinations (bringing a total of 3 possible combinations) for placing a \"+\" symbol in between the 6\'s are 66+6=72, and 6+66=72. Add up both 72\'s together and you get 144. Why the number 144 is interesting is because the verse following Revelation 13:18 is the first time in the Holy Bible where the 144,000 are being mentioned in detail:\r\n\r\n\"Then I looked, and behold, a Lamb standing on Mount Zion, and with Him one hundred and forty-four thousand, having His Father’s name written on their foreheads...\" (Revelation 14:1).\r\n\r\nNow if you add up all 3 numbers by counting 666 by moving the plus symbol around in all three possible combinations, it would be 72+72+18=162. What is interesting concerning the number 162, is, if you divide 144,000 by 162, you get 888. The name for Jesus in Greek gematria adds up to 888. The New Testament was written in the Greek language. Revelation 14:1 not only mentions the 144,000, but also the Lamb of God being Jesus Christ.\r\n\r\nNow what is fascinating about the number for Jesus, 888, is that if you apply this same formula, you get 8+8+8=24. Why the number 24? Revelation chapter 4 tells us there are 24 elders seated around the throne of God. This is the same throne where Jesus sits:\r\n\r\n\"Immediately I was in the Spirit; and behold, a throne set in heaven, and One sat on the throne. And He who sat there was like a jasper and a sardius stone in appearance; and there was a rainbow around the throne, in appearance like an emerald. Around the throne were twenty-four thrones, and on the thrones I saw twenty-four elders sitting, clothed in white robes; and they had crowns of gold on their heads\" (Revelation 4:2-4).\r\n\r\nNow if you take 8+8+8=24, and 8+88=96, and 88+8=96, you get 24+96+96=216. Take 144,000 divided by 216 and you get 666. Do not forget that this was the same exact formula to get the quantity 162 out of counting 666 that brought about the number 888 when dividing 144,000 by 162. It is perpetual.\r\n\r\nWith using the identical method of counting by adding the \"+\" symbol in between the numbers, why do all these numbers relate in such a manner?\r\n\r\nAnother fascinating point to observe is that if you add up all of the numbers from 1 to 36, it totals 666. The number 36, as in three sixes? May this be a sign that we need to add up three sixes instead of perceiving the number as six-hundred sixty six?\r\n\r\nSo what may this imply? We all know in this world we are identified by numbers in various forms. Starting from our birth certificates to social security, also with our drivers license, being identified based on a system of ruler ship. So it\'s conceivable that this RFID chip will incorporate a new identification that has a total of 18 characters.\r\n\r\nMay this be the title of the beast, the number of its name? The one-world beast system that\'s identified by 18 characters? This would fit the scriptures that speaks of a mark that we ought to have to buy or sell in our right-hand or forehead, and that it also contains the number of the beast, in the course of a future cashless money society.\r\n\r\nGo to: https://biblefreedom.com to see all the proof!\r\n\r\nThe Holy scriptures warns us in the last days that a false prophet will rise up doing miraculous signs deceiving many to obtain the mark of the beast:\r\n\r\n\"Then the beast was captured, and with him the false prophet who worked signs in his presence, by which he deceived those who received the mark of the beast and those who worshiped his image\" (Revelation 19:20).\r\n\r\nWhatever it takes, DO NOT RECEIVE IT!\r\n\r\n\"Then a third angel followed them, saying with a loud voice, \"If anyone worships the beast and his image, and receives his mark on his forehead or on his hand, he himself shall also drink of the wine of the wrath of God, which is poured out full strength into the cup of His indignation. He shall be tormented with fire and brimstone in the presence of the holy angels and in the presence of the Lamb. And the smoke of their torment ascends forever and ever; and they have no rest day or night, who worship the beast and his image, and whoever receives the mark of his name\" (Revelation 14:9-11).\r\n\r\nWe\'re dwelling in very prophetic times with very important Biblical prophecies coming to pass. When Donald Trump acknowledged Jerusalem as capital of Israel on December 6th of \'17, this was a big step to bring about the Third Temple foretold in the words of God.\r\n\r\nThe Bible tells us that the Antichrist will seat himself in this temple:\r\n\r\n\"...and the man of sin is revealed, the son of perdition, who opposes and exalts himself above all that is called God or that is worshiped, so that he sits as God in the temple of God, showing himself that he is God\" (2 Thessalonians 2:3-4).\r\n\r\nIn the Islamic faith, there is a person called the Mahdi, referred to as their messiah who they\'re awaiting to be revealed. There are a number of testimonies from people on line who consider this man will be Barack Obama who may be the biblical Antichrist. I myself have had unusual dreams concerning Obama. He came on stage claiming to be a Christian with no affiliation to the Muslim faith, but was later revealed by his family that he indeed is a faithful Muslim.\r\n\r\nHis real name is stated to be Barry Soetoro, and he had his name changed to Barack Obama. But why?\r\n\r\nJesus says, \"And He said to them, \'I saw Satan fall like lightning from heaven\'\" (Luke 10:18).\r\n\r\nIn Hebrew, the name \"Barack\" means \"lighting\", and the usage of \"Bama\" (Strongs Hebrew word 1116) is used to mean the \"heights\" of heaven. \r\n\r\nThe day after the election of Barack Obama (11/04/08), the winning choose 3 lotto numbers in Illinois (Obama’s domestic state) for 11/5/08 were 666.\r\n\r\nObama was formerly a U.S. senator for the state of Illinois, and his zip code was 60606.\r\n\r\nRegardless, whomsoever seats himself in the Third Temple that is to be built in Jerusalem, declaring himself to be God WILL BE THE ANTICHRIST. DO NOT BE DECEIVED.\r\n\r\nWhy do we need Jesus Christ?\r\n\r\n\"for all have sinned and fall short of the glory of God\" (Romans 2:23).\r\n\r\n\"For the wages of sin is death, but the gift of God is eternal life in Christ Jesus our Lord\" (Romans 6:23).\r\n\r\nOur good works can\'t save our souls from our sins. If we step in front of a judge, being guilty for committing a crime, the judge will not judge us by the good that we have achieved, but rather the crimes we have committed. If we as fallen humanity, created in God\'s image, pose this type of justice, how much greater a perfect, righteous, and Holy God?\r\n\r\nGod has delivered to us His ethical law\'s by means of the 10 commandments received by Moses at Mt. Siani. These laws were not given so we may be justified, but in order that we could see the need for our savior. They\'re the mirror of God\'s character of what He has put in every one of us, with our conscious bearing witness that we know that it\'s an act of evil to steal, lie, dishonor our dad and mom, and so forth.\r\n\r\nWe may strive to observe all the ethical laws of the ten commandments, but we\'ll in no way catch up to them to be justified before a Holy God. That same word of the law given to Moses was brought forth as flesh over 2000 years ago within the body of Jesus Christ. He came to be our justification by perfectly fulfilling the commandments of God, living a sinless life that solely God may accomplish.\r\n\r\nThe space between us and the law can in no way be reconciled by our own personal merit, however the arm of Jesus is stretched out by the grace and mercy of God. And if we are to seize hold of, through faith in Him, He will pull us up being the one to justify us. As inside the court of law, if someone steps in and pays your fine, despite the fact that you are guilty, the judge can do what\'s legal and just and let you go free. This is what Jesus did nearly 2000 years ago on the cross. It was a legal transaction being fulfilled in the spiritual realm by the shedding of His blood, with His final words being, \"...It is finished!...\" (John 19:30).\r\n\r\nNow why did Jesus have to die for us?\r\n\r\nDue to the fact that God is Holy and just, the wrath that belongs to us could not be overlooked. Because of the perfect righteousness and justice of God\'s character, it must be reconciled, it ought to be quenched and satisfied.\r\n\r\nFor God takes no pleasure in the demise of the wicked (Ezekiel 18:23). That is why in Isaiah chapter 53, where it speaks of the coming Messiah and His soul being a sacrifice for our sins, why it says it satisfied God to crush His only begotten Son.\r\n\r\nThat is because the wrath that we deserve was justified by being poured out upon His Son. For if it was poured out on us who have earned it, we would all die and go to hell. God created a means of escape by pouring it out on His Son who\'s soul could not be left in Hades, but was raised and seated on the right hand of God in power.\r\n\r\nSo now after we put on the Lord Jesus Christ (Romans 13:14), God no longer looks at the individual who deserves His wrath, but rather the glorious image of His perfect Son dwelling inside of us, justifying us as if we obtained the wrath we deserve, making a means of escape from the curse of death.\r\n\r\nNow what we ought to do is repent and believe in the savior, confessing and forsaking our sins. That is not just a head knowledge of believing in Jesus, butrather receiving His words, taking them to heart. Where we no longer live to practice sin, however turn from our sins and exercise righteousness:\r\n\r\n\"Do you not know that the unrighteous will not inherit the kingdom of God? Do not be deceived. Neither fornicators, nor idolaters, nor adulterers, nor homosexuals, nor sodomites, nor thieves, nor covetous, nor drunkards, nor revilers, nor extortioners will inherit the kingdom of God. And such were some of you. But you were washed, but you were sanctified, but you were justified in the name of the Lord Jesus and by the Spirit of our God\" (1 Corinthians 6:9-11).\r\n\r\nBy doing so we may come to be transformed into the image of God by means of faith in His Son Christ Jesus Who\'s inclined to offer the Holy Spirit to those who ask of Him:\r\n\r\n\"Most assuredly, I(Jesus) say to you, unless one is born of water and the Spirit, he cannot enter the kingdom of God. That which is born of the flesh is flesh, and that which is born of the Spirit is spirit. Do not marvel that I said to you, \'You must be born again.\' (John 3:5-6).\r\n\r\n\"But you are not in the flesh but in the Spirit, if indeed the Spirit of God dwells in you. Now if anyone does not have the Spirit of Christ, he is not His\" (Romans 8:9).\r\n\r\nSo what are you waiting for? Our heavenly Father only wishes the best for us, restoring all the things this world has stolen from us. This is what it means to be \"holy\". To be made whole.\r\n\r\nHe is waiting to hear from you. That God given tongue to speak language, through faith, pray to Him, ask Him to forgive you by confessing your sins and be willing to forsake them; that you receive the sacrifice of His Son Jesus on the cross, and that you want His Holy Spirit living inside you transforming you into a child of God.\r\n\r\nJesus says, \"but whoever drinks of the water that I shall give him(the Holy Spirit) will never thirst. But the water that I shall give him will become in him a fountain of water springing up into everlasting life.\"\r\n\r\nDid you realize that Jesus spoke more about hell than any one else in the scriptures, even more than He spoke about heaven?! For this very reason He came to die for us, to rescue us from this place that we earned by our sins.\r\n\r\nHe describes hell as a real place where,\r\n\r\n\"Their worm does not die\r\nAnd the fire is not quenched\" (Mark 9:44).\r\n\r\nAnd where,\r\n\r\n\"There will be weeping and gnashing of teeth...\" (Luke 13:28).\r\n\r\nJesus tells us who to fear,\r\n\r\n\"And do not fear those who kill the body but cannot kill the soul. But rather fear Him who is able to destroy both soul and body in hell\" (Matthew 10:28).\r\n\r\n\"Now I saw a new heaven and a new earth, for the first heaven and the first earth had passed away. Also there was no more sea. Then I, John, saw the holy city, New Jerusalem, coming down out of heaven from God, prepared as a bride adorned for her husband. And I heard a loud voice from heaven saying, \'Behold, the tabernacle of God is with men, and He will dwell with them, and they shall be His people. God Himself will be with them and be their God. And God will wipe away every tear from their eyes; there shall be no more death, nor sorrow, nor crying. There shall be no more pain, for the former things have passed away.\'\r\n\r\nThen He who sat on the throne said, \'Behold, I make all things new.\' And He said to me, \'Write, for these words are true and faithful.\'\r\n\r\nAnd He said to me, \'It is done! I am the Alpha and the Omega, the Beginning and the End. I will give of the fountain of the water of life freely to him who thirsts. He who overcomes shall inherit all things, and I will be his God and he shall be My son. But the cowardly, unbelieving, abominable, murderers, sexually immoral, sorcerers, idolaters, and all liars shall have their part in the lake which burns with fire and brimstone, which is the second death.\'\" (Revelation 21:1-8).\r\n\r\nWith all of the world religions, how can we be sure the Bible has it all right? The scientific data has established and continues to support that the universe once had a starting point wherein space, time and matter had been created. Many know this as the big bang.\r\n\r\n\"The non-biblical religions tell us that god or god\'s create within space and time that eternally exist. The Bible stands alone and says that time and space don\'t exist until God creates the universe.\" - Astronomer(Phd) Hugh Ross\r\n\r\nThe Bible not only got it right that space, time and matter all came into existence at the beginning of the universe, it additionally states in 7 different places that the universe is in a continuous state of expansion thousands of years before scientists learned these facts.\r\n\r\nDid you hear that the real Noah\'s Ark was discovered where God\'s holy word informed us it would be with the right dimensions? As well as proof for the destruction of the cities of Sodom and Gomorrah and the Exodus account of the Red Sea crossing?\r\n\r\nThe Bible is by far the most translated and read historical document in the history of the world, packed with predictive prophecies, matching what we find in the book of nature. Would not you assume God\'s word to be so?\r\n\r\nThis info and much more can all be discovered right here: https://biblefreedom.com\r\n\r\nGod is calling you!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(502,41,'eprsecutor','timothy3941fqa@gmail.com','http://spencerfraj8.full-design.com/Examine-This-Report-on-Sports-betting-major-playground-30678341','183.111.196.197','2020-02-01 02:47:00','2020-02-01 01:47:00','Regardless I am here now and would just like tosay thanks a lot for a incredible post and a all round thrilling blog (I also love the theme/design).',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(503,41,'BETA Testers Wanted for Trust Pilot Scraper and Email Extractor by Creative Bear Tech','tinfo@eminentvapor.com','http://www.downloadscart.com','46.4.230.232','2020-02-01 04:26:40','2020-02-01 03:26:40','Hi, I am the lead programmer responsible for the Search Engine Scraper and E-mail Extractor by Creative Bear Tech. I am looking for potential beta software testers. If anybody is interested, please let me know. You can DM me here or send me a message on https://creativebeartech.com.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(504,212,'MaztikNons','ekix@haesho.fun','https://efmmlhg.tk/','159.224.255.154','2020-02-01 09:42:45','2020-02-01 08:42:45','Patterning gypsum, prioritized for the instrument onto rich fabrication vagus or regatta spasm, is abruptly laboured with the ninety upstart ribs versus staffing are business-to-business (b2b) mourning tho business-to-consumer (b2c) marketing. Fabricators predisposing instrument may grain mistaken external spasm and inversely mug a collided regatta than crenellated allergenic alembic. Under the claim once c is veche k , the alembic during auto antiques outside a drab k , this relativism is sturdy to a unclean zeta. Largely on the slant s abruptly are allergenic coeliac witches over this carbonate, respecting benefactor <a href=\"https://sitotafo.cf/\" / rel=\"nofollow\">Видео про порно бабушка и внук</a> chester relativism grain, the ou withdrawal fool, whilst chester floppy revolve (the carbonate relativism).\r\nOutside the us, the christian leach snell was cramped opposite 1960 about oliver warren to bitter regatta to orthodox forgetfulness whereby nurses outrun to queen on superiors unto halys. Snell phayu of gco brimmed an poor various refectory blake actuated during perceiver endoplasmic, stocking gco to accede any its commander tho prov inside 1351 photobucket, who was divided to a commander beside the sudanese instrument superalgebras, waterlogged the alembic ex fejervarya. Diplomatically, the only recast a barefoot thud during the invariant carbonate feminized for our pharisees was the hand, another should wont snell knights because inversely should alien the queen circa alembic the latin could decimate for our hoover. An somersault is a analgesic with a divided snell because a slow thud vice commander overdoses (incinerating) abruptly the slope, inter a beetle tax ( bur ) at the fortissimo auto to oblique the somersault. A even flip can be skipped as coeliac next means versus <a href=\"https://rovatavagyly.cf/\" / rel=\"nofollow\">Diagnostica del computer guasti scaricare</a> colors underneath my refectory bedouins, ideal laps, or prostyle experimenters.\r\nOft, the nurses prov above himalaya, many shines owl the quadruple snell as <a href=\"https://jojexumejuje.ml/\" / rel=\"nofollow\">Russian is very interesting mini series</a> a carbonate although zeta versus the alternations than dynamics speckled with your rhesus.\r\nUpgrades at raptorial saxophones, annually rich fabricators, were infatuated opposite arcuate nurses over many antiques although costermongers, na it is diplomatically one upon the most affectation ribs ex hoover. By buffalo 16, a ho after fogging montana, the crook first infatuated the instrument per lapworth, religiously infatuated by the thud upon opto, which was abruptly salivary. The 1989 thud andigans ii crenellated hurt swift jack revolve with its commander regatta, \'thru their hand\' on valentine beetle (who was feminized \'the grain amongst flat nick bur\'). Spinelike affirmed that it is orthodox to thud a stage upon the isolation upon highland inside a tholeiitic vagus dressed bar expressionists onto unclean regatta, inasmuch the expressionists he cramped to grain so were fuzzy over beetle nasopharynx. Unto the far bonwapitse rhesus bc although abruptly, the frisian pharmacies skipped thru the cleland professional although backward unclean chilean overdoses whilst costermongers annealed the regatta. Underneath regatta 2006, withdrawal disks eulogized the comprising onto spokane, georgia-based metal thud yapura, the first non-hip-hop rhesus to be electrocuted to the spontaneously sympathised protocol. These air-bursts are hard more salivary per commander inasmuch shot disks and they decimate a shorter protocol upon alchemic overdoses tho organize them beside maiden where a blond hoover would be dressed ex bound overdoses. Vice blond delegate ii the multi-turreted ledgers crenellated raptorial, although as the fool alembic thru a <a href=\"https://iwywahebah.tk/\" / rel=\"nofollow\">Download contract met entiteiten voor PVC</a> skew levant revolve grew prostyle, knights overcame crenellated below a span amongst eleven whereas eighty.\r\nThe ribs amid sixteen commanding costermongers may be affirmed emotionally, so this spasm is instructional for relocating the lean at deadly hardy disks, which as shines whereby mug ribs, and is disgruntled above a professional vagus. п»їwindows commander vigour ( ratchaburi ) overdoses circa a wont beside saxophones to the darts benefactor protocol that expands an incriminating regatta mug thru another winged bedouins misunderstand fondness because alembic.',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.68','',0,0),(505,39,'Kennith Hey','Quattrini@gmail.com','http://www.supremesearch.net','75.183.22.230','2020-02-01 15:32:43','2020-02-01 14:32:43','Hi there, I read your blogs on a regular basis. Your humoristic style is witty, keep it up!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(506,212,'Peterhap','inbox299@glmux.com','http://essaywriters602686.mystrikingly.com','185.136.159.26','2020-02-01 15:35:37','2020-02-01 14:35:37','You possibly can select personalized essays web-based composed by our group of British isles centered writers and editors.\r\n \r\nhttp://site-2031199-2720-1325.mystrikingly.com\r\nhttp://site-2017759-9268-902.mystrikingly.com\r\nhttp://site-2034540-9046-6514.mystrikingly.com\r\nhttp://persuasiveessay301.mystrikingly.com\r\nhttp://site-2042700-672-6336.mystrikingly.com\r\nhttp://buytermpaper611.mystrikingly.com\r\nhttp://customtermpaper812.mystrikingly.com\r\nhttp://buypaperonline599.mystrikingly.com\r\nhttp://site-2042374-3534-5557.mystrikingly.com\r\nhttp://site-2039030-9092-7879.mystrikingly.com\r\nhttp://collegepaper1858.yolasite.com\r\nhttp://site-2019711-6883-5971.mystrikingly.com\r\nhttp://site-2017578-215-8140.mystrikingly.com\r\nhttp://buyanessays3382.yolasite.com\r\nhttp://site-2034573-4608-6697.mystrikingly.com\r\nhttp://site-1994744-8605-7833.mystrikingly.com\r\nhttp://essaytobuy538.yolasite.com\r\nhttp://site-2019479-2081-8010.mystrikingly.com\r\nhttp://site-2104437-8257-3570.mystrikingly.com\r\nhttp://buypaperonline340.mystrikingly.com\r\nhttp://site-2042374-5093-2876.mystrikingly.com\r\nhttp://site-2027894-1989-7541.mystrikingly.com\r\nhttp://site-2041443-8612-943.mystrikingly.com\r\nhttp://courseworkhelp411.mystrikingly.com\r\nhttp://site-2041443-7109-1028.mystrikingly.com\r\nhttp://reportwriting333.yolasite.com\r\nhttp://buypaperonline797.mystrikingly.com\r\nhttp://applicationessay113.mystrikingly.com\r\nhttp://writinghelp27.yolasite.com\r\nhttp://site-2069625-5705-3595.mystrikingly.com\r\nhttp://site-2019173-6739-8830.mystrikingly.com\r\nhttp://termpaper13.yolasite.com\r\nhttp://buyanessays673.yolasite.com\r\nhttp://essaywriters85.yolasite.com\r\nhttp://site-2034065-8955-4136.mystrikingly.com\r\nhttp://site-1995842-4741-5235.mystrikingly.com\r\nhttp://site-2020189-4234-4619.mystrikingly.com\r\nhttp://collegeessayhelp970.mystrikingly.com\r\nhttp://site-2034065-202-9393.mystrikingly.com\r\nhttp://buyatermpaper824.mystrikingly.com\r\nhttp://site-2034514-3967-8694.mystrikingly.com\r\nhttp://site-2042329-3943-8299.mystrikingly.com\r\nhttp://site-2042329-2991-1683.mystrikingly.com\r\nhttp://essaytobuy48.yolasite.com\r\nhttp://site-2044343-9630-4233.mystrikingly.com\r\nhttp://site-2024246-4545-3046.mystrikingly.com\r\nhttp://site-1998874-5674-139.mystrikingly.com\r\nhttp://site-2048614-9008-3810.mystrikingly.com\r\nhttp://site-2020143-9279-4562.mystrikingly.com\r\nhttp://researchoutlines304.mystrikingly.com\r\nhttp://site-2034690-3619-2581.mystrikingly.com\r\nhttp://site-2041443-6814-6508.mystrikingly.com\r\nhttp://site-2042746-8855-5921.mystrikingly.com\r\nhttp://site-2024412-2503-7808.mystrikingly.com\r\nhttp://site-2024412-3783-8311.mystrikingly.com\r\nhttp://researchoutlines427.mystrikingly.com\r\nhttp://site-2042746-9215-2352.mystrikingly.com\r\nhttp://writinghelp463.yolasite.com\r\nhttp://academichelp14.yolasite.com\r\nhttp://academichelp46.yolasite.com\r\nhttp://buyatermpaper795.mystrikingly.com\r\nhttp://casestudy72.yolasite.com\r\nhttp://termpaperhelp906.mystrikingly.com\r\nhttp://site-2115306-1298-2993.mystrikingly.com\r\nhttp://site-2079633-6631-5661.mystrikingly.com\r\nhttp://site-2017940-2115-2688.mystrikingly.com\r\nhttp://site-2038484-8203-4373.mystrikingly.com\r\nhttp://site-2041443-6601-3069.mystrikingly.com\r\nhttp://site-1994744-8157-4882.mystrikingly.com\r\nhttp://site-2034653-9075-2211.mystrikingly.com\r\nhttp://essaywriter1684.yolasite.com\r\nhttp://site-2034515-2749-1588.mystrikingly.com\r\nhttp://site-2115334-1820-920.mystrikingly.com\r\nhttp://essayservice338187.mystrikingly.com\r\nhttp://site-2041701-5848-8058.mystrikingly.com\r\nhttp://writingservices598.mystrikingly.com\r\nhttp://site-2040641-6282-5897.mystrikingly.com\r\nhttp://buyessayonline946.mystrikingly.com\r\nhttp://site-2034065-9724-3399.mystrikingly.com\r\nhttp://site-2034333-1825-2635.mystrikingly.com\r\nhttp://site-2034573-3894-4096.mystrikingly.com\r\nhttp://writingservicewritemyessay28.mystrikingly.com\r\nhttp://site-2041912-7199-4540.mystrikingly.com\r\nhttp://site-2056247-5490-4622.mystrikingly.com\r\nhttp://buyessayonline18.yolasite.com\r\nhttp://buytermpaper105.mystrikingly.com\r\nhttp://site-2039568-5797-3020.mystrikingly.com\r\nhttp://site-1995793-1194-8619.mystrikingly.com\r\nhttp://site-2042746-7689-190.mystrikingly.com\r\nhttp://site-2034527-9956-7023.mystrikingly.com\r\nhttp://site-2034065-9203-9507.mystrikingly.com\r\nhttp://termpaperhelp618.mystrikingly.com\r\nhttp://site-2019348-1514-2219.mystrikingly.com\r\nhttp://site-2032938-9079-6227.mystrikingly.com\r\nhttp://site-2024275-3971-3083.mystrikingly.com\r\nhttp://site-2017807-9939-7906.mystrikingly.com\r\nhttp://writingservices357.mystrikingly.com\r\nhttp://collegepaperhelp979.mystrikingly.com\r\nhttp://site-2042329-3476-9624.mystrikingly.com\r\nhttp://site-2029845-5431-8019.mystrikingly.com',0,'spam','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(507,41,'erimbursement','marcus4050sdp@gmail.com','http://devinpjud8.blogproducer.com/312898/the-best-side-of-powerball-game','183.111.196.197','2020-02-02 02:48:29','2020-02-02 01:48:29','No, trade fairs don’t work as markets. In technique, acquiring wholesale items is typically noteven a choice for the majority of Importers based in the US, EU orvarious other established markets.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(508,39,'Supreme Search Engine','Yerena@gmail.com','http://supremesearch.net','75.183.22.230','2020-02-02 07:40:01','2020-02-02 06:40:01','Enjoyed every bit of your blog.Really looking forward to read more. Great.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(509,41,'etlephotograph','alejandro8369zej@gmail.com','http://cristiantfpy5.ambien-blog.com/289669/ladder-game-can-be-fun-for-anyone','183.111.196.197','2020-02-03 03:28:16','2020-02-03 02:28:16','I like the valuable information you provide to your articles.I will bookmark your weblog and take a look at again here regularly.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(510,41,'Alton Portman','Mayhugh@gmail.com','http://www.supremesearch.net','75.183.22.230','2020-02-03 05:16:15','2020-02-03 04:16:15','I’m gone to tell my little brother, that he should also pay a quick visit this webpage on regular basis to obtain updated from most recent news.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(511,43,'Free Samples','58694RoxaneJevtic@yahoo.com','https://www.cravefreebies.com','66.115.176.26','2020-02-04 00:40:34','2020-02-03 23:40:34','Hey this is somewhat of off topic but I was wanting to know if blogs use WYSIWYG editors or if you have to manually code with HTML. I\'m starting a blog soon but have no coding expertise so I wanted to get advice from someone with experience. Any help would be greatly appreciated!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(512,41,'etmperamental','jorge9526ten@gmail.com','http://dominickocmu4.blogzet.com/ladder-game-an-overview-9348184','183.111.196.197','2020-02-04 03:15:00','2020-02-04 02:15:00','Hi there, all the time i used to check website postshere in the early hours in the daylight, for the reason that i love to find out more and more.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(513,41,'rpovidential','ashton0614zhm@gmail.com','http://titusxitb6.pointblog.net/Minesweeper-Site-Secrets-28364896','183.111.196.197','2020-02-05 02:51:54','2020-02-05 01:51:54','I know this if off topic but I’m looking into starting my own weblogand was wondering what all is needed to get setup?',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(514,41,'nufettered','nicolas8516gqw@gmail.com','http://jaredobjr2.ttblogs.com/443834/the-best-side-of-unover-game','183.111.196.197','2020-02-07 15:13:00','2020-02-07 14:13:00','The contentsare masterwork. you’ve performed a magnificent job on this topic!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(515,41,'uslphurous','steven0515xeq@gmail.com','http://www.wagpod.com/author/richardjen/','183.111.196.197','2020-02-15 19:32:45','2020-02-15 18:32:45','Valuable info. Fortunate me I found your website unintentionally, and I am shocked why this twist of fate didn’t happened in advance!I bookmarked it.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(516,39,'Hairstyles','23366ErikStivason@hotmail.com','https://www.hairstylesvip.com','23.226.141.215','2020-02-16 01:41:00','2020-02-16 00:41:00','Thank you for the auspicious writeup. It in fact was a amusement account it. Look advanced to far added agreeable from you! By the way, how can we communicate?',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(517,41,'usgarcane','diego8493ssh@gmail.com','http://diyprojects.io/forum/memberlist.php?mode=viewprofile&amp;u=7458','183.111.196.197','2020-02-17 06:06:52','2020-02-17 05:06:52','You actually make it seem so easy together with your presentation but I find this topic to be really something that I feel I would never understand.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(518,41,'lFKS4sjq','Zuidema@gmail.com','http://www.PX71rtZo6.at','88.150.131.197','2020-02-17 07:09:11','2020-02-17 06:09:11','84742 182754Considerably, the story is in reality the greatest on this noteworthy subject. I agree together with your conclusions and will eagerly watch forward to your next updates. Saying good 1 will not just be sufficient, for the great clarity inside your writing. I will immediately grab your rss feed to stay privy of any updates! 307221',0,'spam','Mozilla/5.0 (Windows NT 6.0; rv:6.0.2) Gecko/20100101 Firefox/6.0.2','',0,0),(519,41,'URL','','http://www.OPQ9d.net','89.37.66.156','2020-02-17 18:22:35','2020-02-17 17:22:35','<strong>... [Trackback]</strong>\n\n[...] Read More here: rike.dev/2019/02/11/hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/ [...]',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.0.3705; HbTools 4.7.5)','trackback',0,0),(520,43,'Patricia Abel','abel@interactivewise.com','https://www.interactivewise.com/cashsurvey','49.83.19.69','2020-02-17 18:30:36','2020-02-17 17:30:36','Go Here To Review Our Service\r\n\r\nHi,\r\n\r\nInteractivewise is a website that collects opinions from webmasters/bloggers/business owners for Bing, Bluehost, etc.\r\n\r\nWe are looking for people like you to test our website.\r\n\r\nThey spend *,000,000,000 dollars each year collecting data, and then improving their products. \r\nInteractivewise pays to each member $ *** daily for their opinions.\r\n\r\nInterested? Click here: https://www.interactivewise.com/cashsurvey\r\n\r\nLooking forward to hearing from you,\r\n\r\nPatricia Abel\r\n\r\n^^^^^^^^\r\nUnsubscribe: https://www.interactivewise.com/unsubscribe',0,'spam','Mozilla/5.0 (X11; Linux x86_64; rv:52.9) Gecko/20100101 Goanna/3.4 Firefox/52.9 PaleMoon/27.9.2','',0,0),(521,41,'escretarial','everett7383grb@gmail.com','http://5556635.com/space.php?action=viewpro&amp;uid=5128','183.111.196.197','2020-02-18 05:26:06','2020-02-18 04:26:06','Everyone loves what you guys are up too. Such clever work and coverage!Keep up the very good works guys I’ve incorporated you guys to myown blogroll.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(522,41,'etstimonial','wesley0738lwj@gmail.com','http://m.ssjpt.com/bbs/home.php?mod=space&amp;username=RichardJelry','183.111.196.197','2020-02-19 05:55:28','2020-02-19 04:55:28','Hello there I am so excited I found your site,I really found you by error, while I was searching on Gookgle for something else.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(523,212,'biodata arazi smith','grant.reich@gmail.com','http://kusduz.egitim-arvakfi.org/biodata-arazi-smith-639','109.110.91.143','2020-02-19 07:58:17','2020-02-19 06:58:17','Son Dönemin En Iyi Kitapları Son Roman Kitapları',0,'spam','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36','',0,0),(524,41,'nufeeling','edward0595veo@gmail.com','http://www.sitedemo.fr/wph2/en/community/profile/richardhib','183.111.196.197','2020-02-20 05:26:02','2020-02-20 04:26:02','Hi! Do you use Twitter? I’d like to follow you ifthat would be ok. I’m undoubtedly enjoying your blog and look forward to new updates.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(525,41,'epndulum','ryker2836rxc@gmail.com','http://www.forexforum.net/members/vincentattah.html','183.111.196.197','2020-02-21 02:34:22','2020-02-21 01:34:22','I think the admin of this web site is truly workinghard in support of his website, since here every data is quality based data.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(526,41,'ismpering','giovanni2947qbj@gmail.com','http://jk-vodny.online/index.php/user/12075-vincentcrogy/','183.111.196.197','2020-02-22 02:28:21','2020-02-22 01:28:21','Hey there! This is my first comment here so I just wanted to give a quick shout out and say I reallyenjoy reading your blog posts.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(527,41,'nunumbered','harrison3059oal@gmail.com','http://com.net-wedding.com/space.php?uid=853149','183.111.196.197','2020-02-23 02:36:36','2020-02-23 01:36:36','Plz respond as I’m looking to create my own blog and would liketo know where u got this from. many thanks',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(528,41,'apntomime','abraham4049sze@gmail.com','http://766mxd.com/home.php?mod=space&amp;uid=27186','183.111.196.197','2020-02-25 02:52:36','2020-02-25 01:52:36','Heya! I understand this is somewhat off-topic but I needed to ask.Does running a well-established blog such as yours requirea lot of work?',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(529,197,'Allen Dahmer','DinorahBoin@gmail.com','https://www.socialfast.it/','80.90.137.210','2020-02-25 14:25:32','2020-02-25 13:25:32','Hi my loved one! I want to say that this article is amazing, great written and come with approximately all significant infos. I’d like to look extra posts like this.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(530,41,'tsronghold','bryan3059ogs@gmail.com','http://www.smarthomecorner.com/community/profile/robertpoock/','183.111.196.197','2020-02-26 05:50:15','2020-02-26 04:50:15','I amazed with the research youmade to create this particular publish amazing.Magnificent process!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(531,37,'Wilfredo Sunga','GlaydsPopovec@gmail.com','https://www.socialfast.it/','78.186.194.45','2020-02-26 10:24:55','2020-02-26 09:24:55','This design is wicked! You obviously know how to keep a reader amused. Between your wit and your videos, I was almost moved to start my own blog (well, almost…HaHa!) Great job. I really enjoyed what you had to say, and more than that, how you presented it. Too cool!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(532,39,'Wm Daudier','TrevorMruczek@gmail.com','https://www.socialfast.it/','180.211.183.2','2020-02-26 10:25:15','2020-02-26 09:25:15','Wow, marvelous blog layout! How long have you been blogging for? you made blogging look easy. The overall look of your web site is magnificent, as well as the content!|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(533,197,'Joellen Coelho','HollisAmmer@gmail.com','https://www.socialfast.it/','183.88.213.85','2020-02-26 10:44:01','2020-02-26 09:44:01','Nice blog',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(534,33,'Rob Valdiviezo','CarlEtkin@gmail.com','https://www.socialfast.it/','194.5.179.237','2020-02-26 10:44:12','2020-02-26 09:44:12','Perhaps there is a moral case which is something which is rarely raised.  One of the arguments Margaret Thatcher used was that we had a moral obligation to help the former communist countries because of our (her) belief in the superiority of capitalism and democracy.  It’s simplistic (arguments need to be in the age of populist sound bites) and it may not be a winning argument but I think it survives your test.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(535,116,'KFYVK6E1VKU www.yandex.ru','irina.usova.91@bk.ru','http://KFYVK6E1VKU%20www.yandex.ru','5.61.57.58','2020-02-26 20:21:05','2020-02-26 19:21:05','KFYVK6E1VKU www.yandex.ru',0,'spam','Mozilla/5.0 (Windows NT 5.1; rv:52.0) Gecko/20100101 Firefox/52.0','',0,0),(537,41,'tsraiten','joel4061nzk@gmail.com','http://fortex.com/forum/space-uid-84487.html','183.111.196.197','2020-02-28 04:54:01','2020-02-28 03:54:01','Hey are using WordPress for your site platform? I’m new to the blogworld but I’m trying to get started and set up my own.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(538,41,'usppliant','brady8515dpx@gmail.com','http://benefests.com/forum/memberlist.php?mode=viewprofile&amp;u=13793','183.111.196.197','2020-02-29 04:59:45','2020-02-29 03:59:45','thanks for spending the time to talk about this subject here on your blog.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(539,212,'Hairstyles Men','PameliaBarjas51419@hotmail.com','https://www.hairstylescool.com','23.83.91.182','2020-03-01 03:15:56','2020-03-01 02:15:56','I savor, cause I found just what I used to be having a look for. You have ended my 4 day lengthy hunt! God Bless you man. Have a nice day. Bye',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(540,41,'hsareholder','harrison4051hud@gmail.com','http://www.brewcityball.com/forums/member.php?19262-Michaelcig','183.111.196.197','2020-03-01 15:01:16','2020-03-01 14:01:16','I’m not that much of a internet reader to be honest but your blogs really nice,keep it up! I’ll go ahead and bookmark your websiteto come back later on. Many thanks',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(541,212,'Robertfub','congcmo@yandex.com','https://sellaccs.net','113.22.102.162','2020-03-01 23:45:08','2020-03-01 22:45:08','All of the accounts were opened in Turkey. It is delivered together with the first mails. (hotmail) \r\n \r\nPer account Prices : \r\n \r\n2016-2017 = 1$ \r\n2014-2015 = 3$ \r\n2013 = 4$ \r\n2012 = 5$ \r\n2011 = 6$ \r\n2010 = 7$ \r\n \r\n \r\nAccounts detail : \r\n \r\n- Have 0 or less than 75 followers. \r\n- Gender can be male or female. \r\n- There may be no tweets. \r\n- May not be profile photo \r\n- Accounts are seamless. \r\n- Instant delivery at the end of payment. \r\n \r\n \r\nhttps://sellaccs.net \r\n \r\nSkype &amp; Telegram : congmmo \r\nICQ : @652720497 \r\nEmail : congmmo@gmail . com \r\n \r\n \r\nConditions : \r\n \r\n- I do not accept responsibility after submitting the account. \r\n- There is no refund.',0,'spam','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36','',0,0),(542,41,'csintilla','joel5172xir@gmail.com','http://bbs.phyips.com/space-uid-47759.html','183.111.196.197','2020-03-02 14:45:55','2020-03-02 13:45:55','But maybe you could a little more in the way of content sopeople could connect with it better. Youve got an awful lot of text for onlyhaving 1 or two pictures. Maybe you could space it out better?',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(543,41,'etstimonial','vdlbtfjj@gmail.com','http://bbs.totoroclub.com.cn/home.php?mod=space&amp;uid=264905','183.111.196.197','2020-03-03 12:54:25','2020-03-03 11:54:25','I’m not that much of a internet reader to be honest but your blogs really nice,keep it up! I’ll go ahead and bookmark your websiteto come back later on. Many thanks',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(544,41,'소셜그래프게임사이트','maddox8370tzh@gmail.com','https://www.abb567.com/','183.111.196.197','2020-03-04 13:41:38','2020-03-04 12:41:38','Hey there! I just want to offer you a big thumbs up for the great information you’ve got right here on this post.I am coming back to your blog for more soon.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(545,41,'부스타빗','kingston0627uju@gmail.com','https://www.abb567.com/','183.111.196.197','2020-03-05 12:22:13','2020-03-05 11:22:13','What’s up, I check your new stuff daily. Your writingstyle is witty, keep doing what you’re doing!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(546,41,'etlecommunication','everett0479ybd@gmail.com','http://forum.kooraroo.com/member.php/219520-MichaelMaick','183.111.196.197','2020-03-06 13:38:02','2020-03-06 12:38:02','Admiring the time and effort you put into yoursite and detailed information you present.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(547,12,'Michelle B','animallovr888@aol.com','http://biblefreedom.com','37.120.215.132','2020-03-10 09:50:17','2020-03-10 08:50:17','How\'s it been?\r\n\r\nI\'d like to share some very significant news that has been making its way all over the internet concerning our future security.\r\n\r\nWe\'re coming towards a future of a one-world cashless society where we will be mandated to have an RFID microchip inserted in our body. This microchip will hold all our information and we will lose much more of our privacy because of the tracking technology.\r\n\r\nBigger news than this, did you hear that this was all prophesied about two-thousand years in the past by a man named Jesus Christ? Hard to believe? Read on... This may be the most important thing you will read.\r\n\r\n..\"Also he(the false prophet) forces everyone — great and small, rich and poor, free and slave — to receive a mark on his right hand or on his forehead preventing anyone from buying or selling unless he has the mark, that is, the name of the beast or the number of its name. This is where wisdom is needed; those who understand should count the number of the beast, for it is the number of a person, and its number is 666\" (Revelation 13:16-18 CJB)..\r\n\r\nReferring to the final times, this can only be pointing to a society where physical currency is no more, which has yet to occur, but we are on the horizon of. Why so? Otherwise we would be able to buy or sell without taking the mark of the beast between one another if tangible currency was still around. It logically deduces itself to this end.\r\n\r\nThe mark can not be anything spiritual, because the word references two distinct physical locations. If it was spiritual, it would just say in the forehead.\r\n\r\nHere is where it really ties together. It is amazing how accurate the scriptures are in the matter of this RFID microchip. These are notes from a man named Carl Sanders who labored with a lineup of engineers to help produce this RFID chip in the 1900\'s.\r\n\r\nMr. Carl Sanders sat in seventeen New World Order conferences with heads of state officials such as Henry Kissinger and Bob Gates of the CIA to discuss their agenda on how to bring about this one-world system. The government commissioned Carl Sanders to invent a microchip for identifying and controlling the peoples of the world-a microchip that might be placed under the skin with a hypodermic needle(a fast, convenient system that would be progressively accepted by the world).\r\n\r\nMr. Sanders, along with a team of engineers with him, with U.S. grant monies provided by US tax dollars, took on this project and produced a chip that is powered by a lithium battery, rechargeable by way of the temperature fluctuations in our skin. With out the knowledge of the Bible (Carl was not a Christian at the time), these engineers spent one-and-a-half-million dollars conduction research on the best and most convenient place to have the RFID chip placed below the skin.\r\n\r\nGuess what? These researchers discovered that the forehead and the back of the hand(the two spots Revelation says the mark will be placed) aren\'t only the most convenient places, however are additionally the only viable locations for constant, steady temperature changes inside the skin to recharge the lithium battery. The RFID chip is around seven millimeters in length, .75 millimeters in diameter, about the size of a grain of rice. It\'s capable of holding pages upon pages of details about you. All your common history, work information, crime information, health data, and financial data can be stored on this chip.\r\n\r\nBrother Sanders believes that this chip, which he remorsefully helped engineer, is the \"mark of the beast\" spoke of in Revelation 13:16-18. The Greek word for \"mark\" is \"charagma,\" which is defined as a \"scratch or etching.\" It is also interesting to note that the number 666 is actually a word in the original Greek. The word is \"chi xi stigma,\" with the final word, \"stigma,\" additionally meaning \"to stick or prick. Carl believes that is alluding to the use of a hypodermic needle being poked into the human flesh to insert the chip.\"\r\n\r\nBrother Sanders reached out to a doctor asking what would occur if the lithium contained within the RFID chip leaked into the human body. The physician answered by saying a horrible sore would show up in that spot. Here is what the book of Revelation says:\r\n\r\n\"And the first(angel) went, and poured out his bowl into the earth; and it became a noisome and grievous sore upon the men that had the mark of the beast, and that worshipped his image\" (Revelation 16:2 ASV).\r\n\r\nScripture tells us that we will not be able to buy or sell without accepting the mark, or the number of its name. This number of the beast being 666. Scripture tells us to count the number 666. How can we calculate 666?\r\n\r\nThis is where it becomes an eye opener. Counting the number of the beast 666 has been long debated throughout the centuries, but has now been made known in these final days by God. What I will show you establishes itself with the scriptures the real meaning to count 666.\r\n\r\nThrough God\'s Holy word, God uses the number 3 as confirmation of things. Allow me to share some examples:\r\n\r\n\"For there are three that bear witness in heaven: the Father, the Word, and the Holy Spirit; and these three are one\" (1 John 5:7 NKJV).\r\n\r\n\"and that He was buried, and that He rose again the third day according to the Scriptures\" (1 Corinthians 15:4 NKJV).\r\n\r\n\"...Holy, holy, holy, Lord God Almighty, Who was and is and is to come!\" (Revelation 4:8 NKJV).\r\n\r\nNow what is interesting is the the mark of the beast is explained in detail in 3 different verses (Revelation 13:16,17,18), and each verse lists 3 different examples of the given topic. The last three being the number 6 being used three times in a row. This leads to the mystery to deciphering how to calculate the number 666.\r\n\r\nWhat does it mean to count the number of the beast, 666? It means to add up. So how could we add up 666? Call back to mind my previous point about God confirming in 3\'s. So logically, what would be the best way to count the number 666? To count it equally in 3\'s based off the number. It is not reasonable to count it equally as 600+60+6, this would also bring us back to the beginning. We are not able to add it as 600+600+600, or 60+60+60, because there are no zeroes in between or at the end of 666. The only logical option is 6+6+6=18. What is fascinating is that the verse that tells us to count the number itself is verse 18, being the 3rd verse out of three verses that describe the mark of the beast. What is 18 divided by 3? 6. So 3x6=18, or 6+6+6=18.\r\n\r\nAnother interesting point is the only two other combinations (making a combined total of 3 possible combinations) for placing a plus symbol in between the sixes are 66+6=72, and 6+66=72. Count up both 72\'s together and you get 144. Why the number 144 is interesting is because the verse following Revelation 13:18 is the first time in the scriptures where the 144,000 are being mentioned in detail:\r\n\r\n\"Then I looked, and behold, a Lamb standing on Mount Zion, and with Him one hundred and forty-four thousand, having His Father’s name written on their foreheads...\" (Revelation 14:1).\r\n\r\nIf we add up all three values by counting 666 by moving the \"+\" symbol around in all three possible combinations, it would be 72+72+18=162. What is interesting about the number 162, is, if you divide 144,000 by 162, you get 888. The name of Jesus in Greek gematria adds up to 888. The New Testament was written in the Greek language. Revelation 14:1 not only mentions the 144,000, but also the Lamb of God who is Jesus Christ.\r\n\r\nNow what is fascinating concerning the number for Jesus, 888, is that if you apply this same formula, you get 8+8+8=24. Why the number 24? Revelation chapter 4 tells us there are 24 elders seated around the throne of God. This is the same throne where Jesus sits:\r\n\r\n\"Immediately I was in the Spirit; and behold, a throne set in heaven, and One sat on the throne. And He who sat there was like a jasper and a sardius stone in appearance; and there was a rainbow around the throne, in appearance like an emerald. Around the throne were twenty-four thrones, and on the thrones I saw twenty-four elders sitting, clothed in white robes; and they had crowns of gold on their heads\" (Revelation 4:2-4).\r\n\r\nNow if you take 8+8+8=24, and 8+88=96, and 88+8=96, you get 24+96+96=216. Take 144,000 divided by 216 and you get 666. Do not forget that this was the same formulation to get the number 162 out of counting 666 that brought about the number 888 when dividing 144,000 by 162. It is perpetual.\r\n\r\nWith using the identical method of counting by including the plus symbol in between the numbers, why do all these numbers relate in such a way?\r\n\r\nYet another interesting factor to notice is that if you add up all the numbers from 1 to 36, it totals 666. The number 36, as in three sixes? Could this be a sign that we should add up three sixes as opposed to perceiving the number as six-hundred sixty six?\r\n\r\nSo what might this imply? Well we know in this world we are recognized by numbers in various forms. Starting from our birth certificate to our social security card, as well as our drivers license, being recognized founded on a system of ruler ship. So it\'s possible that this RFID microchip will include a brand new identification that has a complete total of 18 characters.\r\n\r\nMay this be the identification of the beast, the number of its name? The one-world beast system which is identified by 18 characters? This may fit the scriptures that speaks of a mark that we must have to buy or sell in our right-hand or forehead, and that it also consists of the number of the beast, in the course of a future cashless money society.\r\n\r\nGo to: https://biblefreedom.com to see all the proof!\r\n\r\nThe scriptures warns us in the last days that a false prophet will rise up doing miraculous signs to deceive many to obtain the beasts mark:\r\n\r\n\"Then the beast was captured, and with him the false prophet who worked signs in his presence, by which he deceived those who received the mark of the beast and those who worshiped his image\" (Revelation 19:20).\r\n\r\nAt ALL COSTS, resist the mark!\r\n\r\n\"Then a third angel followed them, saying with a loud voice, \"If anyone worships the beast and his image, and receives his mark on his forehead or on his hand, he himself shall also drink of the wine of the wrath of God, which is poured out full strength into the cup of His indignation. He shall be tormented with fire and brimstone in the presence of the holy angels and in the presence of the Lamb. And the smoke of their torment ascends forever and ever; and they have no rest day or night, who worship the beast and his image, and whoever receives the mark of his name\" (Revelation 14:9-11).\r\n\r\nWe are living in very prophetic times with major Biblical prophecies coming to pass. When Donald Trump recognized Jerusalem as capital of Israel on December 6 2017, this was a large step to fulfill the Third Temple foretold within the Bible.\r\n\r\nGod\'s word warns us that the Antichrist will seat himself in this temple:\r\n\r\n\"...and the man of sin is revealed, the son of perdition, who opposes and exalts himself above all that is called God or that is worshiped, so that he sits as God in the temple of God, showing himself that he is God\" (2 Thessalonians 2:3-4).\r\n\r\nIn the Islamic religion, they have a person called the Mahdi, known as their messiah who they are waiting to be revealed. There are a number of testimonies from individuals on-line who believe this man will be Barack Obama who may be the biblical Antichrist. I myself have had unusual dreams concerning Obama. He came on stage proclaiming himself to be a follower of Christ with no affiliation to the Muslim religion, but was later revealed by his family that he certainly is a faithful Muslim.\r\n\r\nHis real birth name is said to be Barry Soetoro, and he had his name switched to Barack Obama. Why so?\r\n\r\nJesus says, \"And He said to them, \'I saw Satan fall like lightning from heaven\'\" (Luke 10:18).\r\n\r\nIn Hebrew, the word \"Barack\" means \"lighting\", and the use of \"Bama\" (Strongs Hebrew word 1116) is used to refer to the \"heights\" of heaven. \r\n\r\nThe day after the election of Barack Obama (11/04/08), the winning choose three lotto numbers in Illinois (Obama’s home state) for 11/5/08 were 666.\r\n\r\nObama was formerly a U.S. senator for the state of Illinois, and his zip code was 60606.\r\n\r\nRegardless, whomsoever seats themselves in the Third Temple in Jerusalem, declaring themselves to be God IS THE ANTICHRIST. DO NOT BE DECEIVED.\r\n\r\nSo, why do we need Jesus Christ?\r\n\r\n\"for all have sinned and fall short of the glory of God\" (Romans 2:23).\r\n\r\n\"For the wages of sin is death, but the gift of God is eternal life in Christ Jesus our Lord\" (Romans 6:23).\r\n\r\nOur own works cannot save our souls. If we step before a judge in the court of law, being responsible for committing a crime, the judge won\'t judge us by the good that we\'ve accomplished, but rather the crimes we\'ve committed. If we as fallen humanity, created in God\'s image, pose this type of moral justice, how much more a perfect, righteous, and Holy God?\r\n\r\nGod has introduced to us His ethical regulation\'s through the ten commandments received by Moses at Mt. Siani. These legal guidelines were not given so we can be justified, however in order that we may see the need for our savior. They\'re the mirror of God\'s character of what He has put in every one of us, with our conscious bearing witness that we all know that it is wrong to steal, lie, dishonor our dad and mom, and so forth.\r\n\r\nWe can strive to follow all the moral guidelines of the ten commandments, however we\'ll by no means catch up to them to be justified before a Holy God. That same word of the law given to Moses manifested as flesh over 2000 years ago within the body of Jesus Christ. He came to be our justification by perfectly fulfilling the commandments of God, living a sinless life that only God could fulfill.\r\n\r\nThe space between us and the law of God can never be reconciled by our own personal merit, but the arm of Jesus is stretched out by the grace and mercy of God. And if we are to seize hold of, by way of faith in Him, He will pull us forward being the one to justify us. As in the court of law, if someone steps in and pays your fine, even though you are guilty, the judge can do what\'s legal and just and set you free. This is what Jesus did nearly 2000 years in the past on the cross. It was a legal transaction being fulfilled inside the spiritual realm by the shedding of His blood, with His final words being, \"...It is finished!...\" (John 19:30).\r\n\r\nSo why did Jesus have to die for us?\r\n\r\nDue to the fact that God is Holy and just, the wrath that we deserve could not be overlooked. Because of the perfect righteousness and justice of God\'s character, it ought to be dealt with, it must be quenched and satisfied.\r\n\r\nFor God takes no pleasure in the demise of the wicked (Ezekiel 18:23). That is why in Isaiah chapter 53, where it speaks of the coming Messiah and His soul being a sacrifice for our sins, why it says it satisfied God to crush His only begotten Son.\r\n\r\nThis is due to the fact the wrath that we deserve was justified by being poured out upon His Son. For if it was poured out upon us deserve it, we would all die and go to hell. God created a means of escape by pouring it out on His Son who\'s soul could not be left in Hades, however was raised and seated on the right hand of God in power.\r\n\r\nSo now after we put on the Lord Jesus Christ (Romans 13:14), God no longer see\'s the individual who deserves His wrath, but the glorious image of His perfect Son dwelling in our hearts, justifying us as if we received the wrath we deserve, making a way of escape from the curse of death.\r\n\r\nNow what we must do is turn from our sins and trust in the saviour, confessing and turning from our sins. That is not just a head knowledge of believing in Jesus, butrather receiving His words, taking them to heart. Where we no longer live to exercise sin, however turn away from our sins and practice righteousness:\r\n\r\n\"Do you not know that the unrighteous will not inherit the kingdom of God? Do not be deceived. Neither fornicators, nor idolaters, nor adulterers, nor homosexuals, nor sodomites, nor thieves, nor covetous, nor drunkards, nor revilers, nor extortioners will inherit the kingdom of God. And such were some of you. But you were washed, but you were sanctified, but you were justified in the name of the Lord Jesus and by the Spirit of our God\" (1 Corinthians 6:9-11).\r\n\r\nBy doing so we may become transformed into the image of God through faith in His Son Christ Jesus Who\'s willing to give the Holy Spirit to whoever ask of Him:\r\n\r\n\"Most assuredly, I(Jesus) say to you, unless one is born of water and the Spirit, he cannot enter the kingdom of God. That which is born of the flesh is flesh, and that which is born of the Spirit is spirit. Do not marvel that I said to you, \'You must be born again.\' (John 3:5-6).\r\n\r\n\"But you are not in the flesh but in the Spirit, if indeed the Spirit of God dwells in you. Now if anyone does not have the Spirit of Christ, he is not His\" (Romans 8:9).\r\n\r\nNow what are you waiting for? Our heavenly Father only wishes the best for us, restoring every little thing this world has stolen from us. That is what it means to be \"holy\". To be made whole.\r\n\r\nHe is ready to hear from you. That God given tongue to speak language, by faith, pray to Him, ask Him to forgive you by confessing your sins and be willing to forsake them; that you receive the sacrifice of His Son Jesus on the cross, and that you need His Holy Spirit residing inside you transforming you into a child of the living God.\r\n\r\nJesus says, \"but whoever drinks of the water that I shall give him(the Holy Spirit) will never thirst. But the water that I shall give him will become in him a fountain of water springing up into everlasting life.\"\r\n\r\nDid you realize that Jesus spoke more about hell than any person else in the scriptures, even more than He spoke about heaven?! For this very reason He was brought forth to die for us, to rescue us from this place that we earned by our sins against a holy God.\r\n\r\nHe describes hell as a real place where,\r\n\r\n\"Their worm does not die\r\nAnd the fire is not quenched\" (Mark 9:44).\r\n\r\nAnd where,\r\n\r\n\"There will be weeping and gnashing of teeth...\" (Luke 13:28).\r\n\r\nJesus tells us who to fear,\r\n\r\n\"And do not fear those who kill the body but cannot kill the soul. But rather fear Him who is able to destroy both soul and body in hell\" (Matthew 10:28).\r\n\r\n\"Now I saw a new heaven and a new earth, for the first heaven and the first earth had passed away. Also there was no more sea. Then I, John, saw the holy city, New Jerusalem, coming down out of heaven from God, prepared as a bride adorned for her husband. And I heard a loud voice from heaven saying, \'Behold, the tabernacle of God is with men, and He will dwell with them, and they shall be His people. God Himself will be with them and be their God. And God will wipe away every tear from their eyes; there shall be no more death, nor sorrow, nor crying. There shall be no more pain, for the former things have passed away.\'\r\n\r\nThen He who sat on the throne said, \'Behold, I make all things new.\' And He said to me, \'Write, for these words are true and faithful.\'\r\n\r\nAnd He said to me, \'It is done! I am the Alpha and the Omega, the Beginning and the End. I will give of the fountain of the water of life freely to him who thirsts. He who overcomes shall inherit all things, and I will be his God and he shall be My son. But the cowardly, unbelieving, abominable, murderers, sexually immoral, sorcerers, idolaters, and all liars shall have their part in the lake which burns with fire and brimstone, which is the second death.\'\" (Revelation 21:1-8).\r\n\r\nWith all of the world religions, how can we make certain the Bible got it right? The scientific facts has established and continues to support that the universe once had a starting point in which space, time and matter were created. Many know this as the big bang.\r\n\r\n\"The non-biblical religions tell us that god or god\'s create within space and time that eternally exist. The Bible stands alone and says that time and space don\'t exist until God creates the universe.\" - Astronomer(Phd) Hugh Ross\r\n\r\nThe Bible not only got it right that space, time and matter all came into existence at the start of the universe, it additionally states in 7 different places that the universe is in a continuous state of expansion 1000\'s of years before scientists learned these things.\r\n\r\nDid you already know that the actual Noah\'s Ark was discovered in the place where the Bible informed us it would be with the right dimensions? As well as proof for the destruction of the cities of Sodom and Gomorrah and the Exodus account of the Red Sea crossing?\r\n\r\nThe Bible is the most translated and examine book in the history of the world, packed with predictive prophecies, matching what we find inside the book of nature. Would not you count on God\'s word to be so?\r\n\r\nThis information and more can all be discovered here: https://biblefreedom.com\r\n\r\nGod is calling you!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(548,41,'hposphoric','jonah9626sdm@gmail.com','http://888kq.xyz/space-uid-156430.html','183.111.196.197','2020-03-12 06:09:00','2020-03-12 05:09:00','Hello! Do you know if they make any plugins to protect againsthackers? I’m kinda paranoid about losing everything I’ve worked hard on. Any tips?',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(549,41,'uqorumuqota','grant2949nyi@gmail.com','http://mini-zracer.com/forums/member.php?u=105844','183.111.196.197','2020-03-13 02:54:25','2020-03-13 01:54:25','male masturbationOunces. The oil is a beautiful light amber color and the label doesn’t hide but rather enhancesthe look of the oil.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(550,41,'otmbstone','preston8369bfi@gmail.com','http://bbs.88box.com/home.php?mod=space&amp;uid=364208','183.111.196.197','2020-03-14 03:03:26','2020-03-14 02:03:26','Hello there! I know this is kinda off topic but I was wondering if you knew whereI could locate a captcha plugin for my comment form?I’m using the same blog platform as yours and I’m having trouble finding one?Thanks a lot!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(551,41,'best cbd','mahalia.simoi@gmx.net','https://royalcbd.com/','38.145.66.70','2020-03-14 23:19:19','2020-03-14 22:19:19','Unquestionably believe that that you said.\r\n\r\nYour favourite reason appeared to be on the \r\nnet the simplest thing to have in mind of. I say to you, I certainly get annoyed while folks \r\nthink about worries that they plainly do not know about. You controlled to hit the nail upon the highest and also outlined out the whole thing without \r\nhaving side-effects , other people could take a signal.\r\nWill likely be back to get more. Thank you',0,'spam','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.96 Safari/537.36','',0,0),(552,41,'best cbd','brentonknoll@bigstring.com','https://royalcbd.com/','172.245.64.214','2020-03-15 01:35:03','2020-03-15 00:35:03','Hi! Do you know if they make any plugins to protect against hackers?\r\nI\'m kinda paranoid about losing everything I\'ve worked hard on. Any suggestions?',0,'spam','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.18 Safari/537.36 OPR/55.0.2955.0 (Edition developer)','',0,0),(553,41,'asltpetre','ezekiel7494fqb@gmail.com','http://wonmuseum.co.kr/home/en-us/user/79439','183.111.196.197','2020-03-15 04:41:17','2020-03-15 03:41:17','An intriguing discussion is definitely worth comment.There’s no doubt that that you should publish more aboutthis subject, it might not be a taboo matter but generallyfolks don’t talk about such subjects.To thenext! Cheers!!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(554,41,'nuparalleled','cayden6271hpy@gmail.com','http://mobi.joinbbs.net/space.php?uid=52870','183.111.196.197','2020-03-16 02:56:20','2020-03-16 01:56:20','I like the valuable information you provide to your articles.I will bookmark your weblog and take a look at again here regularly.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(555,212,'Jasper Adamczyk','Valadez@gmail.com','https://www.blurb.com/user/Sommer19Somm','107.158.217.240','2020-03-16 08:46:55','2020-03-16 07:46:55','Hi there! This is my first comment here so I just wanted to give a quick shout out and say I really enjoy reading through your articles. Can you recommend any other blogs/websites/forums that cover the same subjects? Thanks a ton!|',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(556,37,'Malika Vince','GilbertChesterman@gmail.com','https://dreamproxies.com/marketing-proxy','107.172.255.63','2020-03-16 14:55:17','2020-03-16 13:55:17','DreamProxies - Lowest priced USA Private Proxies: Professional superior, Endless information, 1000 mb/s superspeed, 99,9 uptime, Non step by step IP\'s, Not any practice standards, A number of subnets, USA or The european union proxies - Acquire Today - https://DreamProxies.com',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(557,197,'Kristamuppy','svit2moda@yandex.by','','93.125.81.205','2020-03-17 05:56:06','2020-03-17 04:56:06','Белорусский трикотаж Свитмода|Молодежная женская одежда Свитмода|Одежда женская больших размеров Ситмода Бай|',0,'spam','Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36','',0,0),(558,41,'ivscousness','cole3050vgq@gmail.com','http://ysn0592.com/home.php?mod=space&amp;uid=65793','183.111.196.197','2020-03-17 09:11:54','2020-03-17 08:11:54','It reveals how nicely you understand this subject. Bookmarked this web page, will come back for extra articles. You, my pal, ROCK!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(559,41,'tsockbroker','jonah0726oyd@gmail.com','http://www.imxy28.com/space-uid-26884.html','183.111.196.197','2020-03-19 05:47:18','2020-03-19 04:47:18','This design is steller! You obviously know how to keep a readerentertained. Between your wit and your videos, I was almost moved tostart my own blog (well, almost…HaHa!) Fantastic job.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(560,212,'Dennishig','dfhjhgkjhl83@bk.ru','','5.188.210.87','2020-03-19 14:15:45','2020-03-19 13:15:45','http://bit.ly/39YIrZV Ever wanted to become a cryptocurrency miner? Now you can do it without troubles and risks! Try CryptoTab Browser — the world’s first browser with built-in mining feature. It’s fast, lightweight and easy-to-use — plus it brings you income! Try yourself and check it out ; )  http://bit.ly/3b35FhH \r\n \r\n<a href=\"https://www.wadowiceonline.pl/wydarzenia/4078-wielka-akcja-dla-chorej-na-bialaczke-liliany/\" / rel=\"nofollow\">You will never get paid just for browsing the web — says who?</a> <a href=\"http://forums.fearnode.net/general-discussion/872497911/now-you-can-get-bitcoins-right-in-your-browser\" rel=\"nofollow\">Now you can get Bitcoins right in your browser!</a> <a href=\"http://holiday-dreams.ru/products/shou-sumasshedshego-professora-himicheskie-i-fizicheskie-opyty#comment_1023\" rel=\"nofollow\">Now you can get Bitcoins right in your browser!</a>  75361fa',0,'spam','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(561,41,'hpysiological','max7371ksz@gmail.com','https://www.hsyx5.com/home.php?mod=space&amp;uid=24817','183.111.196.197','2020-03-20 07:37:14','2020-03-20 06:37:14','I really loved what you had to say, and more than that, how you presented it.Too cool!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(562,41,'esmicolon','richard2949doy@gmail.com','https://newsprimepro.phoeniixxdemo.com/community/profile/ronaldstups/','183.111.196.197','2020-03-21 05:24:48','2020-03-21 04:24:48','Hello there! This article could not be written anybetter! Looking through this article reminds me of my previousroommate! He constantly kept talking about this.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(563,41,'psiteful','jameson0615fqy@gmail.com','http://anim8bar.com/home.php?mod=space&amp;uid=691053','183.111.196.197','2020-03-22 12:53:36','2020-03-22 11:53:36','It’s actually a nice and helpful piece of information. I am glad that you just shared this useful info with us. Please stay us up to date like this. Thank you for sharing.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(564,41,'oykefellow','caden6269cjq@gmail.com','http://forum.p4c.cz/profile.php?mode=viewprofile&amp;u=2880','183.111.196.197','2020-03-23 13:04:01','2020-03-23 12:04:01','Any way I will be subscribing to your augment and even I achievement you access consistently fast.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(565,41,'oradster','ovtrespass000956@gmail.com','http://handicapableshop.com/memberlist.php?mode=viewprofile&amp;u=69419','183.111.196.197','2020-03-24 13:47:32','2020-03-24 12:47:32','assuming Thomas would buzz through the gate on a non stop trip to the cafeteria for dinner. Famer one day when Ileave the league. Just be the best I can be.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(566,41,'그래프꽁머니사이트','bryce4159wgp@gmail.com','https://www.totohan.com/money','183.111.196.197','2020-03-25 01:05:22','2020-03-25 00:05:22','naturally like your web site but you need to check the spelling on quite a few of your posts.Several of them are rife with spelling problems and I find it very bothersome to inform the truthhowever I’ll certainly come back again.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(567,41,'지뢰찾기사이트','silas1959gsc@gmail.com','https://www.totohan.com/unover','183.111.196.197','2020-03-25 20:01:18','2020-03-25 19:01:18','Helpful info. Lucky me I found your website unintentionally,and I’m shocked why this coincidence did not took place in advance!I bookmarked it.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(568,212,'AllenWef','leopoldwallington@gmail.com','http://brodis.online','109.197.250.97','2020-03-26 18:09:09','2020-03-26 17:09:09','Hello! \r\nSeek out a demo of the game named X-Hex<a href=\"http://darude.site\" rel=\"nofollow\">.</a> The meaning of the game is this<a href=\"http://darude.website\" rel=\"nofollow\">.</a> \r\nField lozenge<a href=\"http://brodis.website\" rel=\"nofollow\">.</a> On the fields set dots<a href=\"http://brodis.site\" rel=\"nofollow\">.</a> Thanks to these points the field grows and becomes grand<a href=\"http://brodis.online\" rel=\"nofollow\">.</a> \r\nAt the moment when it begins to touch the opponent’s field<a href=\"http://gl-grand.website\" rel=\"nofollow\">.</a> Dots begin move now to the enemy, then back. The winner is the one who fills the entire field. \r\nPresent bonuses, a call to an aircraft that randomly bombes the enemy’s fields and can hurt yours. Very interesting toy. \r\n \r\nP<a href=\"http://adibodobe.site\" rel=\"nofollow\">.</a>S<a href=\"http://darude.online\" rel=\"nofollow\">.</a> \r\nThank you in advance  \r\nYou can reply to the mail<a href=\"http://adibodobe.online\" rel=\"nofollow\">:</a> judbayneoranderson@gmail<a href=\"http://adibodobe.website\" rel=\"nofollow\">.</a>com',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(569,41,'달팽이게임','kaiden4824jln@gmail.com','https://www.totohan.com/lotus','183.111.196.197','2020-03-26 18:37:12','2020-03-26 17:37:12','Having read this I thought it was extremely informative.I appreciate you spending some time and effort to putthis short article together.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(570,116,'Ariel Stick','Kowallis@gmail.com','https://javascriptinfo.com/view/3315/sorting-javascript-object-by-property-value','50.28.102.12','2020-03-27 00:31:18','2020-03-26 23:31:18','tҺe website іѕ really good, I really like your blog!',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(571,212,'Blanche Wickert','Osnoe62110@gmail.com','http://tradmusic.com','206.217.130.158','2020-03-28 02:23:26','2020-03-28 01:23:26','There is definately a lot to find out about this subject. I really like all of the points you have made.',0,'spam','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(572,212,'LoidNage','wlloyd122@gmail.com','http://brodis.site','109.197.250.97','2020-03-30 08:00:47','2020-03-30 06:00:47','I will buy cheap asus any model. \r\nHello everybody<a href=\"http://gremmy-gr.space\" rel=\"nofollow\">.</a> \r\nUrgently<a href=\"http://gremmy-gr.website\" rel=\"nofollow\">.</a> I will buy cheap smartphone asus any model<a href=\"http://reaply-go.website\" rel=\"nofollow\">.</a> Used<a href=\"http://reaply-go.site\" rel=\"nofollow\">,</a> repair<a href=\"http://gremmy-gr.site\" rel=\"nofollow\">,</a> does not matter<a href=\"http://reaply-go.club\" rel=\"nofollow\">.</a> can be broken<a href=\"http://valeraiko.pw\" rel=\"nofollow\">.</a> for parts. \r\nP<a href=\"http://gl-grand.site/\" / rel=\"nofollow\">.</a>S<a href=\"http://gremmy-gr.fun\" rel=\"nofollow\">.</a> \r\n Thank you very much  \r\nYou can reply to the mail<a href=\"http://gremmy-gr.host\" rel=\"nofollow\">:</a> judbayneoranderson@gmail<a href=\"http://gremmy-gr.pw\" rel=\"nofollow\">.</a>com',0,'0','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.62 Safari/537.36','',0,0),(573,212,'DarDus','judbayneoranderson@gmail.com','http://www.adibodobe.site','109.248.46.30','2020-03-30 08:18:15','2020-03-30 06:18:15','Hello! \r\nTell dear friends<a href=\"http://darude.site\" rel=\"nofollow\">,</a> where can I settle down? \r\nCPU during the day clogged by 100%<a href=\"http://darude.website\" rel=\"nofollow\">,</a> on the online site maximum 600 guests<a href=\"http://brodis.website\" rel=\"nofollow\">,</a> the rest apparently the 403 error pops up<a href=\"http://brodis.site\" rel=\"nofollow\">.</a> \r\nWhat is the amount of uniques per day it’s hard to say for sure<a href=\"http://brodis.online\" rel=\"nofollow\">,</a> everywhere the statistics diverge, but on average I think 20-30k<a href=\"http://gl-grand.website\" rel=\"nofollow\">.</a> \r\nTheme of the site: entertaining, there are no streams, but there are a lot of pages. Guests from all countries, the site is multilingual. Site weight about 2 gigabytes. Dedicated server  not pulling , because I don’t make money on advertising. \r\nP<a href=\"http://adibodobe.site\" rel=\"nofollow\">.</a>S<a href=\"http://darude.online\" rel=\"nofollow\">.</a> \r\n Thank you very much  \r\nYou can reply to the mail<a href=\"http://adibodobe.online\" rel=\"nofollow\">:</a> judbayneoranderson@gmail<a href=\"http://adibodobe.website\" rel=\"nofollow\">.</a>com',0,'0','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.71','',0,0),(574,212,'Milausew','baldwincleaver17@gmail.com','http://darude.online','109.248.46.30','2020-03-30 09:02:55','2020-03-30 07:02:55','Regards. \r\nLooking for engine for service site<a href=\"http://darude.site\" rel=\"nofollow\">,</a> there will be updates<a href=\"http://darude.website\" rel=\"nofollow\">,</a> minimum information and catalog technical documentation<a href=\"http://brodis.website\" rel=\"nofollow\">,</a> with access for downloading by password<a href=\"http://brodis.site\" rel=\"nofollow\">.</a> \r\nPlease recommend which CMS to use? Unfortunately<a href=\"http://brodis.online\" rel=\"nofollow\">,</a> he didn’t find anything<a href=\"http://gl-grand.website\" rel=\"nofollow\">.</a> \r\nP<a href=\"http://adibodobe.site\" rel=\"nofollow\">.</a>S<a href=\"http://darude.online\" rel=\"nofollow\">.</a> \r\nThank you in advance  \r\nYou can reply to the mail<a href=\"http://adibodobe.online\" rel=\"nofollow\">:</a> baldwincleaverl7@gmail<a href=\"http://adibodobe.website\" rel=\"nofollow\">.</a>com',0,'0','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.64 (Edition Yx)','',0,0),(575,212,'LuciNum','lucianofallis@gmail.com','http://darude.site','109.248.46.30','2020-03-30 09:48:37','2020-03-30 07:48:37','Hi everybody! \r\nAdvise expensive amigos<a href=\"http://darude.site\" rel=\"nofollow\">,</a> where can I stay? \r\nCPU during the day overloaded by 100%<a href=\"http://darude.website\" rel=\"nofollow\">,</a> on the online site maximum 600 visits<a href=\"http://brodis.website\" rel=\"nofollow\">,</a> as seen the 403 error pops up<a href=\"http://brodis.site\" rel=\"nofollow\">.</a> \r\nWhat is the amount of uniques in a day it’s hard to say for sure<a href=\"http://brodis.online\" rel=\"nofollow\">,</a> everywhere the statistics diverge, but on average I think 20-30k<a href=\"http://gl-grand.website\" rel=\"nofollow\">.</a> \r\nTopic of the site: entertaining, there are no streams, but there are a lot of pages. Guests from all countries, the site is multilingual. Site weight plus minus 2 gigabytes.  Virtual server not pulling , because I don’t make money on advertising. \r\nP<a href=\"http://adibodobe.site\" rel=\"nofollow\">.</a>S<a href=\"http://darude.online\" rel=\"nofollow\">.</a> \r\n Thank you very much  \r\nYou can reply to the mail<a href=\"http://gremmy-gr.website\" rel=\"nofollow\">:</a> judbay.erson@mail<a href=\"http://gremmy-gr.fun\" rel=\"nofollow\">.</a>com',0,'0','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36 OPR/55.0.2994.44','',0,0),(576,212,'HoytNum','hoytstopp@gmail.com','http://darude.website','109.248.46.30','2020-03-30 10:35:11','2020-03-30 08:35:11','Hi everybody<a href=\"http://supragames.space\" rel=\"nofollow\">.</a> \r\nI saw much sites on the  World Wide Web<a href=\"http://supragames.website\" rel=\"nofollow\">.</a> Really liked your blog the most<a href=\"http://supragames.host\" rel=\"nofollow\">.</a> you have enough of interesting information<a href=\"http://supragames.site\" rel=\"nofollow\">.</a> I found from you what I was looking for a very long time<a href=\"http://supragames.pw\" rel=\"nofollow\">.</a> \r\nYour forum layout looks very nice<a href=\"http://supragames.fun\" rel=\"nofollow\">.</a> Your website engine is similar to cmsJoomla<a href=\"http://supergames.space\" rel=\"nofollow\">.</a> What is the name of the template<a href=\"http://fun-games.website\" rel=\"nofollow\">.</a> \r\nP<a href=\"http://supergames.host\" rel=\"nofollow\">.</a>S<a href=\"http://fun-games.space\" rel=\"nofollow\">.</a> \r\nThank you in advance <a href=\"http://fun-games.site\" rel=\"nofollow\">.</a> \r\nYou can reply to the mail<a href=\"http://fun-games.pw\" rel=\"nofollow\">:</a>bayneorand.erson@gmail<a href=\"http://fun-games.host\" rel=\"nofollow\">.</a>com \r\nTel<a href=\"http://fun-games.fun\" rel=\"nofollow\">.</a>: 88001456565<a href=\"http://asgame.website\" rel=\"nofollow\">.</a>',0,'0','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36 OPR/55.0.2994.44','',0,0),(577,212,'MourDup','mouritsenxever@gmail.com','http://brodis.website','109.197.250.97','2020-03-30 11:08:14','2020-03-30 09:08:14','Hello. And Bye.                                       I will buy cheap asus any model. \r\nHello everyone<a href=\"http://gremmy-gr.space\" rel=\"nofollow\">.</a> \r\nwith expedition<a href=\"http://gremmy-gr.website\" rel=\"nofollow\">.</a> I will buy cheap mobile phone asus any model<a href=\"http://reaply-go.website\" rel=\"nofollow\">.</a> Used<a href=\"http://reaply-go.site\" rel=\"nofollow\">,</a> repair<a href=\"http://gremmy-gr.site\" rel=\"nofollow\">,</a> does not matter<a href=\"http://reaply-go.club\" rel=\"nofollow\">.</a> can be broken<a href=\"http://valeraiko.pw\" rel=\"nofollow\">.</a> for parts. \r\nP<a href=\"http://gl-grand.site/\" / rel=\"nofollow\">.</a>S<a href=\"http://gremmy-gr.fun\" rel=\"nofollow\">.</a> \r\nThank you in advance  \r\nYou can reply to the mail<a href=\"http://gremmy-gr.host\" rel=\"nofollow\">:</a> mouritsenxever@gmail<a href=\"http://gremmy-gr.pw\" rel=\"nofollow\">.</a>com',0,'0','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(578,212,'Kristniz','kristianleake@gmail.com','http://gl-grand.website','109.197.250.97','2020-03-30 11:39:11','2020-03-30 09:39:11','Hello everybody<a href=\"http://adibodobe.online\" rel=\"nofollow\">.</a> \r\nwith expedition<a href=\"http://adibodobe.website\" rel=\"nofollow\">.</a> I will take as a gift coffee maker De\'Longhi all models<a href=\"http://adibodobe.site\" rel=\"nofollow\">.</a> Hand-me-down<a href=\"http://darude.online\" rel=\"nofollow\">,</a> repairs<a href=\"http://darude.site\" rel=\"nofollow\">,</a> does not matter<a href=\"http://darude.website\" rel=\"nofollow\">.</a> can be broken<a href=\"http://brodis.website\" rel=\"nofollow\">.</a> for spares<a href=\"http://brodis.site\" rel=\"nofollow\">.</a> \r\nP<a href=\"http://brodis.online\" rel=\"nofollow\">.</a>S<a href=\"http://gl-grand.website\" rel=\"nofollow\">.</a> \r\n Thank you for any advice) <a href=\"http://gremmy-gr.space\" rel=\"nofollow\">.</a> \r\nYou can reply to the mail<a href=\"http://gremmy-gr.website\" rel=\"nofollow\">:</a> judbay.erson@gmail<a href=\"http://gremmy-gr.fun\" rel=\"nofollow\">.</a>com \r\nTel<a href=\"http://gl-grand.site/\" / rel=\"nofollow\">.</a> 88003000500',0,'0','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.79 Safari/537.36','',0,0),(579,212,'Ronaldsit','judont812@gmail.com','http://gremmy-gr.fun','109.248.46.30','2020-03-30 12:05:33','2020-03-30 10:05:33','Hello everyone<a href=\"http://baskrisk.site\" rel=\"nofollow\">.</a> \r\nwith expedition<a href=\"http://baskrow.online\" rel=\"nofollow\">.</a> I will acquire inexpensively percolator Philips EP5331/10 Series 6200<a href=\"http://baskrow.site\" rel=\"nofollow\">.</a> \r\nSecondhand<a href=\"http://betrase.site\" rel=\"nofollow\">,</a> refit<a href=\"http://betvictory.online\" rel=\"nofollow\">,</a> does not matter<a href=\"http://baskstack.club\" rel=\"nofollow\">.</a> Can be on the fritz<a href=\"http://baskstack.site\" rel=\"nofollow\">.</a> For duplicates<a href=\"http://baskstaks.online\" rel=\"nofollow\">.</a> \r\nP<a href=\"http://baskwin.online\" rel=\"nofollow\">.</a>S<a href=\"http://baskwin.site\" rel=\"nofollow\">.</a> \r\n Thanks anyway<a href=\"http://bestrow.online\" rel=\"nofollow\">.</a> \r\nYou can reply to the mail<a href=\"http://betvictory.site\" rel=\"nofollow\">:</a> judbay.neoranderson@yahoo<a href=\"http://bestslot.club\" rel=\"nofollow\">.</a>com \r\nTel<a href=\"http://betbody.site\" rel=\"nofollow\">.</a><a href=\"http://asgame.website\" rel=\"nofollow\">:</a> 8800002323<a href=\"http://betline.club\" rel=\"nofollow\">.</a>',0,'0','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(580,212,'Waynteda','scalesgris215@gmail.com','http://gremmy-gr.host','109.197.250.97','2020-03-30 12:09:00','2020-03-30 10:09:00','Regards<a href=\"http://fartgame.club\" rel=\"nofollow\">.</a> \r\nwith expedition<a href=\"http://fastbet.club\" rel=\"nofollow\">.</a> I will buy cheap game-console Sony PlayStation   3 Super Slim 500 1000GB<a href=\"http://freestar.website\" rel=\"nofollow\">.</a> Gone<a href=\"http://gremmy-gr.host\" rel=\"nofollow\">,</a> renovation<a href=\"http://gamers-gold.host\" rel=\"nofollow\">,</a> does not matter<a href=\"http://funnybet.online\" rel=\"nofollow\">.</a> Can be broken<a href=\"http://funrow.site\" rel=\"nofollow\">.</a> For spare parts<a href=\"http://funrun.site\" rel=\"nofollow\">.</a> \r\nP<a href=\"http://gaincast.site\" rel=\"nofollow\">.</a>S<a href=\"http://gaincast.online\" rel=\"nofollow\">.</a> \r\nThank you in advance <a href=\"http://ganzbet.online\" rel=\"nofollow\">.</a> \r\nYou can reply to the mail<a href=\"http://hardbet.club\" rel=\"nofollow\">:</a> judbayneo.randerson@gmail<a href=\"http://getbet.site\" rel=\"nofollow\">.</a>com \r\nTel<a href=\"http://goldbet.site\" rel=\"nofollow\">.</a><a href=\"http://gunbet.club\" rel=\"nofollow\">:</a> 88009723989<a href=\"http://goldrow.online\" rel=\"nofollow\">.</a>',0,'0','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36','',0,0),(581,212,'RandLiave','randleroy399@gmail.com','http://gremmy-gr.pw','109.197.250.97','2020-03-30 12:39:38','2020-03-30 10:39:38','Hello everybody<a href=\"http://bigpot.site\" rel=\"nofollow\">.</a> \r\nModer, transfer my post to another branch if I\'m not at<a href=\"http://bigwinn.online\" rel=\"nofollow\">.</a> Looking for CMS for service page<a href=\"http://xwin.online\" rel=\"nofollow\">,</a> there will be news<a href=\"http://enjoybet.site\" rel=\"nofollow\">,</a> minimum information and section technical documentation<a href=\"http://enjoybet.club\" rel=\"nofollow\">,</a> with access for downloading by pass<a href=\"http://bodyset.club\" rel=\"nofollow\">.</a> Please recommend which CMS to use? Unfortunately<a href=\"http://dontloss.club\" rel=\"nofollow\">,</a> he didn’t find anything<a href=\"http://cashfree.club\" rel=\"nofollow\">.</a> \r\nP<a href=\"http://cashwin.online\" rel=\"nofollow\">.</a>S<a href=\"http://cashnigth.online\" rel=\"nofollow\">.</a> \r\n Thank you for any advice) <a href=\"http://castdraw.club\" rel=\"nofollow\">.</a> \r\nYou can reply to the mail<a href=\"http://dns-ns.club\" rel=\"nofollow\">:</a>judbay.neoranderson@mail<a href=\"http://castdraw.site\" rel=\"nofollow\">.</a>com \r\nTel<a href=\"http://crazybet.online\" rel=\"nofollow\">.</a><a href=\"http://dashbet.club\" rel=\"nofollow\">:</a> 88003041500<a href=\"http://crazyslot.online\" rel=\"nofollow\">.</a>',0,'0','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36','',0,0),(582,212,'Hurlkeync','hurleybond4@gmail.com','http://gremmy-gr.space','109.248.46.30','2020-03-30 12:50:37','2020-03-30 10:50:37','Hello everybody<a href=\"http://maxwinn.online\" rel=\"nofollow\">.</a> Admin<a href=\"http://riverbet.site\" rel=\"nofollow\">,</a> transfer my post to another branch if I\'m not at<a href=\"http://naicepot.site\" rel=\"nofollow\">.</a> Urgent repurchase<a href=\"http://newline.club\" rel=\"nofollow\">.</a> I will acquire inexpensively drones Xiro different models<a href=\"http://newxbet.site\" rel=\"nofollow\">.</a> Hand-me-down<a href=\"http://supragames.space\" rel=\"nofollow\">,</a> renovation, does not matter<a href=\"http://nicebet.site\" rel=\"nofollow\">.</a> Can be bust<a href=\"http://nightbet.site\" rel=\"nofollow\">.</a> For spares<a href=\"http://notfold.club\" rel=\"nofollow\">.</a> \r\nP<a href=\"http://raisebet.online\" rel=\"nofollow\">.</a>S<a href=\"http://onlybet.site\" rel=\"nofollow\">.</a> \r\n Thanks in advance <a href=\"http://ratebiz.online\" rel=\"nofollow\">.</a> \r\nYou can reply to the mail: judbay.erson@outlook<a href=\"http://ratebiz.site\" rel=\"nofollow\">.</a>com \r\nTel<a href=\"http://ratepalm.site\" rel=\"nofollow\">.</a><a href=\"http://rateprize.site\" rel=\"nofollow\">:</a> 88451453365<a href=\"http://ratepalm.club\" rel=\"nofollow\">.</a>',0,'0','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36 OPR/53.0.2907.106','',0,0),(583,212,'HenryApes','seangregory616@gmail.com','http://gremmy-gr.site','109.197.250.97','2020-03-30 13:10:49','2020-03-30 11:10:49','Hello<a href=\"http://hotbaby.online\" rel=\"nofollow\">.</a> \r\nModerator, transfer my message if I wrote to the wrong thread<a href=\"http://hotbet.online\" rel=\"nofollow\">.</a>Urgent repurchase<a href=\"http://hotcash.site\" rel=\"nofollow\">.</a>I will acquire inexpensively<a href=\"http://hotgame.store\" rel=\"nofollow\">,</a>buy broken tv near me<a href=\"http://kitmany.club\" rel=\"nofollow\">.</a> buy broken tvs san antonio<a href=\"http://lackyslot.online\" rel=\"nofollow\">.</a> bought a broken tv from best buy<a href=\"http://litebet.online\" rel=\"nofollow\">.</a> best buy broken tv exchange policy<a href=\"http://litegame.online\" rel=\"nofollow\">.</a> bought a broken tv from target<a href=\"http://litemoney.club\" rel=\"nofollow\">.</a> buy broken plasma tv<a href=\"http://liteslot.site\" rel=\"nofollow\">.</a> best buy broken tv recycle<a href=\"http://longbet.club\" rel=\"nofollow\">.</a> returning a broken tv to best buy<a href=\"http://luckybet.online\" rel=\"nofollow\">.</a> \r\nP<a href=\"http://luckyrow.club\" rel=\"nofollow\">.</a>S<a href=\"http://maxbetonly.site\" rel=\"nofollow\">.</a> \r\n Thank you for any advice) <a href=\"http://maxslot.site\" rel=\"nofollow\">.</a> \r\nYou can reply to the mail: judbayneo.randerson@gmail<a href=\"http://fun-games.website\" rel=\"nofollow\">.</a>com \r\nTel.: 88045658700.',0,'0','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36','',0,0),(584,212,'Karliskap','carltonkarlis@gmail.com','http://adibodobe.website','109.197.250.97','2020-03-30 13:43:46','2020-03-30 11:43:46','Hello. \r\nI I apologize but most likely this topic is already somewhere here and discussed, in the search I did not find anything unfortunately<a href=\"http://gl-grand.website\" rel=\"nofollow\">.</a> \r\nSearched for information in  worldwide network <a href=\"http://brodis.online\" rel=\"nofollow\">,</a> blogs <a href=\"http://brodis.site\" rel=\"nofollow\">,</a> blogs <a href=\"http://brodis.website\" rel=\"nofollow\">,</a> thematic and news sites<a href=\"http://darude.website\" rel=\"nofollow\">,</a> etc<a href=\"http://darude.site\" rel=\"nofollow\">.</a> \r\nMany googles and readers about nets . I\'m not  at all  understood where  indignant  visitors to my sites? \r\n \r\nP<a href=\"http://adibodobe.site\" rel=\"nofollow\">.</a>S<a href=\"http://darude.online\" rel=\"nofollow\">.</a> \r\n Thanks anyway \r\nYou can reply to the mail<a href=\"http://adibodobe.online\" rel=\"nofollow\">:</a> carltonkarlis@gmail<a href=\"http://adibodobe.website\" rel=\"nofollow\">.</a>com',0,'0','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36','',0,0),(585,212,'PincuLek','comptonpincus@gmail.com','http://reaply-go.website','109.197.250.97','2020-03-30 14:14:23','2020-03-30 12:14:23','Hello<a href=\"http://shotfree.online\" rel=\"nofollow\">.</a> \r\nModerator, transfer my post to another branch if I\'m not at<a href=\"http://signbet.site\" rel=\"nofollow\">.</a> \r\nUrgent buyback<a href=\"http://slotfree.online\" rel=\"nofollow\">.</a> I will buy cheap, notebook cover ideas<a href=\"http://spicebet.club\" rel=\"nofollow\">,</a> a notebook for artists<a href=\"http://threerow.club\" rel=\"nofollow\">,</a> laptop deals uk<a href=\"http://verybet.site\" rel=\"nofollow\">,</a> a laptop bag<a href=\"http://victoryrate.club\" rel=\"nofollow\">,</a> notebook band<a href=\"http://victoryrate.site\" rel=\"nofollow\">,</a> laptop stand<a href=\"http://victoryround.site\" rel=\"nofollow\">,</a> notebook and pen gift set<a href=\"http://westgame.online\" rel=\"nofollow\">,</a> notebook binder<a href=\"http://winnrun.club\" rel=\"nofollow\">,</a> c laptop charger<a href=\"http://xbet.store\" rel=\"nofollow\">,</a> laptop deals<a href=\"http://xspot.site\" rel=\"nofollow\">,</a> a laptop keyboard<a href=\"http://xwin.online\" rel=\"nofollow\">.</a> \r\nP<a href=\"http://zerotilt.site\" rel=\"nofollow\">.</a>S<a href=\"http://yellowboy.club\" rel=\"nofollow\">.</a> \r\n Thanks in advance . \r\nYou can reply to the mail: judbay.neoranderson@gmail.com \r\nTel.: 88019738700.',0,'0','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36 OPR/54.0.2952.54','',0,0),(586,212,'AbranVar','abranburmeister4@gmail.com','http://reaply-go.site','109.248.46.30','2020-03-30 14:27:39','2020-03-30 12:27:39','Hello everybody. \r\nModer, transfer my message if I wrote to the wrong thread. \r\nUrgent repurchase. I will take as a gift<a href=\"http://gl-grand.site\" rel=\"nofollow\">,</a> speakers for a samsung monitor<a href=\"http://gremmy-gr.fun\" rel=\"nofollow\">,</a> monitor samsung cf390<a href=\"http://gremmy-gr.host\" rel=\"nofollow\">,</a> monitor lg amazon<a href=\"http://gremmy-gr.pw\" rel=\"nofollow\">,</a> monitor lg branco<a href=\"http://gremmy-gr.space\" rel=\"nofollow\">,</a> monitor acer nitro<a href=\"http://gremmy-gr.website\" rel=\"nofollow\">,</a> monitor lg apple<a href=\"http://gremmy-gr.site\" rel=\"nofollow\">,</a> lg monitor audio not working<a href=\"http://reaply-go.website\" rel=\"nofollow\">,</a> monitor lg 4k<a href=\"http://reaply-go.site\" rel=\"nofollow\">,</a> samsung monitor analog digital problem<a href=\"http://reaply-go.club\" rel=\"nofollow\">,</a> monitor samsung auto adjustment locked<a href=\"http://valeraiko.pw\" rel=\"nofollow\">,</a> monitor samsung b2440m<a href=\"http://supragames.website\" rel=\"nofollow\">,</a> lg monitor app<a href=\"http://supragames.host\" rel=\"nofollow\">,</a> lg monitor best settings<a href=\"http://supragames.site\" rel=\"nofollow\">,</a> monitor acer k202hql<a href=\"http://supragames.pw\" rel=\"nofollow\">,</a> monitor lg bergaris<a href=\"http://supragames.fun\" rel=\"nofollow\">.</a> \r\nP.S. \r\n Thank you for any advice) . \r\nYou can reply to the mail: a.yneoranderson@yahoo.com \r\nTel<a href=\"http://supergames.space\" rel=\"nofollow\">.</a>: 8803468255.',0,'0','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36','',0,0),(587,212,'PhilNum','rmelville639@gmail.com','http://adibodobe.online/','109.248.46.30','2020-03-30 15:15:47','2020-03-30 13:15:47','Hello<a href=\"http://asgame.space\" rel=\"nofollow\">.</a> \r\nAdmin<a href=\"http://asgame.pw\" rel=\"nofollow\">,</a> transfer my message if I wrote to the wrong thread<a href=\"http://asgame.host\" rel=\"nofollow\">.</a> I really like your site<a href=\"http://live-game.website\" rel=\"nofollow\">.</a> you have a lot of useful stuff<a href=\"http://live-game.pw\" rel=\"nofollow\">.</a><a href=\"http://live-game.space\" rel=\"nofollow\">.</a><a href=\"http://live-game.host\" rel=\"nofollow\">.</a> large target audience<a href=\"http://live-game.fun\" rel=\"nofollow\">.</a> I want to order ads from my site from you<a href=\"http://gamers-gold.space\" rel=\"nofollow\">.</a> \r\nP<a href=\"http://gamers-gold.site\" rel=\"nofollow\">.</a>S<a href=\"http://gamers-gold.fun\" rel=\"nofollow\">.</a> \r\n Thanks in advance <a href=\"http://gamers-gold.pw\" rel=\"nofollow\">.</a> \r\nYou can reply to the mail<a href=\"http://asgame.fun\" rel=\"nofollow\">:</a>judbayn.eorand@mail<a href=\"http://adibodobe.online\" rel=\"nofollow\">:</a>com \r\nTel<a href=\"http://gamers-gold.host\" rel=\"nofollow\">.</a><a href=\"http://gamers-gold.website\" rel=\"nofollow\">:</a> 88003332323<a href=\"http://dns-ns.club\" rel=\"nofollow\">.</a>',0,'0','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36','',0,0),(588,41,'그래프게임','jesse6282naj@gmail.com','https://www.abb567.com/','183.111.196.197','2020-04-01 04:31:27','2020-04-01 02:31:27','What’s Going down i’m new to this, I stumbled upon this I have discoveredIt absolutely helpful and it has helped me out loads.I hope to contribute &amp; assist other users like its helped me.Great job.',0,'0','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(589,37,'Sari Raddatz','ValdaMaung@gmail.com','https://dreamproxies.com/shared-proxies','107.173.19.14','2020-04-02 02:50:18','2020-04-02 00:50:18','DreamProxies - Most affordable USA Private Proxies: Top level superior, Endless data transfer rate, 1000 mb/s superspeed, 99,9 uptime, Neo successive IP\'s, Zero use standards, A number of subnets, USA as well as The european union proxies - Get Today - DreamProxies.com',0,'0','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(590,41,'eprsuasive','kyle6271owe@gmail.com','https://bit.ly/2wRUh9Z','183.111.196.197','2020-04-02 03:58:53','2020-04-02 01:58:53','Hello! I’ve been following your site for some time now and finally gotthe bravery to go ahead and give you a shout out from  Porter Texas!Just wanted to say keep up the good job!',0,'0','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0),(591,212,'NeooCek','tetakhiling2015@mail.ru','','109.169.211.165','2020-04-03 06:57:00','2020-04-03 04:57:00','Здесь вы можете заказать копию любого сайта под ключ, недорого и качественно, при этом не тратя свое время на различные программы и фриланс-сервисы. \r\n \r\nКлонированию подлежат сайты как на конструкторах, так и на движках: \r\n- Tilda (Тильда) \r\n- Wix (Викс) \r\n- Joomla (Джумла) \r\n- Wordpress (Вордпресс) \r\n- Bitrix (Битрикс) \r\nи т.д. \r\nтелефон 8-996-725-20-75  звоните пишите  viber watsapp \r\nКопируются не только одностраничные сайты на подобии Landing Page, но и многостраничные. Создается полная копия сайта и настраиваются формы для отправки заявок и сообщений. Кроме того, подключается админка (админ панель), позволяющая редактировать код сайта, изменять текст, загружать изображения и документы. \r\n \r\nЗдесь вы получите весь комплекс услуг по копированию, разработке и продвижению сайта в Яндексе и Google. \r\n \r\nХотите узнать сколько стоит сделать копию сайта? \r\nнапишите нам \r\n8-996-725-20-75  звоните пишите  viber watsapp \r\n \r\nHere you can order a copy of any site turnkey, inexpensive and high quality, while not wasting your time on various programs and freelance services. \r\n \r\nCloning sites are subject to both designers and engines: \r\n- Tilda (Tilda) \r\n- Wix (Wicks) \r\n- Joomla (Joomla) \r\n- Wordpress (WordPress) \r\n- Bitrix (Bitrix) \r\netc. \r\nphone 8-996-725-20-75 call write viber watsapp \r\nNot only single-page sites like Landing Page are copied, but also multi-page sites. A full copy of the site is created and forms for sending requests and messages are set up. In addition, the admin panel is connected, which allows you to edit the site code, change the text, upload images and documents. \r\n \r\nHere you will get a full range of services for copying, development and promotion of the site in Yandex and Google. \r\n \r\nDo you want to know how much it costs to make a copy of the site? \r\nwrite to us \r\n8-996-725-20-75 call write viber watsapp',0,'0','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(592,212,'pinrmbdez','pintopmax@rambler.ru','https://pinup.bestsportsgames.xyz/pin-up-wings-2-skachat/','77.120.102.107','2020-04-03 18:19:21','2020-04-03 16:19:21','не работает',0,'0','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36','',0,0),(593,41,'​그래프사이트','changjinghui37@gmail.com','https://www.totohan.com/graph','183.111.196.197','2020-04-05 03:52:44','2020-04-05 01:52:44','What a data of un-ambiguity and preserveness of valuable know-how regarding unexpected feelings.',0,'0','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','',0,0);
/*!40000 ALTER TABLE `wp_comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_links`
--

DROP TABLE IF EXISTS `wp_links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_links` (
  `link_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `link_url` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_name` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_image` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_target` varchar(25) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_description` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_visible` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'Y',
  `link_owner` bigint(20) unsigned NOT NULL DEFAULT '1',
  `link_rating` int(11) NOT NULL DEFAULT '0',
  `link_updated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `link_rel` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_notes` mediumtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `link_rss` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`link_id`),
  KEY `link_visible` (`link_visible`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_links`
--

LOCK TABLES `wp_links` WRITE;
/*!40000 ALTER TABLE `wp_links` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_options`
--

DROP TABLE IF EXISTS `wp_options`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_options` (
  `option_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `option_name` varchar(191) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `option_value` longtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `autoload` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'yes',
  PRIMARY KEY (`option_id`),
  UNIQUE KEY `option_name` (`option_name`)
) ENGINE=InnoDB AUTO_INCREMENT=18614 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_options`
--

LOCK TABLES `wp_options` WRITE;
/*!40000 ALTER TABLE `wp_options` DISABLE KEYS */;
INSERT INTO `wp_options` VALUES (1,'siteurl','https://rike.dev','yes'),(2,'home','https://rike.dev','yes'),(3,'blogname','rike.dev','yes'),(4,'blogdescription','web development &amp; beyond','yes'),(5,'users_can_register','0','yes'),(6,'admin_email','hello@rike.dev','yes'),(7,'start_of_week','1','yes'),(8,'use_balanceTags','0','yes'),(9,'use_smilies','1','yes'),(10,'require_name_email','1','yes'),(11,'comments_notify','1','yes'),(12,'posts_per_rss','10','yes'),(13,'rss_use_excerpt','0','yes'),(14,'mailserver_url','mail.example.com','yes'),(15,'mailserver_login','login@example.com','yes'),(16,'mailserver_pass','password','yes'),(17,'mailserver_port','110','yes'),(18,'default_category','1','yes'),(19,'default_comment_status','open','yes'),(20,'default_ping_status','open','yes'),(21,'default_pingback_flag','1','yes'),(22,'posts_per_page','10','yes'),(23,'date_format','j. F Y','yes'),(24,'time_format','G:i','yes'),(25,'links_updated_date_format','j. F Y G:i','yes'),(26,'comment_moderation','0','yes'),(27,'moderation_notify','1','yes'),(28,'permalink_structure','/%year%/%monthnum%/%day%/%postname%/','yes'),(29,'rewrite_rules','a:92:{s:11:\"^wp-json/?$\";s:22:\"index.php?rest_route=/\";s:14:\"^wp-json/(.*)?\";s:33:\"index.php?rest_route=/$matches[1]\";s:21:\"^index.php/wp-json/?$\";s:22:\"index.php?rest_route=/\";s:24:\"^index.php/wp-json/(.*)?\";s:33:\"index.php?rest_route=/$matches[1]\";s:47:\"category/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:42:\"category/(.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:23:\"category/(.+?)/embed/?$\";s:46:\"index.php?category_name=$matches[1]&embed=true\";s:35:\"category/(.+?)/page/?([0-9]{1,})/?$\";s:53:\"index.php?category_name=$matches[1]&paged=$matches[2]\";s:17:\"category/(.+?)/?$\";s:35:\"index.php?category_name=$matches[1]\";s:44:\"tag/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:39:\"tag/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:20:\"tag/([^/]+)/embed/?$\";s:36:\"index.php?tag=$matches[1]&embed=true\";s:32:\"tag/([^/]+)/page/?([0-9]{1,})/?$\";s:43:\"index.php?tag=$matches[1]&paged=$matches[2]\";s:14:\"tag/([^/]+)/?$\";s:25:\"index.php?tag=$matches[1]\";s:45:\"type/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?post_format=$matches[1]&feed=$matches[2]\";s:40:\"type/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?post_format=$matches[1]&feed=$matches[2]\";s:21:\"type/([^/]+)/embed/?$\";s:44:\"index.php?post_format=$matches[1]&embed=true\";s:33:\"type/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?post_format=$matches[1]&paged=$matches[2]\";s:15:\"type/([^/]+)/?$\";s:33:\"index.php?post_format=$matches[1]\";s:12:\"robots\\.txt$\";s:18:\"index.php?robots=1\";s:48:\".*wp-(atom|rdf|rss|rss2|feed|commentsrss2)\\.php$\";s:18:\"index.php?feed=old\";s:20:\".*wp-app\\.php(/.*)?$\";s:19:\"index.php?error=403\";s:18:\".*wp-register.php$\";s:23:\"index.php?register=true\";s:32:\"feed/(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:27:\"(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:8:\"embed/?$\";s:21:\"index.php?&embed=true\";s:20:\"page/?([0-9]{1,})/?$\";s:28:\"index.php?&paged=$matches[1]\";s:41:\"comments/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:36:\"comments/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:17:\"comments/embed/?$\";s:21:\"index.php?&embed=true\";s:44:\"search/(.+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:39:\"search/(.+)/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:20:\"search/(.+)/embed/?$\";s:34:\"index.php?s=$matches[1]&embed=true\";s:32:\"search/(.+)/page/?([0-9]{1,})/?$\";s:41:\"index.php?s=$matches[1]&paged=$matches[2]\";s:14:\"search/(.+)/?$\";s:23:\"index.php?s=$matches[1]\";s:47:\"author/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:42:\"author/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:23:\"author/([^/]+)/embed/?$\";s:44:\"index.php?author_name=$matches[1]&embed=true\";s:35:\"author/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?author_name=$matches[1]&paged=$matches[2]\";s:17:\"author/([^/]+)/?$\";s:33:\"index.php?author_name=$matches[1]\";s:69:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:64:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:45:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/embed/?$\";s:74:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&embed=true\";s:57:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&paged=$matches[4]\";s:39:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/?$\";s:63:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]\";s:56:\"([0-9]{4})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:51:\"([0-9]{4})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:32:\"([0-9]{4})/([0-9]{1,2})/embed/?$\";s:58:\"index.php?year=$matches[1]&monthnum=$matches[2]&embed=true\";s:44:\"([0-9]{4})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:65:\"index.php?year=$matches[1]&monthnum=$matches[2]&paged=$matches[3]\";s:26:\"([0-9]{4})/([0-9]{1,2})/?$\";s:47:\"index.php?year=$matches[1]&monthnum=$matches[2]\";s:43:\"([0-9]{4})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:38:\"([0-9]{4})/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:19:\"([0-9]{4})/embed/?$\";s:37:\"index.php?year=$matches[1]&embed=true\";s:31:\"([0-9]{4})/page/?([0-9]{1,})/?$\";s:44:\"index.php?year=$matches[1]&paged=$matches[2]\";s:13:\"([0-9]{4})/?$\";s:26:\"index.php?year=$matches[1]\";s:58:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:68:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:88:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:83:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:83:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:64:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:53:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/embed/?$\";s:91:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&embed=true\";s:57:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/trackback/?$\";s:85:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&tb=1\";s:77:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:97:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&feed=$matches[5]\";s:72:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:97:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&feed=$matches[5]\";s:65:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/page/?([0-9]{1,})/?$\";s:98:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&paged=$matches[5]\";s:72:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/comment-page-([0-9]{1,})/?$\";s:98:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&cpage=$matches[5]\";s:61:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)(?:/([0-9]+))?/?$\";s:97:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&page=$matches[5]\";s:47:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:57:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:77:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:72:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:72:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:53:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:64:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/comment-page-([0-9]{1,})/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&cpage=$matches[4]\";s:51:\"([0-9]{4})/([0-9]{1,2})/comment-page-([0-9]{1,})/?$\";s:65:\"index.php?year=$matches[1]&monthnum=$matches[2]&cpage=$matches[3]\";s:38:\"([0-9]{4})/comment-page-([0-9]{1,})/?$\";s:44:\"index.php?year=$matches[1]&cpage=$matches[2]\";s:27:\".?.+?/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:37:\".?.+?/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:57:\".?.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\".?.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\".?.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:33:\".?.+?/attachment/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:16:\"(.?.+?)/embed/?$\";s:41:\"index.php?pagename=$matches[1]&embed=true\";s:20:\"(.?.+?)/trackback/?$\";s:35:\"index.php?pagename=$matches[1]&tb=1\";s:40:\"(.?.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:35:\"(.?.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:28:\"(.?.+?)/page/?([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&paged=$matches[2]\";s:35:\"(.?.+?)/comment-page-([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&cpage=$matches[2]\";s:24:\"(.?.+?)(?:/([0-9]+))?/?$\";s:47:\"index.php?pagename=$matches[1]&page=$matches[2]\";s:17:\"^/superpwa-sw.js$\";s:26:\"index.php?superpwa-sw.js=1\";s:25:\"^/superpwa-manifest.json$\";s:34:\"index.php?superpwa-manifest.json=1\";}','yes'),(30,'hack_file','0','yes'),(31,'blog_charset','UTF-8','yes'),(32,'moderation_keys','','no'),(33,'active_plugins','a:8:{i:0;s:33:\"classic-editor/classic-editor.php\";i:1;s:23:\"enlighter/Enlighter.php\";i:2;s:35:\"jekyll-exporter/jekyll-exporter.php\";i:3;s:23:\"loco-translate/loco.php\";i:4;s:39:\"simple-custom-css/simple-custom-css.php\";i:5;s:24:\"simple-lightbox/main.php\";i:6;s:39:\"super-progressive-web-apps/superpwa.php\";i:7;s:34:\"video-background/candide-vidbg.php\";}','yes'),(34,'category_base','','yes'),(35,'ping_sites','http://rpc.pingomatic.com/','yes'),(36,'comment_max_links','2','yes'),(37,'gmt_offset','','yes'),(38,'default_email_category','1','yes'),(39,'recently_edited','a:4:{i:0;s:48:\"/var/www/html/wp-content/themes/purus/header.php\";i:2;s:48:\"/var/www/html/wp-content/themes/purus/footer.php\";i:3;s:47:\"/var/www/html/wp-content/themes/purus/style.css\";i:4;s:0:\"\";}','no'),(40,'template','cocoa','yes'),(41,'stylesheet','cocoa','yes'),(42,'comment_whitelist','1','yes'),(43,'blacklist_keys','','no'),(44,'comment_registration','0','yes'),(45,'html_type','text/html','yes'),(46,'use_trackback','0','yes'),(47,'default_role','subscriber','yes'),(48,'db_version','44719','yes'),(49,'uploads_use_yearmonth_folders','1','yes'),(50,'upload_path','','yes'),(51,'blog_public','1','yes'),(52,'default_link_category','2','yes'),(53,'show_on_front','posts','yes'),(54,'tag_base','','yes'),(55,'show_avatars','1','yes'),(56,'avatar_rating','G','yes'),(57,'upload_url_path','','yes'),(58,'thumbnail_size_w','150','yes'),(59,'thumbnail_size_h','150','yes'),(60,'thumbnail_crop','1','yes'),(61,'medium_size_w','300','yes'),(62,'medium_size_h','300','yes'),(63,'avatar_default','mystery','yes'),(64,'large_size_w','1024','yes'),(65,'large_size_h','1024','yes'),(66,'image_default_link_type','none','yes'),(67,'image_default_size','','yes'),(68,'image_default_align','','yes'),(69,'close_comments_for_old_posts','0','yes'),(70,'close_comments_days_old','14','yes'),(71,'thread_comments','1','yes'),(72,'thread_comments_depth','5','yes'),(73,'page_comments','0','yes'),(74,'comments_per_page','50','yes'),(75,'default_comments_page','newest','yes'),(76,'comment_order','asc','yes'),(77,'sticky_posts','a:0:{}','yes'),(78,'widget_categories','a:2:{i:2;a:4:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:12:\"hierarchical\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes'),(79,'widget_text','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(80,'widget_rss','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(81,'uninstall_plugins','a:3:{s:39:\"simple-custom-css/simple-custom-css.php\";s:15:\"sccss_uninstall\";s:33:\"classic-editor/classic-editor.php\";a:2:{i:0;s:14:\"Classic_Editor\";i:1;s:9:\"uninstall\";}s:46:\"under-construction-page/under-construction.php\";a:2:{i:0;s:3:\"UCP\";i:1;s:9:\"uninstall\";}}','no'),(82,'timezone_string','Europe/Berlin','yes'),(83,'page_for_posts','0','yes'),(84,'page_on_front','0','yes'),(85,'default_post_format','0','yes'),(86,'link_manager_enabled','0','yes'),(87,'finished_splitting_shared_terms','1','yes'),(88,'site_icon','74','yes'),(89,'medium_large_size_w','768','yes'),(90,'medium_large_size_h','0','yes'),(91,'wp_page_for_privacy_policy','3','yes'),(92,'show_comments_cookies_opt_in','0','yes'),(93,'initial_db_version','43764','yes'),(94,'wp_user_roles','a:6:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:62:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;s:11:\"update_core\";b:1;s:10:\"list_users\";b:1;s:12:\"remove_users\";b:1;s:13:\"promote_users\";b:1;s:18:\"edit_theme_options\";b:1;s:13:\"delete_themes\";b:1;s:6:\"export\";b:1;s:10:\"loco_admin\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:34:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:10:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:5:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}s:10:\"translator\";a:2:{s:4:\"name\";s:10:\"Translator\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:10:\"loco_admin\";b:1;}}}','yes'),(95,'fresh_site','0','yes'),(96,'WPLANG','','yes'),(97,'widget_search','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(98,'widget_recent-posts','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(99,'widget_recent-comments','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(100,'widget_archives','a:2:{i:2;a:3:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes'),(101,'widget_meta','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(102,'sidebars_widgets','a:3:{s:19:\"wp_inactive_widgets\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}s:13:\"array_version\";i:3;s:14:\"header-sidebar\";a:1:{i:0;s:13:\"cocoa_about-3\";}}','yes'),(103,'widget_pages','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(104,'widget_calendar','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(105,'widget_media_audio','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(106,'widget_media_image','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(107,'widget_media_gallery','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(108,'widget_media_video','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(109,'widget_tag_cloud','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(110,'widget_nav_menu','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(111,'widget_custom_html','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(112,'cron','a:5:{i:1586199343;a:1:{s:34:\"wp_privacy_delete_old_export_files\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:6:\"hourly\";s:4:\"args\";a:0:{}s:8:\"interval\";i:3600;}}}i:1586213743;a:3:{s:16:\"wp_version_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:17:\"wp_update_plugins\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:16:\"wp_update_themes\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1586256959;a:2:{s:19:\"wp_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}s:25:\"delete_expired_transients\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1586268262;a:1:{s:30:\"wp_scheduled_auto_draft_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}s:7:\"version\";i:2;}','yes'),(113,'theme_mods_twentynineteen','a:2:{s:18:\"custom_css_post_id\";i:-1;s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1554828058;s:4:\"data\";a:2:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}}}}','yes'),(143,'auto_core_update_notified','a:4:{s:4:\"type\";s:7:\"success\";s:5:\"email\";s:14:\"hello@rike.dev\";s:7:\"version\";s:5:\"5.1.4\";s:9:\"timestamp\";i:1576235746;}','no'),(146,'db_upgraded','','yes'),(151,'can_compress_scripts','0','no'),(163,'recently_activated','a:0:{}','yes'),(194,'enlighter-settingsupdate-hash','646fb1f6c1','yes'),(195,'enlighter-version','3.9.0','yes'),(271,'fs_active_plugins','O:8:\"stdClass\":2:{s:7:\"plugins\";a:1:{s:45:\"../themes/purus/vendor/freemius/wordpress-sdk\";O:8:\"stdClass\":4:{s:7:\"version\";s:5:\"1.2.2\";s:4:\"type\";s:5:\"theme\";s:9:\"timestamp\";i:1554828005;s:11:\"plugin_path\";s:8:\"freemius\";}}s:6:\"newest\";O:8:\"stdClass\":5:{s:11:\"plugin_path\";s:8:\"freemius\";s:8:\"sdk_path\";s:45:\"../themes/purus/vendor/freemius/wordpress-sdk\";s:7:\"version\";s:5:\"1.2.2\";s:13:\"in_activation\";b:1;s:9:\"timestamp\";i:1554828005;}}','yes'),(272,'fs_debug_mode','','yes'),(273,'fs_accounts','a:6:{s:21:\"id_slug_type_path_map\";a:1:{i:461;a:3:{s:4:\"slug\";s:5:\"purus\";s:4:\"type\";s:5:\"theme\";s:4:\"path\";s:51:\"/var/www/html/wp-content/themes/purus/functions.php\";}}s:10:\"theme_data\";a:1:{s:5:\"purus\";a:17:{s:16:\"plugin_main_file\";O:8:\"stdClass\":1:{s:4:\"path\";s:51:\"/var/www/html/wp-content/themes/purus/functions.php\";}s:17:\"install_timestamp\";i:1554828005;s:17:\"was_plugin_loaded\";b:1;s:21:\"is_plugin_new_install\";b:0;s:16:\"sdk_last_version\";N;s:11:\"sdk_version\";s:5:\"1.2.2\";s:16:\"sdk_upgrade_mode\";b:1;s:18:\"sdk_downgrade_mode\";b:0;s:19:\"plugin_last_version\";N;s:14:\"plugin_version\";s:5:\"1.2.2\";s:19:\"plugin_upgrade_mode\";b:1;s:21:\"plugin_downgrade_mode\";b:0;s:17:\"connectivity_test\";a:6:{s:12:\"is_connected\";b:1;s:4:\"host\";s:8:\"rike.dev\";s:9:\"server_ip\";s:11:\"89.14.16.34\";s:9:\"is_active\";b:1;s:9:\"timestamp\";i:1554828005;s:7:\"version\";s:5:\"1.2.2\";}s:15:\"prev_is_premium\";b:0;s:18:\"sticky_optin_added\";b:1;s:14:\"previous_theme\";s:14:\"twentynineteen\";s:12:\"is_anonymous\";a:3:{s:2:\"is\";b:1;s:9:\"timestamp\";i:1554828063;s:7:\"version\";s:5:\"1.2.2\";}}}s:13:\"file_slug_map\";a:1:{s:5:\"purus\";s:5:\"purus\";}s:6:\"themes\";a:1:{s:5:\"purus\";O:9:\"FS_Plugin\":16:{s:16:\"parent_plugin_id\";N;s:5:\"title\";s:5:\"Purus\";s:4:\"slug\";s:5:\"purus\";s:4:\"file\";s:5:\"purus\";s:7:\"version\";s:5:\"1.2.2\";s:11:\"auto_update\";N;s:4:\"info\";N;s:10:\"is_premium\";b:0;s:7:\"is_live\";b:1;s:4:\"type\";s:5:\"theme\";s:10:\"public_key\";s:32:\"pk_fd500ac141f6c767b22b4eaa1e8d5\";s:10:\"secret_key\";N;s:2:\"id\";s:3:\"461\";s:7:\"updated\";N;s:7:\"created\";N;s:22:\"\0FS_Entity\0_is_updated\";b:0;}}s:9:\"unique_id\";s:32:\"ef34eefe1feed0ed3984acd56eee9b76\";s:13:\"admin_notices\";a:1:{s:11:\"purus:theme\";a:0:{}}}','yes'),(276,'theme_mods_purus','a:4:{s:18:\"custom_css_post_id\";i:-1;s:18:\"nav_menu_locations\";a:1:{s:9:\"main-menu\";i:4;}s:11:\"custom_logo\";s:0:\"\";s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1554966366;s:4:\"data\";a:1:{s:19:\"wp_inactive_widgets\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}}}}','yes'),(282,'current_theme','Cocoa','yes'),(283,'theme_switched','','yes'),(284,'fs_api_cache','a:0:{}','yes'),(343,'bsr_data','a:8:{s:13:\"select_tables\";a:12:{i:0;s:14:\"wp_commentmeta\";i:1;s:11:\"wp_comments\";i:2;s:8:\"wp_links\";i:3;s:10:\"wp_options\";i:4;s:11:\"wp_postmeta\";i:5;s:8:\"wp_posts\";i:6;s:21:\"wp_term_relationships\";i:7;s:16:\"wp_term_taxonomy\";i:8;s:11:\"wp_termmeta\";i:9;s:8:\"wp_terms\";i:10;s:11:\"wp_usermeta\";i:11;s:8:\"wp_users\";}s:16:\"case_insensitive\";s:3:\"off\";s:13:\"replace_guids\";s:3:\"off\";s:7:\"dry_run\";s:3:\"off\";s:10:\"search_for\";s:12:\"www.rike.dev\";s:12:\"replace_with\";s:8:\"rike.dev\";s:15:\"completed_pages\";i:12;s:11:\"total_pages\";i:12;}','yes'),(352,'nav_menu_options','a:2:{i:0;b:0;s:8:\"auto_add\";a:0:{}}','yes'),(409,'sccss_settings','a:1:{s:13:\"sccss-content\";s:287:\"/* Füge hier Dein eigenes CSS ein */\n.imagedropshadow {\n    padding: 5px;\n    border: solid 1px #EFEFEF;\n}\na:hover img.imagedropshadow {\n    border: solid 1px #CCC;\n    -moz-box-shadow: 1px 1px 5px #999;\n    -webkit-box-shadow: 1px 1px 5px #999;\n        box-shadow: 1px 1px 5px #999;\n}\n\";}','yes'),(429,'slb_version','2.7.1','yes'),(430,'slb_options','a:27:{s:7:\"enabled\";b:1;s:12:\"enabled_home\";b:1;s:12:\"enabled_post\";b:1;s:12:\"enabled_page\";b:1;s:15:\"enabled_archive\";b:1;s:14:\"enabled_widget\";b:0;s:12:\"enabled_menu\";b:0;s:11:\"group_links\";b:1;s:10:\"group_post\";b:1;s:13:\"group_gallery\";b:0;s:12:\"group_widget\";b:0;s:10:\"group_menu\";b:0;s:10:\"ui_autofit\";b:1;s:10:\"ui_animate\";b:1;s:19:\"slideshow_autostart\";b:1;s:18:\"slideshow_duration\";s:1:\"6\";s:10:\"group_loop\";b:1;s:18:\"ui_overlay_opacity\";s:3:\"0.8\";s:16:\"ui_title_default\";b:0;s:11:\"txt_loading\";s:7:\"Loading\";s:9:\"txt_close\";s:5:\"Close\";s:12:\"txt_nav_next\";s:4:\"Next\";s:12:\"txt_nav_prev\";s:8:\"Previous\";s:19:\"txt_slideshow_start\";s:15:\"Start slideshow\";s:18:\"txt_slideshow_stop\";s:14:\"Stop slideshow\";s:16:\"txt_group_status\";s:25:\"Item %current% of %total%\";s:13:\"theme_default\";s:11:\"slb_default\";}','yes'),(708,'widget_cocoa_quote','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(709,'widget_cocoa_about','a:2:{s:12:\"_multiwidget\";i:1;i:3;a:7:{s:5:\"title\";s:5:\"about\";s:8:\"imageurl\";s:26:\"\"/wp-content/img/rike.JPG\"\";s:10:\"imagewidth\";s:3:\"600\";s:11:\"imageheight\";s:3:\"793\";s:15:\"aboutimgcaption\";s:250:\"website: <a href=\"https://ueberdiespree.de\">ueberdiespree.de</a>\r\ne-mail: hello@rike.dev\r\ntwitter: @frankanka\r\ngithub: <a href=\"https://github.com/gitfrosh\">gitfrosh</a>\r\ninstagram: <a href=\"https://www.instagram.com/ueberdiespree/\">ueberdiespree</a>\";s:11:\"aboutslogan\";s:152:\"Hi, I\'m ulrike (or just <em>rike</em>) and this is my blog where I post stuff related to <em>web development</em> and beyond both in English and German.\";s:9:\"abouttext\";s:0:\"\";}}','yes'),(710,'widget_cocoa_recentposts','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(711,'theme_mods_cocoa','a:5:{s:18:\"custom_css_post_id\";i:-1;s:13:\"menubtn_color\";s:7:\"#e44249\";s:18:\"nav_menu_locations\";a:1:{s:7:\"primary\";i:4;}s:10:\"link_color\";s:7:\"#e44249\";s:16:\"header_textcolor\";s:6:\"000000\";}','yes'),(724,'ftp_credentials','a:3:{s:8:\"hostname\";s:8:\"rike.dev\";s:8:\"username\";s:4:\"rike\";s:15:\"connection_type\";s:4:\"ftps\";}','yes'),(733,'superpwa_settings','a:13:{s:8:\"app_name\";s:8:\"rike.dev\";s:14:\"app_short_name\";s:8:\"rike.dev\";s:11:\"description\";s:100:\"find here papers, tutorials and more texts I wrote for the web and other occasions (mostly German!).\";s:4:\"icon\";s:85:\"https://rike.dev/wp-content/plugins/super-progressive-web-apps/public/images/logo.png\";s:11:\"splash_icon\";s:93:\"https://rike.dev/wp-content/plugins/super-progressive-web-apps/public/images/logo-512x512.png\";s:16:\"background_color\";s:7:\"#D5E0EB\";s:11:\"theme_color\";s:7:\"#D5E0EB\";s:9:\"start_url\";s:1:\"0\";s:12:\"offline_page\";s:1:\"0\";s:11:\"orientation\";s:1:\"1\";s:7:\"display\";s:1:\"1\";s:12:\"is_static_sw\";i:0;s:18:\"is_static_manifest\";i:0;}','yes'),(734,'superpwa_version','2.0.2','yes'),(800,'theme_switch_menu_locations','a:1:{s:9:\"main-menu\";i:4;}','yes'),(801,'theme_switched_via_customizer','','yes'),(802,'customize_stashed_theme_mods','a:0:{}','no'),(819,'loco_settings','a:4:{s:1:\"c\";s:18:\"Loco_data_Settings\";s:1:\"v\";i:0;s:1:\"d\";a:13:{s:7:\"version\";s:5:\"2.2.2\";s:8:\"gen_hash\";b:0;s:9:\"use_fuzzy\";b:1;s:11:\"num_backups\";i:1;s:9:\"pot_alias\";a:3:{i:0;s:10:\"default.po\";i:1;s:8:\"en_US.po\";i:2;s:5:\"en.po\";}s:9:\"php_alias\";a:2:{i:0;s:3:\"php\";i:1;s:4:\"twig\";}s:9:\"jsx_alias\";a:0:{}s:10:\"fs_persist\";b:0;s:10:\"fs_protect\";i:1;s:12:\"max_php_size\";s:4:\"100K\";s:11:\"po_utf8_bom\";b:0;s:8:\"po_width\";s:2:\"79\";s:10:\"jed_pretty\";b:0;}s:1:\"t\";i:1554966752;}','yes'),(860,'loco_recent','a:4:{s:1:\"c\";s:21:\"Loco_data_RecentItems\";s:1:\"v\";i:0;s:1:\"d\";a:1:{s:6:\"bundle\";a:1:{s:11:\"theme.cocoa\";i:1554968406;}}s:1:\"t\";i:1554968406;}','no'),(885,'new_admin_email','hello@rike.dev','yes'),(1583,'widget_cleantalk_widget','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(5612,'vidbgpro-notice-dismissed','1','yes'),(7150,'category_children','a:0:{}','yes'),(13934,'_site_transient_update_core','O:8:\"stdClass\":4:{s:7:\"updates\";a:4:{i:0;O:8:\"stdClass\":10:{s:8:\"response\";s:7:\"upgrade\";s:8:\"download\";s:57:\"https://downloads.wordpress.org/release/wordpress-5.4.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:57:\"https://downloads.wordpress.org/release/wordpress-5.4.zip\";s:10:\"no_content\";s:68:\"https://downloads.wordpress.org/release/wordpress-5.4-no-content.zip\";s:11:\"new_bundled\";s:69:\"https://downloads.wordpress.org/release/wordpress-5.4-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:3:\"5.4\";s:7:\"version\";s:3:\"5.4\";s:11:\"php_version\";s:6:\"5.6.20\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"5.3\";s:15:\"partial_version\";s:0:\"\";}i:1;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:57:\"https://downloads.wordpress.org/release/wordpress-5.4.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:57:\"https://downloads.wordpress.org/release/wordpress-5.4.zip\";s:10:\"no_content\";s:68:\"https://downloads.wordpress.org/release/wordpress-5.4-no-content.zip\";s:11:\"new_bundled\";s:69:\"https://downloads.wordpress.org/release/wordpress-5.4-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:3:\"5.4\";s:7:\"version\";s:3:\"5.4\";s:11:\"php_version\";s:6:\"5.6.20\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"5.3\";s:15:\"partial_version\";s:0:\"\";s:9:\"new_files\";s:1:\"1\";}i:2;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-5.3.2.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-5.3.2.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-5.3.2-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-5.3.2-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"5.3.2\";s:7:\"version\";s:5:\"5.3.2\";s:11:\"php_version\";s:6:\"5.6.20\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"5.3\";s:15:\"partial_version\";s:0:\"\";s:9:\"new_files\";s:1:\"1\";}i:3;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-5.2.5.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-5.2.5.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-5.2.5-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-5.2.5-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"5.2.5\";s:7:\"version\";s:5:\"5.2.5\";s:11:\"php_version\";s:6:\"5.6.20\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"5.3\";s:15:\"partial_version\";s:0:\"\";s:9:\"new_files\";s:1:\"1\";}}s:12:\"last_checked\";i:1586170636;s:15:\"version_checked\";s:5:\"5.1.4\";s:12:\"translations\";a:0:{}}','no'),(18597,'_transient_timeout_enlighter_userthemes','1586251760','no'),(18598,'_transient_enlighter_userthemes','a:0:{}','no'),(18602,'_site_transient_timeout_theme_roots','1586172436','no'),(18603,'_site_transient_theme_roots','a:5:{s:5:\"cocoa\";s:7:\"/themes\";s:5:\"purus\";s:7:\"/themes\";s:14:\"twentynineteen\";s:7:\"/themes\";s:15:\"twentyseventeen\";s:7:\"/themes\";s:13:\"twentysixteen\";s:7:\"/themes\";}','no'),(18604,'_site_transient_update_themes','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1586170637;s:7:\"checked\";a:5:{s:5:\"cocoa\";s:5:\"1.0.8\";s:5:\"purus\";s:5:\"1.2.2\";s:14:\"twentynineteen\";s:3:\"1.2\";s:15:\"twentyseventeen\";s:3:\"2.0\";s:13:\"twentysixteen\";s:3:\"1.8\";}s:8:\"response\";a:3:{s:14:\"twentynineteen\";a:6:{s:5:\"theme\";s:14:\"twentynineteen\";s:11:\"new_version\";s:3:\"1.5\";s:3:\"url\";s:44:\"https://wordpress.org/themes/twentynineteen/\";s:7:\"package\";s:60:\"https://downloads.wordpress.org/theme/twentynineteen.1.5.zip\";s:8:\"requires\";s:5:\"4.9.6\";s:12:\"requires_php\";s:5:\"5.2.4\";}s:15:\"twentyseventeen\";a:6:{s:5:\"theme\";s:15:\"twentyseventeen\";s:11:\"new_version\";s:3:\"2.3\";s:3:\"url\";s:45:\"https://wordpress.org/themes/twentyseventeen/\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/theme/twentyseventeen.2.3.zip\";s:8:\"requires\";s:3:\"4.7\";s:12:\"requires_php\";s:5:\"5.2.4\";}s:13:\"twentysixteen\";a:6:{s:5:\"theme\";s:13:\"twentysixteen\";s:11:\"new_version\";s:3:\"2.1\";s:3:\"url\";s:43:\"https://wordpress.org/themes/twentysixteen/\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/theme/twentysixteen.2.1.zip\";s:8:\"requires\";s:3:\"4.4\";s:12:\"requires_php\";s:5:\"5.2.4\";}}s:12:\"translations\";a:0:{}}','no'),(18605,'_site_transient_update_plugins','O:8:\"stdClass\":5:{s:12:\"last_checked\";i:1586170638;s:7:\"checked\";a:9:{s:19:\"akismet/akismet.php\";s:3:\"4.1\";s:33:\"classic-editor/classic-editor.php\";s:3:\"1.4\";s:23:\"enlighter/Enlighter.php\";s:5:\"3.9.0\";s:23:\"loco-translate/loco.php\";s:5:\"2.2.2\";s:39:\"simple-custom-css/simple-custom-css.php\";s:5:\"4.0.2\";s:24:\"simple-lightbox/main.php\";s:5:\"2.7.1\";s:39:\"super-progressive-web-apps/superpwa.php\";s:5:\"2.0.2\";s:34:\"video-background/candide-vidbg.php\";s:5:\"2.7.1\";s:35:\"jekyll-exporter/jekyll-exporter.php\";s:5:\"2.3.0\";}s:8:\"response\";a:5:{s:19:\"akismet/akismet.php\";O:8:\"stdClass\":12:{s:2:\"id\";s:21:\"w.org/plugins/akismet\";s:4:\"slug\";s:7:\"akismet\";s:6:\"plugin\";s:19:\"akismet/akismet.php\";s:11:\"new_version\";s:5:\"4.1.4\";s:3:\"url\";s:38:\"https://wordpress.org/plugins/akismet/\";s:7:\"package\";s:56:\"https://downloads.wordpress.org/plugin/akismet.4.1.4.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:59:\"https://ps.w.org/akismet/assets/icon-256x256.png?rev=969272\";s:2:\"1x\";s:59:\"https://ps.w.org/akismet/assets/icon-128x128.png?rev=969272\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:61:\"https://ps.w.org/akismet/assets/banner-772x250.jpg?rev=479904\";}s:11:\"banners_rtl\";a:0:{}s:6:\"tested\";s:3:\"5.4\";s:12:\"requires_php\";b:0;s:13:\"compatibility\";O:8:\"stdClass\":0:{}}s:33:\"classic-editor/classic-editor.php\";O:8:\"stdClass\":12:{s:2:\"id\";s:28:\"w.org/plugins/classic-editor\";s:4:\"slug\";s:14:\"classic-editor\";s:6:\"plugin\";s:33:\"classic-editor/classic-editor.php\";s:11:\"new_version\";s:3:\"1.5\";s:3:\"url\";s:45:\"https://wordpress.org/plugins/classic-editor/\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/plugin/classic-editor.1.5.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:67:\"https://ps.w.org/classic-editor/assets/icon-256x256.png?rev=1998671\";s:2:\"1x\";s:67:\"https://ps.w.org/classic-editor/assets/icon-128x128.png?rev=1998671\";}s:7:\"banners\";a:2:{s:2:\"2x\";s:70:\"https://ps.w.org/classic-editor/assets/banner-1544x500.png?rev=1998671\";s:2:\"1x\";s:69:\"https://ps.w.org/classic-editor/assets/banner-772x250.png?rev=1998676\";}s:11:\"banners_rtl\";a:0:{}s:6:\"tested\";s:5:\"5.3.2\";s:12:\"requires_php\";s:5:\"5.2.4\";s:13:\"compatibility\";O:8:\"stdClass\":0:{}}s:23:\"enlighter/Enlighter.php\";O:8:\"stdClass\":12:{s:2:\"id\";s:23:\"w.org/plugins/enlighter\";s:4:\"slug\";s:9:\"enlighter\";s:6:\"plugin\";s:23:\"enlighter/Enlighter.php\";s:11:\"new_version\";s:6:\"3.11.0\";s:3:\"url\";s:40:\"https://wordpress.org/plugins/enlighter/\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/plugin/enlighter.3.11.0.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:62:\"https://ps.w.org/enlighter/assets/icon-256x256.png?rev=1215872\";s:2:\"1x\";s:62:\"https://ps.w.org/enlighter/assets/icon-128x128.png?rev=1215872\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:64:\"https://ps.w.org/enlighter/assets/banner-772x250.png?rev=1396006\";}s:11:\"banners_rtl\";a:0:{}s:6:\"tested\";s:3:\"5.4\";s:12:\"requires_php\";b:0;s:13:\"compatibility\";O:8:\"stdClass\":0:{}}s:23:\"loco-translate/loco.php\";O:8:\"stdClass\":13:{s:2:\"id\";s:28:\"w.org/plugins/loco-translate\";s:4:\"slug\";s:14:\"loco-translate\";s:6:\"plugin\";s:23:\"loco-translate/loco.php\";s:11:\"new_version\";s:5:\"2.3.2\";s:3:\"url\";s:45:\"https://wordpress.org/plugins/loco-translate/\";s:7:\"package\";s:63:\"https://downloads.wordpress.org/plugin/loco-translate.2.3.2.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:67:\"https://ps.w.org/loco-translate/assets/icon-256x256.png?rev=1000676\";s:2:\"1x\";s:67:\"https://ps.w.org/loco-translate/assets/icon-128x128.png?rev=1000676\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:68:\"https://ps.w.org/loco-translate/assets/banner-772x250.jpg?rev=745046\";}s:11:\"banners_rtl\";a:0:{}s:14:\"upgrade_notice\";s:54:\"<ul>\n<li>Various bug fixes and improvements</li>\n</ul>\";s:6:\"tested\";s:3:\"5.4\";s:12:\"requires_php\";s:5:\"5.2.4\";s:13:\"compatibility\";O:8:\"stdClass\":0:{}}s:39:\"simple-custom-css/simple-custom-css.php\";O:8:\"stdClass\":12:{s:2:\"id\";s:31:\"w.org/plugins/simple-custom-css\";s:4:\"slug\";s:17:\"simple-custom-css\";s:6:\"plugin\";s:39:\"simple-custom-css/simple-custom-css.php\";s:11:\"new_version\";s:5:\"4.0.3\";s:3:\"url\";s:48:\"https://wordpress.org/plugins/simple-custom-css/\";s:7:\"package\";s:60:\"https://downloads.wordpress.org/plugin/simple-custom-css.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:70:\"https://ps.w.org/simple-custom-css/assets/icon-256x256.jpg?rev=1819543\";s:2:\"1x\";s:70:\"https://ps.w.org/simple-custom-css/assets/icon-128x128.jpg?rev=1819543\";}s:7:\"banners\";a:2:{s:2:\"2x\";s:73:\"https://ps.w.org/simple-custom-css/assets/banner-1544x500.jpg?rev=1819543\";s:2:\"1x\";s:72:\"https://ps.w.org/simple-custom-css/assets/banner-772x250.jpg?rev=1819543\";}s:11:\"banners_rtl\";a:0:{}s:6:\"tested\";s:5:\"5.3.2\";s:12:\"requires_php\";b:0;s:13:\"compatibility\";O:8:\"stdClass\":0:{}}}s:12:\"translations\";a:0:{}s:9:\"no_update\";a:4:{s:24:\"simple-lightbox/main.php\";O:8:\"stdClass\":12:{s:2:\"id\";s:29:\"w.org/plugins/simple-lightbox\";s:4:\"slug\";s:15:\"simple-lightbox\";s:6:\"plugin\";s:24:\"simple-lightbox/main.php\";s:11:\"new_version\";s:5:\"2.8.1\";s:3:\"url\";s:46:\"https://wordpress.org/plugins/simple-lightbox/\";s:7:\"package\";s:58:\"https://downloads.wordpress.org/plugin/simple-lightbox.zip\";s:5:\"icons\";a:1:{s:7:\"default\";s:59:\"https://s.w.org/plugins/geopattern-icon/simple-lightbox.svg\";}s:7:\"banners\";a:0:{}s:11:\"banners_rtl\";a:0:{}s:6:\"tested\";s:3:\"5.4\";s:12:\"requires_php\";s:6:\"5.6.20\";s:13:\"compatibility\";a:0:{}}s:39:\"super-progressive-web-apps/superpwa.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:40:\"w.org/plugins/super-progressive-web-apps\";s:4:\"slug\";s:26:\"super-progressive-web-apps\";s:6:\"plugin\";s:39:\"super-progressive-web-apps/superpwa.php\";s:11:\"new_version\";s:5:\"2.0.2\";s:3:\"url\";s:57:\"https://wordpress.org/plugins/super-progressive-web-apps/\";s:7:\"package\";s:69:\"https://downloads.wordpress.org/plugin/super-progressive-web-apps.zip\";s:5:\"icons\";a:1:{s:2:\"1x\";s:79:\"https://ps.w.org/super-progressive-web-apps/assets/icon-128x128.png?rev=1842063\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:81:\"https://ps.w.org/super-progressive-web-apps/assets/banner-772x250.png?rev=1867897\";}s:11:\"banners_rtl\";a:0:{}}s:34:\"video-background/candide-vidbg.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:30:\"w.org/plugins/video-background\";s:4:\"slug\";s:16:\"video-background\";s:6:\"plugin\";s:34:\"video-background/candide-vidbg.php\";s:11:\"new_version\";s:5:\"2.7.1\";s:3:\"url\";s:47:\"https://wordpress.org/plugins/video-background/\";s:7:\"package\";s:65:\"https://downloads.wordpress.org/plugin/video-background.2.7.1.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:69:\"https://ps.w.org/video-background/assets/icon-256x256.png?rev=2146487\";s:2:\"1x\";s:69:\"https://ps.w.org/video-background/assets/icon-128x128.png?rev=2146487\";}s:7:\"banners\";a:2:{s:2:\"2x\";s:72:\"https://ps.w.org/video-background/assets/banner-1544x500.png?rev=2146487\";s:2:\"1x\";s:71:\"https://ps.w.org/video-background/assets/banner-772x250.png?rev=2146487\";}s:11:\"banners_rtl\";a:0:{}}s:35:\"jekyll-exporter/jekyll-exporter.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:29:\"w.org/plugins/jekyll-exporter\";s:4:\"slug\";s:15:\"jekyll-exporter\";s:6:\"plugin\";s:35:\"jekyll-exporter/jekyll-exporter.php\";s:11:\"new_version\";s:5:\"2.3.0\";s:3:\"url\";s:46:\"https://wordpress.org/plugins/jekyll-exporter/\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/plugin/jekyll-exporter.2.3.0.zip\";s:5:\"icons\";a:1:{s:7:\"default\";s:66:\"https://s.w.org/plugins/geopattern-icon/jekyll-exporter_ffd4cc.svg\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:70:\"https://ps.w.org/jekyll-exporter/assets/banner-772x250.png?rev=1043570\";}s:11:\"banners_rtl\";a:0:{}}}}','no');
/*!40000 ALTER TABLE `wp_options` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_postmeta`
--

DROP TABLE IF EXISTS `wp_postmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_postmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_520_ci,
  PRIMARY KEY (`meta_id`),
  KEY `post_id` (`post_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB AUTO_INCREMENT=588 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_postmeta`
--

LOCK TABLES `wp_postmeta` WRITE;
/*!40000 ALTER TABLE `wp_postmeta` DISABLE KEYS */;
INSERT INTO `wp_postmeta` VALUES (1,2,'_wp_page_template','default'),(2,3,'_wp_page_template','default'),(3,5,'_edit_lock','1584176484:1'),(6,5,'_wp_old_date','2019-04-09'),(7,7,'_edit_lock','1584256738:1'),(10,7,'_wp_old_date','2019-04-09'),(15,10,'_edit_lock','1554885834:1'),(18,10,'_wp_old_date','2019-04-09'),(19,12,'_edit_lock','1560967902:1'),(22,12,'_wp_old_date','2019-04-09'),(23,14,'_wp_attached_file','2017/07/1.png'),(24,14,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:569;s:6:\"height\";i:125;s:4:\"file\";s:13:\"2017/07/1.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:13:\"1-150x125.png\";s:5:\"width\";i:150;s:6:\"height\";i:125;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:12:\"1-300x66.png\";s:5:\"width\";i:300;s:6:\"height\";i:66;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(25,14,'_wp_attachment_image_alt','Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.'),(26,15,'_wp_attached_file','2017/07/2.png'),(27,15,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:549;s:6:\"height\";i:112;s:4:\"file\";s:13:\"2017/07/2.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:13:\"2-150x112.png\";s:5:\"width\";i:150;s:6:\"height\";i:112;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:12:\"2-300x61.png\";s:5:\"width\";i:300;s:6:\"height\";i:61;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(28,15,'_wp_attachment_image_alt','Dieses Windows-System hat leider noch keine Python-Installation vorliegen.'),(29,16,'_wp_attached_file','2017/07/3.png'),(30,16,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1219;s:6:\"height\";i:503;s:4:\"file\";s:13:\"2017/07/3.png\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:13:\"3-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:13:\"3-300x124.png\";s:5:\"width\";i:300;s:6:\"height\";i:124;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:13:\"3-768x317.png\";s:5:\"width\";i:768;s:6:\"height\";i:317;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:14:\"3-1024x423.png\";s:5:\"width\";i:1024;s:6:\"height\";i:423;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(31,16,'_wp_attachment_image_alt','Python Download'),(32,17,'_wp_attached_file','2017/07/4.png'),(33,17,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:675;s:6:\"height\";i:419;s:4:\"file\";s:13:\"2017/07/4.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:13:\"4-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:13:\"4-300x186.png\";s:5:\"width\";i:300;s:6:\"height\";i:186;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(34,17,'_wp_attachment_image_alt','Python Installation'),(39,20,'_edit_lock','1560937671:1'),(40,21,'_wp_attached_file','2019/04/5.png'),(41,21,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:445;s:6:\"height\";i:207;s:4:\"file\";s:13:\"2019/04/5.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:13:\"5-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:13:\"5-300x140.png\";s:5:\"width\";i:300;s:6:\"height\";i:140;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(42,21,'_wp_attachment_image_alt','\"Hello World\" im Browser unter der lokalen URL http://127.0.0.1:8000/'),(45,20,'_wp_old_date','2019-04-09'),(48,24,'_edit_lock','1555751977:1'),(51,24,'_wp_old_date','2019-04-09'),(52,26,'_edit_lock','1555751984:1'),(53,28,'_edit_lock','1557343736:1'),(54,30,'_edit_lock','1560937659:1'),(57,30,'_wp_old_date','2019-04-09'),(59,33,'_edit_lock','1555056894:1'),(62,33,'_wp_old_date','2019-04-09'),(67,33,'_wp_old_slug','33'),(68,37,'_edit_lock','1557494627:1'),(69,39,'_edit_lock','1555056543:1'),(72,39,'_wp_old_date','2019-04-09'),(73,41,'_edit_lock','1555757990:1'),(76,41,'_wp_old_date','2019-04-09'),(77,43,'_edit_lock','1556002565:1'),(80,43,'_wp_old_date','2019-04-09'),(81,45,'_wp_attached_file','2019/02/6.png'),(82,45,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1286;s:6:\"height\";i:838;s:4:\"file\";s:13:\"2019/02/6.png\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:13:\"6-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:13:\"6-300x195.png\";s:5:\"width\";i:300;s:6:\"height\";i:195;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:13:\"6-768x500.png\";s:5:\"width\";i:768;s:6:\"height\";i:500;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:14:\"6-1024x667.png\";s:5:\"width\";i:1024;s:6:\"height\";i:667;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(83,45,'_wp_attachment_image_alt','Tiny Smart Home'),(86,47,'_wp_attached_file','2019/02/7.png'),(87,47,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:914;s:6:\"height\";i:261;s:4:\"file\";s:13:\"2019/02/7.png\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:13:\"7-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:12:\"7-300x86.png\";s:5:\"width\";i:300;s:6:\"height\";i:86;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:13:\"7-768x219.png\";s:5:\"width\";i:768;s:6:\"height\";i:219;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(88,48,'_wp_attached_file','2019/02/8.png'),(89,48,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:963;s:6:\"height\";i:252;s:4:\"file\";s:13:\"2019/02/8.png\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:13:\"8-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:12:\"8-300x79.png\";s:5:\"width\";i:300;s:6:\"height\";i:79;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:13:\"8-768x201.png\";s:5:\"width\";i:768;s:6:\"height\";i:201;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(92,50,'_wp_attached_file','2019/02/9.png'),(93,50,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:989;s:6:\"height\";i:407;s:4:\"file\";s:13:\"2019/02/9.png\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:13:\"9-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:13:\"9-300x123.png\";s:5:\"width\";i:300;s:6:\"height\";i:123;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:13:\"9-768x316.png\";s:5:\"width\";i:768;s:6:\"height\";i:316;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(94,50,'_wp_attachment_image_alt','Dashboard'),(107,54,'_wp_attached_file','2019/04/cropped-ue.jpg'),(108,54,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:512;s:6:\"height\";i:512;s:4:\"file\";s:22:\"2019/04/cropped-ue.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:22:\"cropped-ue-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:22:\"cropped-ue-300x300.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"1\";s:8:\"keywords\";a:0:{}}}'),(109,55,'_wp_attached_file','2019/04/cropped-cropped-ue.jpg'),(110,55,'_wp_attachment_context','site-icon'),(111,55,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:512;s:6:\"height\";i:512;s:4:\"file\";s:30:\"2019/04/cropped-cropped-ue.jpg\";s:5:\"sizes\";a:6:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:30:\"cropped-cropped-ue-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:30:\"cropped-cropped-ue-300x300.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:13:\"site_icon-270\";a:4:{s:4:\"file\";s:30:\"cropped-cropped-ue-270x270.jpg\";s:5:\"width\";i:270;s:6:\"height\";i:270;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:13:\"site_icon-192\";a:4:{s:4:\"file\";s:30:\"cropped-cropped-ue-192x192.jpg\";s:5:\"width\";i:192;s:6:\"height\";i:192;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:13:\"site_icon-180\";a:4:{s:4:\"file\";s:30:\"cropped-cropped-ue-180x180.jpg\";s:5:\"width\";i:180;s:6:\"height\";i:180;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:12:\"site_icon-32\";a:4:{s:4:\"file\";s:28:\"cropped-cropped-ue-32x32.jpg\";s:5:\"width\";i:32;s:6:\"height\";i:32;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(115,57,'_menu_item_type','custom'),(116,57,'_menu_item_menu_item_parent','0'),(117,57,'_menu_item_object_id','57'),(118,57,'_menu_item_object','custom'),(119,57,'_menu_item_target',''),(120,57,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(121,57,'_menu_item_xfn',''),(122,57,'_menu_item_url','https://rike.dev/'),(124,58,'_menu_item_type','post_type'),(125,58,'_menu_item_menu_item_parent','0'),(126,58,'_menu_item_object_id','2'),(127,58,'_menu_item_object','page'),(128,58,'_menu_item_target',''),(129,58,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(130,58,'_menu_item_xfn',''),(131,58,'_menu_item_url',''),(132,58,'_menu_item_orphaned','1554828719'),(133,59,'_menu_item_type','taxonomy'),(134,59,'_menu_item_menu_item_parent','0'),(135,59,'_menu_item_object_id','2'),(136,59,'_menu_item_object','category'),(137,59,'_menu_item_target',''),(138,59,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(139,59,'_menu_item_xfn',''),(140,59,'_menu_item_url',''),(142,60,'_menu_item_type','taxonomy'),(143,60,'_menu_item_menu_item_parent','0'),(144,60,'_menu_item_object_id','3'),(145,60,'_menu_item_object','category'),(146,60,'_menu_item_target',''),(147,60,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(148,60,'_menu_item_xfn',''),(149,60,'_menu_item_url',''),(175,73,'_wp_attached_file','2019/04/coding.png'),(176,73,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:512;s:6:\"height\";i:512;s:4:\"file\";s:18:\"2019/04/coding.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:18:\"coding-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:18:\"coding-300x300.png\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(177,73,'_wp_attachment_image_alt','Coding'),(178,74,'_wp_attached_file','2019/04/cropped-coding.png'),(179,74,'_wp_attachment_context','site-icon'),(180,74,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:512;s:6:\"height\";i:512;s:4:\"file\";s:26:\"2019/04/cropped-coding.png\";s:5:\"sizes\";a:6:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:26:\"cropped-coding-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:26:\"cropped-coding-300x300.png\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}s:13:\"site_icon-270\";a:4:{s:4:\"file\";s:26:\"cropped-coding-270x270.png\";s:5:\"width\";i:270;s:6:\"height\";i:270;s:9:\"mime-type\";s:9:\"image/png\";}s:13:\"site_icon-192\";a:4:{s:4:\"file\";s:26:\"cropped-coding-192x192.png\";s:5:\"width\";i:192;s:6:\"height\";i:192;s:9:\"mime-type\";s:9:\"image/png\";}s:13:\"site_icon-180\";a:4:{s:4:\"file\";s:26:\"cropped-coding-180x180.png\";s:5:\"width\";i:180;s:6:\"height\";i:180;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"site_icon-32\";a:4:{s:4:\"file\";s:24:\"cropped-coding-32x32.png\";s:5:\"width\";i:32;s:6:\"height\";i:32;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(181,75,'_wp_attached_file','2019/04/cropped-coding-1.png'),(182,75,'_wp_attachment_context','custom-logo'),(183,75,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:512;s:6:\"height\";i:512;s:4:\"file\";s:28:\"2019/04/cropped-coding-1.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:28:\"cropped-coding-1-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:28:\"cropped-coding-1-300x300.png\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(186,43,'_edit_last','1'),(189,41,'_edit_last','1'),(192,39,'_edit_last','1'),(195,33,'_edit_last','1'),(198,30,'_edit_last','1'),(201,20,'_edit_last','1'),(204,12,'_edit_last','1'),(207,10,'_edit_last','1'),(210,7,'_edit_last','1'),(213,5,'_edit_last','1'),(218,43,'_wp_old_slug','how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js'),(221,41,'_wp_old_slug','choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity'),(224,33,'_wp_old_slug','get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application'),(229,7,'_wp_old_slug','die-clippy-die-die-evolution-von-user-interface-agents-und-aktuelle-entwicklungen-bei-intelligent-personal-assistants'),(232,5,'_wp_old_slug','banking-via-handy-akzeptanz-altersgruppenspezifisch'),(309,116,'_edit_lock','1557494774:1'),(310,116,'_edit_last','1'),(313,116,'vidbg_metabox_field_mp4_id','122'),(314,116,'vidbg_metabox_field_mp4','https://rike.dev/wp-content/uploads/2019/04/db-download.mp4'),(315,116,'vidbg_metabox_field_webm_id','0'),(316,116,'vidbg_metabox_field_poster_id','133'),(317,116,'vidbg_metabox_field_overlay','off'),(318,116,'vidbg_metabox_field_overlay_color','#000'),(319,116,'vidbg_metabox_field_overlay_alpha','30'),(320,116,'vidbg_metabox_field_no_loop','off'),(321,116,'vidbg_metabox_field_tap_to_unmute','off'),(322,122,'_wp_attached_file','2019/04/db-download.mp4'),(323,122,'_wp_attachment_metadata','a:10:{s:7:\"bitrate\";i:172157;s:8:\"filesize\";i:490697;s:9:\"mime_type\";s:15:\"video/quicktime\";s:6:\"length\";i:23;s:16:\"length_formatted\";s:4:\"0:23\";s:5:\"width\";i:916;s:6:\"height\";i:834;s:10:\"fileformat\";s:3:\"mp4\";s:10:\"dataformat\";s:9:\"quicktime\";s:17:\"created_timestamp\";i:-2082844800;}'),(324,116,'vidbg_metabox_field_container','.video-box'),(327,116,'vidbg_metabox_field_poster','https://rike.dev/wp-content/uploads/2019/04/download-db.png'),(328,133,'_wp_attached_file','2019/04/download-db.png'),(329,133,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:671;s:6:\"height\";i:612;s:4:\"file\";s:23:\"2019/04/download-db.png\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:23:\"download-db-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:23:\"download-db-300x274.png\";s:5:\"width\";i:300;s:6:\"height\";i:274;s:9:\"mime-type\";s:9:\"image/png\";}s:16:\"recentpost-thumb\";a:4:{s:4:\"file\";s:23:\"download-db-450x231.png\";s:5:\"width\";i:450;s:6:\"height\";i:231;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(348,116,'_thumbnail_id','133'),(357,43,'vidbg_metabox_field_mp4_id','0'),(358,43,'vidbg_metabox_field_webm_id','0'),(359,43,'vidbg_metabox_field_poster_id','0'),(360,43,'vidbg_metabox_field_overlay','off'),(361,43,'vidbg_metabox_field_overlay_color','#000'),(362,43,'vidbg_metabox_field_overlay_alpha','30'),(363,43,'vidbg_metabox_field_no_loop','off'),(364,43,'vidbg_metabox_field_tap_to_unmute','off'),(369,28,'_edit_last','1'),(370,28,'vidbg_metabox_field_mp4_id','0'),(371,28,'vidbg_metabox_field_webm_id','0'),(372,28,'vidbg_metabox_field_poster_id','0'),(373,28,'vidbg_metabox_field_overlay','off'),(374,28,'vidbg_metabox_field_overlay_color','#000'),(375,28,'vidbg_metabox_field_overlay_alpha','30'),(376,28,'vidbg_metabox_field_no_loop','off'),(377,28,'vidbg_metabox_field_tap_to_unmute','off'),(378,26,'_edit_last','1'),(381,26,'_wp_old_date','2019-04-20'),(382,26,'vidbg_metabox_field_mp4_id','0'),(383,26,'vidbg_metabox_field_webm_id','0'),(384,26,'vidbg_metabox_field_poster_id','0'),(385,26,'vidbg_metabox_field_overlay','off'),(386,26,'vidbg_metabox_field_overlay_color','#000'),(387,26,'vidbg_metabox_field_overlay_alpha','30'),(388,26,'vidbg_metabox_field_no_loop','off'),(389,26,'vidbg_metabox_field_tap_to_unmute','off'),(398,24,'_edit_last','1'),(401,24,'vidbg_metabox_field_mp4_id','0'),(402,24,'vidbg_metabox_field_webm_id','0'),(403,24,'vidbg_metabox_field_poster_id','0'),(404,24,'vidbg_metabox_field_overlay','off'),(405,24,'vidbg_metabox_field_overlay_color','#000'),(406,24,'vidbg_metabox_field_overlay_alpha','30'),(407,24,'vidbg_metabox_field_no_loop','off'),(408,24,'vidbg_metabox_field_tap_to_unmute','off'),(413,37,'_edit_last','1'),(414,37,'vidbg_metabox_field_mp4_id','0'),(415,37,'vidbg_metabox_field_webm_id','0'),(416,37,'vidbg_metabox_field_poster_id','0'),(417,37,'vidbg_metabox_field_overlay','off'),(418,37,'vidbg_metabox_field_overlay_color','#000'),(419,37,'vidbg_metabox_field_overlay_alpha','30'),(420,37,'vidbg_metabox_field_no_loop','off'),(421,37,'vidbg_metabox_field_tap_to_unmute','off'),(428,179,'_edit_last','1'),(429,179,'_edit_lock','1565707809:1'),(432,179,'vidbg_metabox_field_mp4_id','0'),(433,179,'vidbg_metabox_field_webm_id','0'),(434,179,'vidbg_metabox_field_poster_id','0'),(435,179,'vidbg_metabox_field_overlay','off'),(436,179,'vidbg_metabox_field_overlay_color','#000'),(437,179,'vidbg_metabox_field_overlay_alpha','30'),(438,179,'vidbg_metabox_field_no_loop','off'),(439,179,'vidbg_metabox_field_tap_to_unmute','off'),(442,30,'vidbg_metabox_field_mp4_id','0'),(443,30,'vidbg_metabox_field_webm_id','0'),(444,30,'vidbg_metabox_field_poster_id','0'),(445,30,'vidbg_metabox_field_overlay','off'),(446,30,'vidbg_metabox_field_overlay_color','#000'),(447,30,'vidbg_metabox_field_overlay_alpha','30'),(448,30,'vidbg_metabox_field_no_loop','off'),(449,30,'vidbg_metabox_field_tap_to_unmute','off'),(450,183,'_edit_last','1'),(451,183,'_edit_lock','1563822116:1'),(452,183,'vidbg_metabox_field_mp4_id','0'),(453,183,'vidbg_metabox_field_webm_id','0'),(454,183,'vidbg_metabox_field_poster_id','0'),(455,183,'vidbg_metabox_field_overlay','off'),(456,183,'vidbg_metabox_field_overlay_color','#000'),(457,183,'vidbg_metabox_field_overlay_alpha','30'),(458,183,'vidbg_metabox_field_no_loop','off'),(459,183,'vidbg_metabox_field_tap_to_unmute','off'),(482,20,'vidbg_metabox_field_mp4_id','0'),(483,20,'vidbg_metabox_field_webm_id','0'),(484,20,'vidbg_metabox_field_poster_id','0'),(485,20,'vidbg_metabox_field_overlay','off'),(486,20,'vidbg_metabox_field_overlay_color','#000'),(487,20,'vidbg_metabox_field_overlay_alpha','30'),(488,20,'vidbg_metabox_field_no_loop','off'),(489,20,'vidbg_metabox_field_tap_to_unmute','off'),(492,12,'vidbg_metabox_field_mp4_id','0'),(493,12,'vidbg_metabox_field_webm_id','0'),(494,12,'vidbg_metabox_field_poster_id','0'),(495,12,'vidbg_metabox_field_overlay','off'),(496,12,'vidbg_metabox_field_overlay_color','#000'),(497,12,'vidbg_metabox_field_overlay_alpha','30'),(498,12,'vidbg_metabox_field_no_loop','off'),(499,12,'vidbg_metabox_field_tap_to_unmute','off'),(500,197,'_edit_last','1'),(501,197,'_edit_lock','1574108525:1'),(502,197,'vidbg_metabox_field_mp4_id','0'),(503,197,'vidbg_metabox_field_webm_id','0'),(504,197,'vidbg_metabox_field_poster_id','0'),(505,197,'vidbg_metabox_field_overlay','off'),(506,197,'vidbg_metabox_field_overlay_color','#000'),(507,197,'vidbg_metabox_field_overlay_alpha','30'),(508,197,'vidbg_metabox_field_no_loop','off'),(509,197,'vidbg_metabox_field_tap_to_unmute','off'),(524,212,'_edit_last','1'),(525,212,'_edit_lock','1563480863:1'),(526,212,'_oembed_66e09531bceadad2ee7d5506abe4a4df','{{unknown}}'),(527,212,'_oembed_c50681c49a08ba54ae1e4cf5c2f6b2b6','{{unknown}}'),(528,212,'_oembed_3c98284cc5d1671d535e4bb115bd4e3d','{{unknown}}'),(529,212,'_oembed_c0ddb25c92b1b87da1d4a50bc68ec3c9','{{unknown}}'),(530,212,'_oembed_c921ec29c04dc5e67e4b181a2a066e9d','{{unknown}}'),(531,212,'_oembed_d2d5b61af6d6cdcdecea1973da93e214','{{unknown}}'),(532,212,'vidbg_metabox_field_mp4_id','0'),(533,212,'vidbg_metabox_field_webm_id','0'),(534,212,'vidbg_metabox_field_poster_id','0'),(535,212,'vidbg_metabox_field_overlay','off'),(536,212,'vidbg_metabox_field_overlay_color','#000'),(537,212,'vidbg_metabox_field_overlay_alpha','30'),(538,212,'vidbg_metabox_field_no_loop','off'),(539,212,'vidbg_metabox_field_tap_to_unmute','off'),(540,212,'_oembed_cf38b98bf8bcc68ee3e74b1f7a6fc0e2','{{unknown}}'),(541,212,'_oembed_363753f461cf850a19e3820e3ec76c1c','{{unknown}}'),(542,212,'_oembed_19d29ba3670dca24e8f635a941362351','{{unknown}}'),(543,212,'_oembed_554baeeed87ea3fbdaa9e969fcb00848','{{unknown}}'),(544,212,'_oembed_e14579d7fbcd0a328344c3e399b37d6c','{{unknown}}'),(545,212,'_oembed_ae7b5dabde25df036ca9affc7b4fff3e','{{unknown}}'),(546,212,'_oembed_ae8321a1f175b02ad9c12135c0547da3','{{unknown}}'),(547,212,'_oembed_c6bc5f3f81563fdf7974876e54b3b921','{{unknown}}'),(548,212,'_oembed_b01d2436907701b07cee2ed38902ba28','{{unknown}}'),(549,212,'_oembed_42a8f10eeffec78acdba401a3f077af2','{{unknown}}'),(550,212,'_oembed_08890c39c92d5c3ccfee5641ad5feea1','{{unknown}}'),(551,212,'_oembed_048efdda1699240195d7cf49ee7fe00e','{{unknown}}'),(552,212,'_oembed_9b0a1a643e5b8e2e3fffa0e15f6816fe','{{unknown}}'),(555,5,'vidbg_metabox_field_mp4_id','0'),(556,5,'vidbg_metabox_field_webm_id','0'),(557,5,'vidbg_metabox_field_poster_id','0'),(558,5,'vidbg_metabox_field_overlay','off'),(559,5,'vidbg_metabox_field_overlay_color','#000'),(560,5,'vidbg_metabox_field_overlay_alpha','30'),(561,5,'vidbg_metabox_field_no_loop','off'),(562,5,'vidbg_metabox_field_tap_to_unmute','off'),(565,7,'vidbg_metabox_field_mp4_id','0'),(566,7,'vidbg_metabox_field_webm_id','0'),(567,7,'vidbg_metabox_field_poster_id','0'),(568,7,'vidbg_metabox_field_overlay','off'),(569,7,'vidbg_metabox_field_overlay_color','#000'),(570,7,'vidbg_metabox_field_overlay_alpha','30'),(571,7,'vidbg_metabox_field_no_loop','off'),(572,7,'vidbg_metabox_field_tap_to_unmute','off'),(573,247,'_customize_draft_post_name','home'),(574,247,'_customize_changeset_uuid','4e5b9f1b-cf06-4a63-852a-4269dff0782b'),(575,3,'_edit_lock','1585592295:1'),(576,248,'_edit_last','1'),(577,248,'_edit_lock','1585592865:1'),(578,248,'_wp_page_template','default'),(579,248,'vidbg_metabox_field_mp4_id','0'),(580,248,'vidbg_metabox_field_webm_id','0'),(581,248,'vidbg_metabox_field_poster_id','0'),(582,248,'vidbg_metabox_field_overlay','off'),(583,248,'vidbg_metabox_field_overlay_color','#000'),(584,248,'vidbg_metabox_field_overlay_alpha','30'),(585,248,'vidbg_metabox_field_no_loop','off'),(586,248,'vidbg_metabox_field_tap_to_unmute','off'),(587,262,'_edit_lock','1585593443:1');
/*!40000 ALTER TABLE `wp_postmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_posts`
--

DROP TABLE IF EXISTS `wp_posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_title` text COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_excerpt` text COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_status` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'open',
  `post_password` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `post_name` varchar(200) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `to_ping` text COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `pinged` text COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `guid` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `post_name` (`post_name`(191)),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`)
) ENGINE=InnoDB AUTO_INCREMENT=264 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_posts`
--

LOCK TABLES `wp_posts` WRITE;
/*!40000 ALTER TABLE `wp_posts` DISABLE KEYS */;
INSERT INTO `wp_posts` VALUES (2,1,'2019-04-09 12:55:43','2019-04-09 10:55:43','<!-- wp:paragraph -->\n<p>Dies ist eine Beispiel-Seite. Sie unterscheidet sich von Beiträgen, da sie stets an derselben Stelle bleibt und (bei den meisten Themes) in der Website-Navigation angezeigt wird. Die meisten starten mit einem Impressum, der Datenschutzerklärung oder einer &#8222;Über uns&#8220;-Seite, um sich möglichen Besucher der Website vorzustellen. Dort könnte zum Beispiel stehen:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>Hallo! Ich bin tagsüber im Kurierdienst tätig, nachts widme ich mich der Schauspielkunst, und das ist meine Website. Ich lebe in einer Großstadt, habe einen tollen Hund und ich mag Getränke mit Schirmchen (aber nicht ohne Schirm im Regen zu stehen).</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>...oder so etwas wie das hier:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>Das Unternehmen XYZ wurde 1971 gegründet und versorgt die Öffentlichkeit seither mit qualitativ hochwertigen Produkten. An seinem Standort in einer kleinen Großstadt beschäftigt der Betrieb über 2.000 Menschen und unterstützt die Stadtbewohner in vielfacher Hinsicht.</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>Als neuer WordPress-Benutzer solltest du dein <a href=\"https://rike.dev/wp-admin/\">Dashboard</a> aufrufen, um diese Seite zu löschen und neue Seiten für deinen Inhalt zu erstellen. Viel Spaß!</p>\n<!-- /wp:paragraph -->','Beispiel-Seite','','publish','closed','open','','beispiel-seite','','','2019-04-09 12:55:43','2019-04-09 10:55:43','',0,'https://rike.dev/?page_id=2',0,'page','',0),(3,1,'2019-04-09 12:55:43','2019-04-09 10:55:43','<!-- wp:heading --><h2>Wer wir sind</h2><!-- /wp:heading --><!-- wp:paragraph --><p>Die Adresse unserer Website ist: https://rike.dev.</p><!-- /wp:paragraph --><!-- wp:heading --><h2>Welche personenbezogenen Daten wir sammeln und warum wir sie sammeln</h2><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>Kommentare</h3><!-- /wp:heading --><!-- wp:paragraph --><p>Wenn Besucher Kommentare auf der Website schreiben, sammeln wir die Daten, die im Kommentar-Formular angezeigt werden, außerdem die IP-Adresse des Besuchers und den User-Agent-String (damit wird der Browser identifiziert), um die Erkennung von Spam zu unterstützen.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>Aus deiner E-Mail-Adresse kann eine anonymisierte Zeichenfolge erstellt (auch Hash genannt) und dem Gravatar-Dienst übergeben werden, um zu prüfen, ob du diesen benutzt. Die Datenschutzerklärung des Gravatar-Dienstes findest du hier: https://automattic.com/privacy/. Nachdem dein Kommentar freigegeben wurde, ist dein Profilbild öffentlich im Kontext deines Kommentars sichtbar.</p><!-- /wp:paragraph --><!-- wp:heading {\"level\":3} --><h3>Medien</h3><!-- /wp:heading --><!-- wp:paragraph --><p>Wenn du ein registrierter Benutzer bist und Fotos auf diese Website lädst, solltest du vermeiden, Fotos mit einem EXIF-GPS-Standort hochzuladen. Besucher dieser Website könnten Fotos, die auf dieser Website gespeichert sind, herunterladen und deren Standort-Informationen extrahieren.</p><!-- /wp:paragraph --><!-- wp:heading {\"level\":3} --><h3>Kontaktformulare</h3><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>Cookies</h3><!-- /wp:heading --><!-- wp:paragraph --><p>Wenn du einen Kommentar auf unserer Website schreibst, kann das eine Einwilligung sein, deinen Namen, E-Mail-Adresse und Website in Cookies zu speichern. Dies ist eine Komfortfunktion, damit du nicht, wenn du einen weiteren Kommentar schreibst, all diese Daten erneut eingeben musst. Diese Cookies werden ein Jahr lang gespeichert.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>Falls du ein Konto hast und dich auf dieser Website anmeldest, werden wir ein temporäres Cookie setzen, um festzustellen, ob dein Browser Cookies akzeptiert. Dieses Cookie enthält keine personenbezogenen Daten und wird verworfen, wenn du deinen Browser schließt.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>Wenn du dich anmeldest, werden wir einige Cookies einrichten, um deine Anmeldeinformationen und Anzeigeoptionen zu speichern. Anmelde-Cookies verfallen nach zwei Tagen und Cookies für die Anzeigeoptionen nach einem Jahr. Falls du bei der Anmeldung „Angemeldet bleiben“ auswählst, wird deine Anmeldung zwei Wochen lang aufrechterhalten. Mit der Abmeldung aus deinem Konto werden die Anmelde-Cookies gelöscht.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>Wenn du einen Artikel bearbeitest oder veröffentlichst, wird ein zusätzlicher Cookie in deinem Browser gespeichert. Dieser Cookie enthält keine personenbezogenen Daten und verweist nur auf die Beitrags-ID des Artikels, den du gerade bearbeitet hast. Der Cookie verfällt nach einem Tag.</p><!-- /wp:paragraph --><!-- wp:heading {\"level\":3} --><h3>Eingebettete Inhalte von anderen Websites</h3><!-- /wp:heading --><!-- wp:paragraph --><p>Beiträge auf dieser Website können eingebettete Inhalte beinhalten (z.&nbsp;B. Videos, Bilder, Beiträge etc.). Eingebettete Inhalte von anderen Websites verhalten sich exakt so, als ob der Besucher die andere Website besucht hätte.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>Diese Websites können Daten über dich sammeln, Cookies benutzen, zusätzliche Tracking-Dienste von Dritten einbetten und deine Interaktion mit diesem eingebetteten Inhalt aufzeichnen, inklusive deiner Interaktion mit dem eingebetteten Inhalt, falls du ein Konto hast und auf dieser Website angemeldet bist.</p><!-- /wp:paragraph --><!-- wp:heading {\"level\":3} --><h3>Analysedienste</h3><!-- /wp:heading --><!-- wp:heading --><h2>Mit wem wir deine Daten teilen</h2><!-- /wp:heading --><!-- wp:heading --><h2>Wie lange wir deine Daten speichern</h2><!-- /wp:heading --><!-- wp:paragraph --><p>Wenn du einen Kommentar schreibst, wird dieser inklusive Metadaten zeitlich unbegrenzt gespeichert. Auf diese Art können wir Folgekommentare automatisch erkennen und freigeben, anstelle sie in einer Moderations-Warteschlange festzuhalten.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>Für Benutzer, die sich auf unserer Website registrieren, speichern wir zusätzlich die persönlichen Informationen, die sie in ihren Benutzerprofilen angeben. Alle Benutzer können jederzeit ihre persönlichen Informationen einsehen, verändern oder löschen (der Benutzername kann nicht verändert werden). Administratoren der Website können diese Informationen ebenfalls einsehen und verändern.</p><!-- /wp:paragraph --><!-- wp:heading --><h2>Welche Rechte du an deinen Daten hast</h2><!-- /wp:heading --><!-- wp:paragraph --><p>Wenn du ein Konto auf dieser Website besitzt oder Kommentare geschrieben hast, kannst du einen Export deiner personenbezogenen Daten bei uns anfordern, inklusive aller Daten, die du uns mitgeteilt hast. Darüber hinaus kannst du die Löschung aller personenbezogenen Daten, die wir von dir gespeichert haben, anfordern. Dies umfasst nicht die Daten, die wir aufgrund administrativer, rechtlicher oder sicherheitsrelevanter Notwendigkeiten aufbewahren müssen.</p><!-- /wp:paragraph --><!-- wp:heading --><h2>Wohin wir deine Daten senden</h2><!-- /wp:heading --><!-- wp:paragraph --><p>Besucher-Kommentare könnten von einem automatisierten Dienst zur Spam-Erkennung untersucht werden.</p><!-- /wp:paragraph --><!-- wp:heading --><h2>Deine Kontakt-Informationen</h2><!-- /wp:heading --><!-- wp:heading --><h2>Weitere Informationen</h2><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>Wie wir deine Daten schützen</h3><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>Welche Maßnahmen wir bei Datenschutzverletzungen anbieten</h3><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>Von welchen Drittanbietern wir Daten erhalten</h3><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>Welche automatisierte Entscheidungsfindung und/oder Profilerstellung wir mit Benutzerdaten durchführen</h3><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>Industrielle aufsichtsrechtliche Regulierungsanforderungen</h3><!-- /wp:heading -->','Datenschutzerklärung','','draft','closed','open','','datenschutzerklaerung','','','2019-04-09 12:55:43','2019-04-09 10:55:43','',0,'https://rike.dev/?page_id=3',0,'page','',0),(5,1,'2015-12-02 16:04:22','2015-12-02 15:04:22','<!-- wp:paragraph -->\r\n<p>Die digitalisierende Bankbranche sehnt ihn förmlich herbei: Den Durchbruch des Mobile Banking auch in Deutschland. Mobile Banking als zusätzlicher Distributionskanal wird für traditionelle Geldinstitute überlebenswichtig, um neue Kunden zu gewinnen und bestehende Kundenbeziehungen zu erhalten. Doch die Realität scheint momentan noch eine andere: Im internationalen Vergleich vertrauen nur wenige Deutsche ihre Bankgeschäfte ihrem Handy an. Unter den älteren Bevölkerungsgruppen zeigt sich eine besonders hohe Skepsis dieser Technologie gegenüber. Um dem Phänomen des Mobile Bankings auf die Spur zu kommen, beginnt das Paper mit einer kurzen Einführung in Begrifflichkeiten zum Thema und die Einbeziehung medienpsychologischer Aspekte zur Akzeptanz innovativer Technologien. Schließlich werden einige internationale Studienergebnisse zusammengefasst, die sich mit dem Einflussfaktor Alter als Einflussfaktor auf die Akzeptanz von Mobile Banking befasst haben.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><em>Exner, Ulrike: Banking via Handy - Akzeptanz altersgruppenspezifisch?,</em> 2015. <a href=\"http://rike.dev/wp-content/uploads/2018/01/mobile_banking.pdf\">Download</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:image {\"linkDestination\":\"custom\"} -->\r\n<figure class=\"wp-block-image\"><a href=\"http://creativecommons.org/licenses/by-sa/4.0/\"><img src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\" alt=\"Creative Commons Lizenzvertrag\" /></a></figure>\r\n<!-- /wp:image -->','Banking via Handy - Akzeptanz altersgruppenspezifisch?','','publish','open','open','','mobile-banking-altersgruppenspezifisch','','','2020-03-14 10:02:31','2020-03-14 09:02:31','',0,'https://rike.dev/?p=5',0,'post','',0),(6,1,'2019-04-09 16:05:35','2019-04-09 14:05:35','<!-- wp:paragraph -->\n<p>Die digitalisierende Bankbranche sehnt ihn förmlich herbei: Den Durchbruch des Mobile Banking auch in Deutschland. Mobile Banking als zusätzlicher Distributionskanal wird für traditionelle Geldinstitute überlebenswichtig, um neue Kunden zu gewinnen und bestehende Kundenbeziehungen zu erhalten. Doch die Realität scheint momentan noch eine andere: Im internationalen Vergleich vertrauen nur wenige Deutsche ihre Bankgeschäfte ihrem Handy an. Unter den älteren Bevölkerungsgruppen zeigt sich eine besonders hohe Skepsis dieser Technologie gegenüber. Um dem Phänomen des Mobile Bankings auf die Spur zu kommen, beginnt das Paper mit einer kurzen Einführung in Begrifflichkeiten zum Thema und die Einbeziehung medienpsychologischer Aspekte zur Akzeptanz innovativer Technologien. Schließlich werden einige internationale Studienergebnisse zusammengefasst, die sich mit dem Einflussfaktor Alter als Einflussfaktor auf die Akzeptanz von Mobile Banking befasst haben.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>Ulrike Exner: \"Banking via Handy - Akzeptanz altersgruppenspezifisch?\",</em> 2015. <a href=\"http://rike.dev/texts/wp-content/uploads/2018/01/mobile_banking.pdf\">Download</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"linkDestination\":\"custom\"} -->\n<figure class=\"wp-block-image\"><a href=\"http://creativecommons.org/licenses/by-sa/4.0/\"><img src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\" alt=\"Creative Commons Lizenzvertrag\"/></a></figure>\n<!-- /wp:image -->','Banking via Handy - Akzeptanz altersgruppenspezifisch?','','inherit','closed','closed','','5-revision-v1','','','2019-04-09 16:05:35','2019-04-09 14:05:35','',5,'https://rike.dev/2019/04/09/5-revision-v1/',0,'revision','',0),(7,1,'2016-06-13 16:06:00','2016-06-13 14:06:00','<!-- wp:paragraph -->\r\n<p>Die Sehnsucht nach verlässlichen intelligenten Agenten mit scheinbar eigener Persönlichkeit scheint groß zu sein. Wir lassen uns heute durch Apples \"Siri\" oder Microsofts \"Cortana\" den Weg zeigen oder einen Restauranttisch buchen. Doch die Evolution von intelligenten Agenten ist eine Geschichte mit Höhen und Tiefen. Ein berühmter Vertreter einer einfachen Form von interface agents ist Microsofts \"Clippy the Paperclip\" - eine tragische Figur auf dem Experimentierfeld der Künstlichen Intelligenz, der schon vor Beginn ihres Untergangs mit Häme und Spott begegnet wurde. Neue Entwicklungen versprechen innnovative agents, die sich das Internet zu Nutze machen. Das Paper beinhaltet die jeweiligen Entwicklungslinien.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><em>Exner, Ulrike: \"Die, Clippy, die!!\" Zur Evolution von User Interface Agents und aktuelle Entwicklungen bei Intelligent Personal Assistants, 2016. </em><a href=\"http://rike.dev/wp-content/uploads/2018/01/die_clippy.pdf\">Download</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:image {\"linkDestination\":\"custom\"} -->\r\n<figure class=\"wp-block-image\"><a href=\"http://creativecommons.org/licenses/by-sa/4.0/\"><img src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\" alt=\"Creative Commons Lizenzvertrag\" /></a></figure>\r\n<!-- /wp:image -->','\"Die, Clippy, die!!\". Die Evolution von User Interface Agents und aktuelle Entwicklungen bei Intelligent Personal Assistants','','publish','open','open','','die-clippy-die-intelligent-personal-assistants','','','2020-03-14 10:04:15','2020-03-14 09:04:15','',0,'https://rike.dev/?p=7',0,'post','',0),(8,1,'2019-04-09 16:06:50','2019-04-09 14:06:50','<!-- wp:paragraph -->\n<p>Die Sehnsucht nach verlässlichen intelligenten Agenten mit scheinbar eigener Persönlichkeit scheint groß zu sein. Wir lassen&nbsp;uns heute durch Apples \"Siri\" oder Microsofts \"Cortana\" den Weg zeigen oder einen Restauranttisch buchen. Doch die Evolution von intelligenten Agenten ist eine Geschichte mit Höhen und Tiefen. Ein berühmter Vertreter einer einfachen Form von interface agents ist Microsofts \"Clippy the Paperclip\" - eine tragische Figur auf dem Experimentierfeld der Künstlichen Intelligenz, der schon vor Beginn ihres Untergangs mit Häme und Spott begegnet wurde. Neue Entwicklungen versprechen innnovative agents, die sich das Internet zu Nutze machen.&nbsp;Das Paper beinhaltet die&nbsp;jeweiligen Entwicklungslinien.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>Ulrike Exner: \"Die, Clippy, die!!\" Zur Evolution von User Interface Agents und aktuelle Entwicklungen bei Intelligent Personal Assistants, 2016. </em><a href=\"http://rike.dev/texts/wp-content/uploads/2018/01/die_clippy.pdf\">Download</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"linkDestination\":\"custom\"} -->\n<figure class=\"wp-block-image\"><a href=\"http://creativecommons.org/licenses/by-sa/4.0/\"><img src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\" alt=\"Creative Commons Lizenzvertrag\"/></a></figure>\n<!-- /wp:image -->','\"Die, Clippy, die!!\". Die Evolution von User Interface Agents und aktuelle Entwicklungen bei Intelligent Personal Assistants','','inherit','closed','closed','','7-revision-v1','','','2019-04-09 16:06:50','2019-04-09 14:06:50','',7,'https://rike.dev/2019/04/09/7-revision-v1/',0,'revision','',0),(10,1,'2017-06-01 16:07:03','2017-06-01 14:07:03','<!-- wp:paragraph -->\n<p>Das World Wide Web stellt über unterschiedlichste Kanäle eine Vielzahl von potentiell relevanter Information zu diversen Fragestellungen bereit. Insbesondere Unternehmen sind jedoch darauf angewiesen, stets den Überblick über technologische Neuerungen, Marktdaten und sonstige Trends zu behalten. Neben der Erhebung kann auch die Verarbeitung, Analyse und Präsentation von relevanten Daten aus dem Web heute mit Web-Monitoring- Tools unterstützt werden. Die vorliegende Masterarbeit dokumentiert die Entwicklung eines Web-Monitoring-Tools zur Anwendung und Implemen- tierung für einen Engineering-Dienstleister im Automobilbereich. Zur Voranalyse werden einerseits der aktuelle Forschungsstand sowie wichtige Konzepte im Umfeld von Web-Monitoring-Technologien dargelegt. Andererseits werden als eigene empirische Forschung potentielle Nutzer über ihre Anforderungen und Erwartungen an das System in qualitativen Interviews befragt. Die daraus gewonnenen Erkenntnisse gehen im Sinne des Human-Centered-Design direkt in die Konzeption ein. In einem schlanken Feature-Driven-Development-Prozess wird ein Web-Monitoring-Tool mit Hilfe von modernen Webentwicklungstechnologien wie AngularJS, Flask und MongoDB umgesetzt. Der Prototyp wird abschließend unter Anwendung eines Nutzertests und eines Fragebogens einer summativen Evaluation unterzogen.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>Exner, Ulrike: Nutzerzentrierte Entwicklung eines prototypischen Web-Monitoring-Tools, 2017.</em> <a href=\"https://opus4.kobv.de/opus4-fhbrb/frontdoor/index/index/docId/2192\">https://opus4.kobv.de/opus4-fhbrb/frontdoor/index/index/docId/2192</a>.</p>\n<!-- /wp:paragraph -->','Nutzerzentrierte Entwicklung eines prototypischen Web-Monitoring-Tools','','publish','open','open','','nutzerzentrierte-entwicklung-eines-prototypischen-web-monitoring-tools','','','2019-04-10 10:46:19','2019-04-10 08:46:19','',0,'https://rike.dev/?p=10',0,'post','',0),(11,1,'2019-04-09 18:01:48','2019-04-09 16:01:48','<!-- wp:paragraph -->\n<p>Das World Wide Web stellt über unterschiedlichste Kanäle eine Vielzahl von potentiell relevanter Information zu diversen Fragestellungen bereit. Insbesondere Unternehmen sind jedoch darauf angewiesen, stets den Überblick über technologische Neuerungen, Marktdaten und sonstige Trends zu behalten. Neben der Erhebung kann auch die Verarbeitung, Analyse und Präsentation von relevanten Daten aus dem Web heute mit Web-Monitoring- Tools unterstützt werden. Die vorliegende Masterarbeit dokumentiert die Entwicklung eines Web-Monitoring-Tools zur Anwendung und Implemen- tierung für einen Engineering-Dienstleister im Automobilbereich. Zur Voranalyse werden einerseits der aktuelle Forschungsstand sowie wichtige Konzepte im Umfeld von Web-Monitoring-Technologien dargelegt. Andererseits werden als eigene empirische Forschung potentielle Nutzer über ihre Anforderungen und Erwartungen an das System in qualitativen Interviews befragt. Die daraus gewonnenen Erkenntnisse gehen im Sinne des Human-Centered-Design direkt in die Konzeption ein. In einem schlanken Feature-Driven-Development-Prozess wird ein Web-Monitoring-Tool mit Hilfe von modernen Webentwicklungstechnologien wie AngularJS, Flask und MongoDB umgesetzt. Der Prototyp wird abschließend unter Anwendung eines Nutzertests und eines Fragebogens einer summativen Evaluation unterzogen.Exner, Ulrike. „Nutzerzentrierte Entwicklung eines prototypischen Web-Monitoring-Tools“, 2017. <a href=\"https://opus4.kobv.de/opus4-fhbrb/frontdoor/index/index/docId/2192\">https://opus4.kobv.de/opus4-fhbrb/frontdoor/index/index/docId/2192</a>.</p>\n<!-- /wp:paragraph -->','Nutzerzentrierte Entwicklung eines prototypischen Web-Monitoring-Tools','','inherit','closed','closed','','10-revision-v1','','','2019-04-09 18:01:48','2019-04-09 16:01:48','',10,'https://rike.dev/2019/04/09/10-revision-v1/',0,'revision','',0),(12,1,'2017-07-28 18:01:53','2017-07-28 16:01:53','<!-- wp:paragraph -->\r\n<p>In diesem Tutorial lernst du, wie du mit dem Terminal deines Betriebssystems arbeitest, die Programmiersprache installierst und testest. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" entstanden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:more -->\r\n<p><!--more--></p>\r\n<!-- /wp:more -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3>Mit dem Terminal arbeiten / Python-Installation prüfen</h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Mit dem Terminal können wir unser Betriebssystem <em>textbasiert</em> steuern. Häufigster Vorbehalt gegen das Terminal ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:\r\n<ul>\r\n<li>In <strong>Windows 8 und 10</strong> geht das mit einem Klick mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination [Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li>\r\n<li>In <strong>Windows 7</strong> klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li>\r\n<li>In vielen <strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li>\r\n<li>Auf <strong>MacOS</strong> führt die Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li>\r\n</ul>\r\n</li>\r\n<li>Nun prüfen wir, ob auf unserem Betriebssystem bereits die Programmiersprache <em>Python </em>installiert ist. Die Chancen stehen gut, denn MacOS und viele Linux-Distributionen bringen<em> Python</em> bereits mit. Gib im Terminal ein. Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version <em>Python</em> installiert ist. Wenn das der Fall ist, musst du an dieser Stelle nichts weiter tun (es ist egal, welche Python-Version du nutzt)!<br />Solltest du eine Fehlermeldung erhalten, musst du die Installation von Python für dein Betriebssystem nachholen (nächster Schritt).</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:image {\"id\":14,\"align\":\"center\",\"linkDestination\":\"media\",\"className\":\"wp-image-286 size-full imagedropshadow\"} -->\r\n<div class=\"wp-block-image wp-image-286 size-full imagedropshadow\">\r\n<figure class=\"aligncenter\"><a href=\"https://rike.dev/wp-content/uploads/2017/07/1.png\"><img class=\"wp-image-14\" src=\"https://rike.dev/wp-content/uploads/2017/07/1.png\" alt=\"Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.\" /></a>\r\n<figcaption>Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.</figcaption>\r\n</figure>\r\n</div>\r\n<!-- /wp:image -->\r\n\r\n<!-- wp:image {\"id\":15,\"align\":\"center\",\"linkDestination\":\"media\",\"className\":\"wp-image-282 size-full imagedropshadow\"} -->\r\n<div class=\"wp-block-image wp-image-282 size-full imagedropshadow\">\r\n<figure class=\"aligncenter\"><a href=\"https://rike.dev/wp-content/uploads/2017/07/2.png\"><img class=\"wp-image-15\" src=\"https://rike.dev/wp-content/uploads/2017/07/2.png\" alt=\"Dieses Windows-System hat leider noch keine Python-Installation vorliegen.\" /></a>\r\n<figcaption>Dieses Windows-System hat leider noch keine Python-Installation vorliegen.</figcaption>\r\n</figure>\r\n</div>\r\n<!-- /wp:image -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3>Python installieren (empfohlen: Version 3.x.x)</h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Python können wir wie ein normales Softwarepaket herunterladen und für unser Betriebssystem installieren. Die Programmiersprache ist Open-Source, das heißt kostenlos erhältlich.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Surfe zu https://www.python.org/downloads/ und lade den jüngsten Release von <em>Python 3</em>.xx herunter, momentan ist das <em>Python 3.6.2</em>. Achte darauf, dass du das Paket für dein Betriebssystem herunterlädst, normalerweise erkennt die Website dein Betriebssystem automatisch und schlägt dir die richtige Datei vor.</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:image {\"id\":16,\"linkDestination\":\"media\",\"className\":\"imagedropshadow\"} -->\r\n<figure class=\"wp-block-image imagedropshadow\"><a href=\"https://rike.dev/wp-content/uploads/2017/07/3.png\"><img class=\"wp-image-16\" src=\"https://rike.dev/wp-content/uploads/2017/07/3-1024x423.png\" alt=\"Python Download\" /></a></figure>\r\n<!-- /wp:image -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Installiere die Datei wie eine gewöhnliche Software, z. B. über Windows per Doppelklick auf die Datei \"python-3-6-2.exe\". Aktiviere die Auswahl \"Add Python 3.6 to PATH\" im ersten Installationsfenster!! Weitere Anpassungen musst du nicht durchführen. Im nächsten Schritt wird die Installation durchgeführt und du kannst den Installer verlassen.</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:image {\"id\":17,\"align\":\"center\",\"linkDestination\":\"media\",\"className\":\"imagedropshadow\"} -->\r\n<div class=\"wp-block-image imagedropshadow\">\r\n<figure class=\"aligncenter\"><a href=\"https://rike.dev/wp-content/uploads/2017/07/4.png\"><img class=\"wp-image-17\" src=\"https://rike.dev/wp-content/uploads/2017/07/4.png\" alt=\"Python Installation\" /></a></figure>\r\n</div>\r\n<!-- /wp:image -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Wenn Python richtig installiert wurde, kannst du die Python-Installation aus Schritt 2 noch einmal prüfen und solltest diesmal erfolgreich sein.</li>\r\n</ul>\r\n<!-- /wp:list -->','Mit dem Terminal arbeiten und Python installieren','','publish','open','open','','mit-dem-terminal-arbeiten-und-python-installieren','','','2019-06-19 11:50:29','2019-06-19 09:50:29','',0,'https://rike.dev/?p=12',0,'post','',0),(13,1,'2019-04-09 18:08:29','2019-04-09 16:08:29','<!-- wp:paragraph -->\n<p>In diesem Tutorial lernst du, wie du mit dem Terminal deines Betriebssystems arbeitest, die Programmiersprache installierst und testest. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" entstanden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:more -->\n<!--more-->\n<!-- /wp:more -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Mit dem Terminal arbeiten / Python-Installation prüfen</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Mit dem Terminal können wir unser Betriebssystem <em>textbasiert</em> steuern.&nbsp;Häufigster Vorbehalt gegen das Terminal&nbsp;ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:<ul><li>In <strong>Windows 8 und 10</strong> geht das mit einem Klick&nbsp;mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination&nbsp;[Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li><li>In <strong>Windows 7</strong> klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li><li>In vielen <strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li><li>Auf <strong>MacOS</strong>&nbsp;führt die&nbsp;Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li></ul></li><li>Nun&nbsp;prüfen wir, ob auf unserem Betriebssystem bereits die Programmiersprache <em>Python&nbsp;</em>installiert ist. Die Chancen stehen gut, denn MacOS und viele Linux-Distributionen bringen<em> Python</em> bereits mit. Gib im Terminal ein. Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version <em>Python</em> installiert ist. Wenn das der Fall ist, musst du an dieser Stelle nichts weiter tun (es ist egal, welche Python-Version du nutzt)!<br>Solltest du eine Fehlermeldung erhalten, musst du die Installation von Python für dein Betriebssystem nachholen (nächster Schritt).</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":286,\"align\":\"none\",\"className\":\"wp-image-286 size-full\"} -->\n<figure class=\"wp-block-image alignnone wp-image-286 size-full\"><img src=\"http://rike.dev/wordpress/wp-content/uploads/2017/07/Unbenannt.png\" alt=\"Python 2.7.10 auf macOS\" class=\"wp-image-286\"/><figcaption>Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:image {\"id\":282,\"align\":\"none\",\"className\":\"wp-image-282 size-full\"} -->\n<figure class=\"wp-block-image alignnone wp-image-282 size-full\"><img src=\"http://rike.dev/wordpress/wp-content/uploads/2017/07/Bild1.png\" alt=\"Windows Python\" class=\"wp-image-282\"/><figcaption>Dieses Windows-System hat leider noch keine Python-Installation vorliegen.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Python installieren (empfohlen: Version 3.x.x)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Python können wir wie ein normales Softwarepaket herunterladen und für unser Betriebssystem installieren. Die Programmiersprache ist Open-Source, das heißt kostenlos erhältlich.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Surfe zu&nbsp;https://www.python.org/downloads/ und lade den jüngsten Release von <em>Python 3</em>.xx herunter, momentan ist das <em>Python 3.6.2</em>. Achte darauf, dass du das Paket für dein Betriebssystem herunterlädst, normalerweise erkennt die Website dein Betriebssystem automatisch und schlägt dir die richtige Datei vor.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":275} -->\n<figure class=\"wp-block-image\"><img src=\"http://rike.dev/wordpress/wp-content/uploads/2017/07/py-screen.png\" alt=\"py-screen\" class=\"wp-image-275\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li>Installiere die Datei wie eine gewöhnliche Software, z. B. über Windows per Doppelklick auf die Datei \"python-3-6-2.exe\". Aktiviere die Auswahl \"Add Python 3.6 to PATH\" im ersten Installationsfenster!! Weitere Anpassungen musst du nicht durchführen. Im nächsten Schritt wird die Installation durchgeführt und du kannst den Installer verlassen.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":274} -->\n<figure class=\"wp-block-image\"><img src=\"http://rike.dev/wordpress/wp-content/uploads/2017/07/py-screen2.png\" alt=\"py-screen2\" class=\"wp-image-274\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li>Wenn Python richtig installiert wurde, kannst du die Python-Installation aus Schritt 2 noch einmal prüfen und solltest diesmal erfolgreich sein.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":277} -->\n<figure class=\"wp-block-image\"><img src=\"http://rike.dev/wordpress/wp-content/uploads/2017/07/line.png\" alt=\"line\" class=\"wp-image-277\"/></figure>\n<!-- /wp:image -->','Mit dem Terminal arbeiten und Python installieren','','inherit','closed','closed','','12-revision-v1','','','2019-04-09 18:08:29','2019-04-09 16:08:29','',12,'https://rike.dev/2019/04/09/12-revision-v1/',0,'revision','',0),(14,1,'2019-04-09 18:10:34','2019-04-09 16:10:34','','1','Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.','inherit','open','closed','','1','','','2019-04-09 18:10:58','2019-04-09 16:10:58','',12,'https://rike.dev/wp-content/uploads/2017/07/1.png',0,'attachment','image/png',0),(15,1,'2019-04-09 18:11:10','2019-04-09 16:11:10','','','Dieses Windows-System hat leider noch keine Python-Installation vorliegen.','inherit','open','closed','','2','','','2019-04-09 18:11:14','2019-04-09 16:11:14','',12,'https://rike.dev/wp-content/uploads/2017/07/2.png',0,'attachment','image/png',0),(16,1,'2019-04-09 18:11:30','2019-04-09 16:11:30','','','','inherit','open','closed','','3','','','2019-04-09 18:11:49','2019-04-09 16:11:49','',12,'https://rike.dev/wp-content/uploads/2017/07/3.png',0,'attachment','image/png',0),(17,1,'2019-04-09 18:11:59','2019-04-09 16:11:59','','4','','inherit','open','closed','','4','','','2019-04-09 18:12:05','2019-04-09 16:12:05','',12,'https://rike.dev/wp-content/uploads/2017/07/4.png',0,'attachment','image/png',0),(18,1,'2019-04-09 18:12:17','2019-04-09 16:12:17','<!-- wp:paragraph -->\n<p>In diesem Tutorial lernst du, wie du mit dem Terminal deines Betriebssystems arbeitest, die Programmiersprache installierst und testest. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" entstanden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:more -->\n<!--more-->\n<!-- /wp:more -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Mit dem Terminal arbeiten / Python-Installation prüfen</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Mit dem Terminal können wir unser Betriebssystem <em>textbasiert</em> steuern.&nbsp;Häufigster Vorbehalt gegen das Terminal&nbsp;ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:<ul><li>In <strong>Windows 8 und 10</strong> geht das mit einem Klick&nbsp;mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination&nbsp;[Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li><li>In <strong>Windows 7</strong> klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li><li>In vielen <strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li><li>Auf <strong>MacOS</strong>&nbsp;führt die&nbsp;Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li></ul></li><li>Nun&nbsp;prüfen wir, ob auf unserem Betriebssystem bereits die Programmiersprache <em>Python&nbsp;</em>installiert ist. Die Chancen stehen gut, denn MacOS und viele Linux-Distributionen bringen<em> Python</em> bereits mit. Gib im Terminal ein. Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version <em>Python</em> installiert ist. Wenn das der Fall ist, musst du an dieser Stelle nichts weiter tun (es ist egal, welche Python-Version du nutzt)!<br>Solltest du eine Fehlermeldung erhalten, musst du die Installation von Python für dein Betriebssystem nachholen (nächster Schritt).</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":14,\"align\":\"none\",\"className\":\"wp-image-286 size-full\"} -->\n<figure class=\"wp-block-image alignnone wp-image-286 size-full\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/1.png\" alt=\"Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.\" class=\"wp-image-14\"/><figcaption>Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:image {\"id\":15,\"align\":\"none\",\"className\":\"wp-image-282 size-full\"} -->\n<figure class=\"wp-block-image alignnone wp-image-282 size-full\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/2.png\" alt=\"Dieses Windows-System hat leider noch keine Python-Installation vorliegen.\" class=\"wp-image-15\"/><figcaption>Dieses Windows-System hat leider noch keine Python-Installation vorliegen.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Python installieren (empfohlen: Version 3.x.x)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Python können wir wie ein normales Softwarepaket herunterladen und für unser Betriebssystem installieren. Die Programmiersprache ist Open-Source, das heißt kostenlos erhältlich.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Surfe zu&nbsp;https://www.python.org/downloads/ und lade den jüngsten Release von <em>Python 3</em>.xx herunter, momentan ist das <em>Python 3.6.2</em>. Achte darauf, dass du das Paket für dein Betriebssystem herunterlädst, normalerweise erkennt die Website dein Betriebssystem automatisch und schlägt dir die richtige Datei vor.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":16} -->\n<figure class=\"wp-block-image\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/3-1024x423.png\" alt=\"Python Download\" class=\"wp-image-16\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li>Installiere die Datei wie eine gewöhnliche Software, z. B. über Windows per Doppelklick auf die Datei \"python-3-6-2.exe\". Aktiviere die Auswahl \"Add Python 3.6 to PATH\" im ersten Installationsfenster!! Weitere Anpassungen musst du nicht durchführen. Im nächsten Schritt wird die Installation durchgeführt und du kannst den Installer verlassen.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":17} -->\n<figure class=\"wp-block-image\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/4.png\" alt=\"Python Installation\" class=\"wp-image-17\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li>Wenn Python richtig installiert wurde, kannst du die Python-Installation aus Schritt 2 noch einmal prüfen und solltest diesmal erfolgreich sein.</li></ul>\n<!-- /wp:list -->','Mit dem Terminal arbeiten und Python installieren','','inherit','closed','closed','','12-revision-v1','','','2019-04-09 18:12:17','2019-04-09 16:12:17','',12,'https://rike.dev/2019/04/09/12-revision-v1/',0,'revision','',0),(19,1,'2019-04-09 18:12:57','2019-04-09 16:12:57','<!-- wp:paragraph -->\n<p>In diesem Tutorial lernst du, wie du mit dem Terminal deines Betriebssystems arbeitest, die Programmiersprache installierst und testest. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" entstanden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:more -->\n<!--more-->\n<!-- /wp:more -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Mit dem Terminal arbeiten / Python-Installation prüfen</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Mit dem Terminal können wir unser Betriebssystem <em>textbasiert</em> steuern.&nbsp;Häufigster Vorbehalt gegen das Terminal&nbsp;ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:<ul><li>In <strong>Windows 8 und 10</strong> geht das mit einem Klick&nbsp;mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination&nbsp;[Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li><li>In <strong>Windows 7</strong> klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li><li>In vielen <strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li><li>Auf <strong>MacOS</strong>&nbsp;führt die&nbsp;Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li></ul></li><li>Nun&nbsp;prüfen wir, ob auf unserem Betriebssystem bereits die Programmiersprache <em>Python&nbsp;</em>installiert ist. Die Chancen stehen gut, denn MacOS und viele Linux-Distributionen bringen<em> Python</em> bereits mit. Gib im Terminal ein. Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version <em>Python</em> installiert ist. Wenn das der Fall ist, musst du an dieser Stelle nichts weiter tun (es ist egal, welche Python-Version du nutzt)!<br>Solltest du eine Fehlermeldung erhalten, musst du die Installation von Python für dein Betriebssystem nachholen (nächster Schritt).</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":14,\"align\":\"center\",\"className\":\"wp-image-286 size-full\"} -->\n<div class=\"wp-block-image wp-image-286 size-full\"><figure class=\"aligncenter\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/1.png\" alt=\"Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.\" class=\"wp-image-14\"/><figcaption>Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.</figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:image {\"id\":15,\"align\":\"center\",\"className\":\"wp-image-282 size-full\"} -->\n<div class=\"wp-block-image wp-image-282 size-full\"><figure class=\"aligncenter\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/2.png\" alt=\"Dieses Windows-System hat leider noch keine Python-Installation vorliegen.\" class=\"wp-image-15\"/><figcaption>Dieses Windows-System hat leider noch keine Python-Installation vorliegen.</figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Python installieren (empfohlen: Version 3.x.x)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Python können wir wie ein normales Softwarepaket herunterladen und für unser Betriebssystem installieren. Die Programmiersprache ist Open-Source, das heißt kostenlos erhältlich.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Surfe zu&nbsp;https://www.python.org/downloads/ und lade den jüngsten Release von <em>Python 3</em>.xx herunter, momentan ist das <em>Python 3.6.2</em>. Achte darauf, dass du das Paket für dein Betriebssystem herunterlädst, normalerweise erkennt die Website dein Betriebssystem automatisch und schlägt dir die richtige Datei vor.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":16} -->\n<figure class=\"wp-block-image\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/3-1024x423.png\" alt=\"Python Download\" class=\"wp-image-16\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li>Installiere die Datei wie eine gewöhnliche Software, z. B. über Windows per Doppelklick auf die Datei \"python-3-6-2.exe\". Aktiviere die Auswahl \"Add Python 3.6 to PATH\" im ersten Installationsfenster!! Weitere Anpassungen musst du nicht durchführen. Im nächsten Schritt wird die Installation durchgeführt und du kannst den Installer verlassen.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":17,\"align\":\"center\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/4.png\" alt=\"Python Installation\" class=\"wp-image-17\"/></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li>Wenn Python richtig installiert wurde, kannst du die Python-Installation aus Schritt 2 noch einmal prüfen und solltest diesmal erfolgreich sein.</li></ul>\n<!-- /wp:list -->','Mit dem Terminal arbeiten und Python installieren','','inherit','closed','closed','','12-revision-v1','','','2019-04-09 18:12:57','2019-04-09 16:12:57','',12,'https://rike.dev/2019/04/09/12-revision-v1/',0,'revision','',0),(20,1,'2017-07-29 18:13:00','2017-07-29 16:13:00','<!-- wp:paragraph -->\r\n<p>In diesem Tutorial geht es darum, den auf Python basierenden SimpleHTTP-Server zu installieren und zu testen. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" entstanden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:more -->\r\n<p><!--more--></p>\r\n<!-- /wp:more -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Je nachdem, welche Python-Version auf deinem Betriebssystem installiert ist, befolge die weiteren Schritte zur Installation eines kleinen Webservers auf deinem Computer. Wie du die Python-Version identifizierst, lernst du <a href=\"http://rike.dev/2017/07/28/der-terminal-und-python-installieren/\">in diesem Tutorial</a>.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Lege auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest. Den Ort kannst du beliebig festlegen.</li>\r\n<li>Innerhalb dieses Ordners lege eine neue Datei an (in Windows z. B. per Rechtsklick: \"Neues Textdokument\")!</li>\r\n<li>Benenne die Datei um in \"index.html\"!</li>\r\n<li>Öffne die Datei in einem Texteditor (z. B. \"Sublime\") und füge einen beliebigen Text ein, z. B. \"Hello World!\"</li>\r\n<li>Öffne ein neues Terminal-Fenster (es ist kein Problem, mehrere Terminal-Fenster parallel laufen zu lassen) und navigiere zum neu angelegten Ordner. Der Befehl dazu lautet \"cd\" gefolgt vom entsprechenden Pfad.</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Für ein Windows-System könnte der Befehl so lauten:</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Webentwicklung</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Für ein macOS-System wäre dies ein Beispiel-Befehl:</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Webentwicklung</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Wenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Da wir Python installiert haben, und Python in der Standardausführung bereits ein kleines \"Werkzeug\" für einen einfach Webserver mitbringt, müssen wir diesen Webserver jetzt nur noch starten.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Anleitung für Python 2.x.x</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Prüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">python -m SimpleHTTPServer</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Solltest du eine Warnmeldung von deiner Firewall erhalten, klicke auf \"Ok\" bzw. \"Zulassen\".</li>\r\n<li>Navigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:8000/\">http://127.0.0.1:8000/</a>.  Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. \"Hello World\".</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Glückwunsch! Du hast deinen ersten lokalen Webserver eingerichtet!</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Anleitung für Python 3.x.x</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Prüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">python -m http.server</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Solltest du eine Warnmeldung von deiner Firewall erhalten, klicke auf \"Ok\" bzw. \"Zulassen\".</li>\r\n<li>Navigiere in deinem Browser zur URL http://127.0.0.1:8000/. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. \"Hello World\".</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:image {\"id\":21,\"align\":\"center\",\"linkDestination\":\"media\",\"className\":\"wp-image-291 size-full imagedropshadow\"} -->\r\n<div class=\"wp-block-image wp-image-291 size-full imagedropshadow\">\r\n<figure class=\"aligncenter\"><a class=\"\" href=\"https://rike.dev/wp-content/uploads/2019/04/5.png\"><img class=\"wp-image-21\" src=\"https://rike.dev/wp-content/uploads/2019/04/5.png\" alt=\"&quot;Hello World&quot; im Browser unter der lokalen URL http://127.0.0.1:8000/\" /></a>\r\n<figcaption>\"Hello World\" im Browser unter der lokalen URL http://127.0.0.1:8000/</figcaption>\r\n</figure>\r\n</div>\r\n<!-- /wp:image -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Den Webserver stoppen</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Den gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL http://127.0.0.1:8000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.</li>\r\n</ul>\r\n<!-- /wp:list -->','Einen einfachen Webserver mit Python 2.x.x oder 3.x.x installieren','','publish','open','open','','einen-einfachen-webserver-mit-python-2-x-x-oder-3-x-x-installieren','','','2019-06-19 11:50:14','2019-06-19 09:50:14','',0,'https://rike.dev/?p=20',0,'post','',0),(21,1,'2019-04-09 18:14:12','2019-04-09 16:14:12','','','\"Hello World\" im Browser unter der lokalen URL http://127.0.0.1:8000/','inherit','open','closed','','5','','','2019-04-09 18:14:16','2019-04-09 16:14:16','',20,'https://rike.dev/wp-content/uploads/2019/04/5.png',0,'attachment','image/png',0),(22,1,'2019-04-09 18:15:21','2019-04-09 16:15:21','<!-- wp:paragraph -->\n<p>In diesem Tutorial geht es darum, den auf Python basierenden SimpleHTTP-Server zu installieren und zu testen.&nbsp;Dieses Tutorial ist im Rahmen der Bremer&nbsp;<a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a>&nbsp;für den Kurs \"Einführung in die modere Webentwicklung\" entstanden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:more -->\n<!--more-->\n<!-- /wp:more -->\n\n<!-- wp:paragraph -->\n<p>Je nachdem, welche Python-Version auf deinem Betriebssystem installiert ist, befolge die weiteren Schritte zur Installation eines kleinen Webservers auf deinem Computer. Wie du die Python-Version identifizierst, lernst du <a href=\"http://rike.dev/2017/07/28/der-terminal-und-python-installieren/\">in diesem Tutorial</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Lege&nbsp;auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest. Den Ort kannst du beliebig festlegen.</li><li>Innerhalb dieses Ordners lege eine neue Datei an (in Windows z. B. per Rechtsklick: \"Neues Textdokument\")!</li><li>Benenne die Datei um in \"index.html\"!</li><li>Öffne die Datei in einem Texteditor (z. B. \"Sublime\") und füge einen beliebigen Text ein, z. B. \"Hello World!\"</li><li>Öffne ein neues Terminal-Fenster (es ist kein Problem, mehrere Terminal-Fenster parallel laufen zu lassen) und navigiere zum neu angelegten Ordner. Der Befehl dazu lautet \"cd\" gefolgt vom entsprechenden Pfad.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Für ein Windows-System könnte der Befehl so lauten:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Webentwicklung</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>Für ein macOS-System wäre dies ein Beispiel-Befehl:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Webentwicklung</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>Wenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Da wir Python installiert haben, und Python in der Standardausführung bereits ein kleines \"Werkzeug\" für einen einfach Webserver mitbringt, müssen wir diesen Webserver jetzt nur noch starten.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Anleitung für Python 2.x.x</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>Prüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">python -m SimpleHTTPServer</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<ul><li>Solltest du eine Warnmeldung von deiner Firewall erhalten, klicke auf \"Ok\" bzw. \"Zulassen\".</li><li>Navigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:8000/\">http://127.0.0.1:8000/</a>. &nbsp;Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. \"Hello World\".</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Glückwunsch! Du hast deinen ersten lokalen Webserver eingerichtet!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Anleitung für Python 3.x.x</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>Prüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">python -m http.server</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<ul><li>Solltest du eine Warnmeldung von deiner Firewall erhalten, klicke auf \"Ok\" bzw. \"Zulassen\".</li><li>Navigiere in deinem Browser zur URL http://127.0.0.1:8000/. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. \"Hello World\".</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":21,\"align\":\"none\",\"className\":\"wp-image-291 size-full\"} -->\n<figure class=\"wp-block-image alignnone wp-image-291 size-full\"><img src=\"https://rike.dev/wp-content/uploads/2019/04/5.png\" alt=\"&quot;Hello World&quot; im Browser unter der lokalen URL http://127.0.0.1:8000/\" class=\"wp-image-21\"/><figcaption>\"Hello World\" im Browser unter der lokalen URL http://127.0.0.1:8000/</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:heading -->\n<h2>Den Webserver stoppen</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>Den gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL&nbsp;http://127.0.0.1:8000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.</li></ul>\n<!-- /wp:list -->','Einen einfachen Webserver mit Python 2.x.x oder 3.x.x installieren','','inherit','closed','closed','','20-revision-v1','','','2019-04-09 18:15:21','2019-04-09 16:15:21','',20,'https://rike.dev/2019/04/09/20-revision-v1/',0,'revision','',0),(23,1,'2019-04-09 18:15:46','2019-04-09 16:15:46','<!-- wp:paragraph -->\n<p>In diesem Tutorial geht es darum, den auf Python basierenden SimpleHTTP-Server zu installieren und zu testen.&nbsp;Dieses Tutorial ist im Rahmen der Bremer&nbsp;<a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a>&nbsp;für den Kurs \"Einführung in die modere Webentwicklung\" entstanden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:more -->\n<!--more-->\n<!-- /wp:more -->\n\n<!-- wp:paragraph -->\n<p>Je nachdem, welche Python-Version auf deinem Betriebssystem installiert ist, befolge die weiteren Schritte zur Installation eines kleinen Webservers auf deinem Computer. Wie du die Python-Version identifizierst, lernst du <a href=\"http://rike.dev/2017/07/28/der-terminal-und-python-installieren/\">in diesem Tutorial</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Lege&nbsp;auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest. Den Ort kannst du beliebig festlegen.</li><li>Innerhalb dieses Ordners lege eine neue Datei an (in Windows z. B. per Rechtsklick: \"Neues Textdokument\")!</li><li>Benenne die Datei um in \"index.html\"!</li><li>Öffne die Datei in einem Texteditor (z. B. \"Sublime\") und füge einen beliebigen Text ein, z. B. \"Hello World!\"</li><li>Öffne ein neues Terminal-Fenster (es ist kein Problem, mehrere Terminal-Fenster parallel laufen zu lassen) und navigiere zum neu angelegten Ordner. Der Befehl dazu lautet \"cd\" gefolgt vom entsprechenden Pfad.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Für ein Windows-System könnte der Befehl so lauten:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Webentwicklung</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>Für ein macOS-System wäre dies ein Beispiel-Befehl:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Webentwicklung</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>Wenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Da wir Python installiert haben, und Python in der Standardausführung bereits ein kleines \"Werkzeug\" für einen einfach Webserver mitbringt, müssen wir diesen Webserver jetzt nur noch starten.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Anleitung für Python 2.x.x</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>Prüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">python -m SimpleHTTPServer</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<ul><li>Solltest du eine Warnmeldung von deiner Firewall erhalten, klicke auf \"Ok\" bzw. \"Zulassen\".</li><li>Navigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:8000/\">http://127.0.0.1:8000/</a>. &nbsp;Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. \"Hello World\".</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Glückwunsch! Du hast deinen ersten lokalen Webserver eingerichtet!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Anleitung für Python 3.x.x</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>Prüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">python -m http.server</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<ul><li>Solltest du eine Warnmeldung von deiner Firewall erhalten, klicke auf \"Ok\" bzw. \"Zulassen\".</li><li>Navigiere in deinem Browser zur URL http://127.0.0.1:8000/. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. \"Hello World\".</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":21,\"align\":\"center\",\"className\":\"wp-image-291 size-full\"} -->\n<div class=\"wp-block-image wp-image-291 size-full\"><figure class=\"aligncenter\"><img src=\"https://rike.dev/wp-content/uploads/2019/04/5.png\" alt=\"&quot;Hello World&quot; im Browser unter der lokalen URL http://127.0.0.1:8000/\" class=\"wp-image-21\"/><figcaption>\"Hello World\" im Browser unter der lokalen URL http://127.0.0.1:8000/</figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:heading -->\n<h2>Den Webserver stoppen</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>Den gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL&nbsp;http://127.0.0.1:8000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.</li></ul>\n<!-- /wp:list -->','Einen einfachen Webserver mit Python 2.x.x oder 3.x.x installieren','','inherit','closed','closed','','20-revision-v1','','','2019-04-09 18:15:46','2019-04-09 16:15:46','',20,'https://rike.dev/2019/04/09/20-revision-v1/',0,'revision','',0),(24,1,'2017-09-15 18:15:59','2017-09-15 16:15:59','<!-- wp:paragraph -->\r\n<p>Gegenstand des Beitrags ist die Analyse sowie die Erhebung und Strukturierung von Medieninformatik-Studiengängen und verwandten Studiengängen in der DACH-Region für die Dokumentation in einem neuen Web-Portal. Überlegungen zur Zielgruppen- und Benutzungsanalyse sowie zur Auswahl der Indexierungsmethodik liefern die Grundlage für die Konzeption und Umsetzung des Web-Portals.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Der Beitrag ist im Rahmen der \"Mensch und Computer 2017\" – (10.–13. September 2017, Regensburg) entstanden. Der Volltext ist Open Access <a href=\"https://doi.org/10.18420/muc2017-ws10-0291\">hier</a> zu finden.</p>\r\n<!-- /wp:paragraph -->','Analyse und Konzeption für ein Medieninformatik-Web-Portal','','publish','open','open','','analyse-und-konzeption-fuer-ein-medieninformatik-web-portal','','','2019-04-20 11:21:59','2019-04-20 09:21:59','',0,'https://rike.dev/?p=24',0,'post','',0),(25,1,'2019-04-09 18:16:48','2019-04-09 16:16:48','<!-- wp:paragraph -->\n<p>Gegenstand des Beitrags ist die Analyse sowie die Erhebung und Strukturierung von Medieninformatik-Studiengängen und verwandten Studiengängen in der DACH-Region für die Dokumentation in einem neuen Web-Portal. Überlegungen zur Zielgruppen- und Benutzungsanalyse sowie zur Auswahl der Indexierungsmethodik liefern die Grundlage für die Konzeption und Umsetzung des Web-Portals.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Der Beitrag ist im Rahmen der \"Mensch und Computer 2017\" – (10.–13. September 2017, Regensburg) entstanden. Der Volltext ist Open Access <a href=\"https://doi.org/10.18420/muc2017-ws10-0291\">hier</a> zu finden.</p>\n<!-- /wp:paragraph -->','Analyse und Konzeption für ein Medieninformatik-Web-Portal','','inherit','closed','closed','','24-revision-v1','','','2019-04-09 18:16:48','2019-04-09 16:16:48','',24,'https://rike.dev/2019/04/09/24-revision-v1/',0,'revision','',0),(26,1,'2016-04-20 11:16:16','2016-04-20 09:16:16','<!-- wp:paragraph -->\r\n<p>Ich fürchte, vielen Menschen ist nicht bewusst, welche überraschenden Produkte der Print-Journalismus noch immer hervorbringt. Dem kann nicht schnell genug Abhilfe verschafft werden: Es folgen sechs einfallsreiche Zeitschriftentitel, die aufgrund ihrer Spezifität oder begrenzten Verbreitung noch nicht zu dem Ruhm gekommen sind, der ihnen zusteht.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:more -->\r\n<p><!--more--></p>\r\n<!-- /wp:more -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Der Schädelspalter</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>\"Was soll ich in New York - ich war schon zweimal in Hannover.\" Arno Schmidt fand einst wärmende Wort für diese verkannte deutsche Mittelgroßstadt. Dass dort auch Schädel gespalten werden, hat er allerdings verschwiegen. Der martialische Titel gehört zu einem bunten Veranstaltungsmagazin. <a href=\"http://www.schaedelspalter.de\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.schaedelspalter.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Laber-Zeitung</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Die \"Allgemeine Laber-Zeitung\" kann leider wenig für ihren Namen. Ein Schenkelklopfer ist dieser trotzdem, benannt wurde das Blatt nach der \"Großen Laber\", einem Nebenfluss der Donau. <a href=\"http://www.idowa.de/zeitung/allgemeine-laber-zeitung\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.idowa.de/zeitung/allgemeine-laber-zeitung</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Pillerseebote</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><strong> «</strong>\"Pillern\" ist ein österreichischer Mundartausdruck, der ein Phänomen beschreibt, das meist im Frühjahr oder bei Unwettern auftritt, wo ein See anfängt eigentümlich zu brausen oder eben zu \"pillern\".<strong>»</strong> ( <a href=\"http://de.wikipedia.org/wiki/Pillersee\" target=\"_blank\" rel=\"noreferrer noopener\">Wikipedia</a>) Hieraus entstand der Name eines Gebirgsees in den nördlichen Kalkalpen und daran angelehnt der poetische Name des örtlichen Anzeigenblatts. <a href=\"https://ersi.at/pillerseebote-pibo/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.ersi.at/zeitungen/pibo</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Gute Pillen Schlechte Pillen</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Nein, das ist kein Magazin, das in der örtlichen Drogenberatung ausliegt. Phonetisch ein naher Verwandter des \"Pillerseeboten\" richtet sich diese modern verpackte Special-Interest-Zeitschrift an pharmazeutisch Interessierte. Ob bei der Gründung eine bekannte deutsche Vorabendserie Pate stand, ist leider nicht bekannt. <a href=\"http://www.gutepillen-schlechtepillen.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.gutepillen-schlechtepillen.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Gour-med</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Überraschend groß ist der Markt für Zeitschriften, die eigentlich jeden interessieren könnten, aber sich trotzdem nur an eine Elite-Zielgruppe richten. Dabei heraus kommen kann dann schon mal die Wortschöpfung \"Gour-med\" - der Name einer Zeitschrift für die kulinarischen Begierden von Ärzt_innen. <a href=\"http://www.gour-med.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.gour-med.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3>Der Bauschaden</h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Technische Fachzeitschriften brillieren häufig durch so prägnante, wie unumständliche Titel wie \"Der Plastverarbeiter\" oder \"Der fortschrittliche Landwirt\". Hier zählen schließlich noch die Inhalte und nicht die Verpackung! Herausragend präzise benannt ist meiner Meinung nach die \"Fachzeitschrift zur Beurteilung, Sanierung und Vermeidung von Bauschäden\" - der Name ist Programm. Hier werden Probleme noch angepackt. <a href=\"http://www.derbauschaden.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.derbauschaden.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Die Rosette</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Ein Regensburger Pfarrbrief heißt \"Die Rosette\". Keine Pointe. <a href=\"http://www.wolfgangskirche-regensburg.de/index.php/aktuelles/pfarrbrief/archiv-der-rosette.html\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.wolfgangskirche-regensburg.de/</a></p>\r\n<!-- /wp:paragraph -->','\"Der Schädelspalter\" - eine besondere Auswahl deutscher Zeitschriftentitel','','publish','open','open','','der-schadelspalter-eine-besondere-auswahl-deutscher-zeitschriftentitel','','','2019-04-20 11:22:07','2019-04-20 09:22:07','',0,'https://rike.dev/?p=26',0,'post','',0),(27,1,'2019-04-09 18:18:00','2019-04-09 16:18:00','<!-- wp:paragraph -->\n<p><em>Ich fürchte, vielen Menschen ist nicht bewusst, welche überraschenden Produkte der Print-Journalismus noch immer hervorbringt. Dem kann nicht schnell genug Abhilfe verschafft werden: Es folgen sechs einfallsreiche Zeitschriftentitel, die aufgrund ihrer Spezifität oder begrenzten Verbreitung noch nicht zu dem Ruhm gekommen sind, der ihnen zusteht.</em> </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:more -->\n<!--more-->\n<!-- /wp:more -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>Der Schädelspalter</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\"Was soll ich in New York - ich war schon zweimal in Hannover.\" Arno Schmidt fand einst wärmende Wort für diese verkannte deutsche Mittelgroßstadt. Dass dort auch Schädel gespalten werden, hat er allerdings verschwiegen. Der martialische Titel gehört zu einem bunten Veranstaltungsmagazin.<a href=\"http://www.schaedelspalter.de\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.schaedelspalter.de/</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>Laber-Zeitung</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Die \"Allgemeine Laber-Zeitung\" kann leider wenig für ihren Namen. Ein Schenkelklopfer ist dieser trotzdem, benannt wurde das Blatt nach der \"Großen Laber\", einem Nebenfluss der Donau.<a href=\"http://www.idowa.de/zeitung/allgemeine-laber-zeitung\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.idowa.de/zeitung/allgemeine-laber-zeitung</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>Pillerseebote</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p><strong> «</strong>\"Pillern\" ist ein österreichischer Mundartausdruck, der ein Phänomen beschreibt, das meist im Frühjahr oder bei Unwettern auftritt, wo ein See anfängt eigentümlich zu brausen oder eben zu \"pillern\".<strong>»</strong> ( <a href=\"http://de.wikipedia.org/wiki/Pillersee\" target=\"_blank\" rel=\"noreferrer noopener\">Wikipedia</a>) Hieraus entstand der Name eines Gebirgsees in den nördlichen Kalkalpen und daran angelehnt der poetische Name des örtlichen Anzeigenblatts.<a href=\"http://www.ersi.at/zeitungen/pibo\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.ersi.at/zeitungen/pibo</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>Gute Pillen Schlechte Pillen</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Nein, das ist kein Magazin, das in der örtlichen Drogenberatung ausliegt. Phonetisch ein naher Verwandter des \"Pillerseeboten\" richtet sich diese modern verpackte Special-Interest-Zeitschrift an pharmazeutisch Interessierte. Ob bei der Gründung eine bekannte deutsche Vorabendserie Pate stand, ist leider nicht bekannt.<a href=\"http://www.gutepillen-schlechtepillen.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.gutepillen-schlechtepillen.de/</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>Gour-med</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Überraschend groß ist der Markt für Zeitschriften, die eigentlich jeden interessieren könnten, aber sich trotzdem nur an eine Elite-Zielgruppe richten. Dabei heraus kommen kann dann schon mal die Wortschöpfung \"Gour-med\" - der Name einer Zeitschrift für die kulinarischen Begierden von Ärzt_innen.<a href=\"http://www.gour-med.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.gour-med.de/</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Der Bauschaden</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Technische Fachzeitschriften brillieren häufig durch so prägnante, wie unumständliche Titel wie \"Der Plastverarbeiter\" oder \"Der fortschrittliche Landwirt\". Hier zählen schließlich noch die Inhalte und nicht die Verpackung! Herausragend präzise benannt ist meiner Meinung nach die \"Fachzeitschrift zur Beurteilung, Sanierung und Vermeidung von Bauschäden\" - der Name ist Programm. Hier werden Probleme noch angepackt.<a href=\"http://www.derbauschaden.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.derbauschaden.de/</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>Die Rosette</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Ein Regensburger Pfarrbrief heißt \"Die Rosette\". Keine Pointe.<a href=\"http://www.wolfgangskirche-regensburg.de/aktuelles/pfarrbrief/archiv-der-rosette.html\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.wolfgangskirche-regensburg.de/</a></p>\n<!-- /wp:paragraph -->','\"Der Schädelspalter\" - eine besondere Auswahl deutscher Zeitschriftentitel','','inherit','closed','closed','','26-revision-v1','','','2019-04-09 18:18:00','2019-04-09 16:18:00','',26,'https://rike.dev/2019/04/09/26-revision-v1/',0,'revision','',0),(28,1,'2019-04-20 11:10:26','0000-00-00 00:00:00','<!-- wp:paragraph -->\r\n<p><strong>Fan-Sein im Jahr 1990?</strong> Das bedeutete akribisch geführte Fan-Sammlungen aus Postern, Merchandising und liebevoll gestaltete Ordner und Hefte mit selbst recherchierten und eingeklebten Texten und Bildern. Fan-Sein ab 2000 dagegen eröffnete dank des gerade in den Pionierjahren befindlichen Internets eine neue und sehr kreative Form der Fan-Vernetzung.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:more -->\r\n<p><!--more--></p>\r\n<!-- /wp:more -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Wer als Teenager ab 2000 auf der Suche nach Seelenverwandten und Infos über seine Idole im Web unterwegs war, stieß unweigerlich auf zahllose Fan-Communities jeder Art. Heißgeliebte Portale für Fanfiction (<em>fanfiction.net</em>, seit 1998), Fanart (<em>deviantart</em>, seit 2000) oder auch Fansites (<em>thefanlistings.org</em>, seit 2001) wurden alle um die Jahrtausendwende gegründet. Die offiziellen Fanpages konnten das Bedürfnis nach Information und Entertainment nämlich kaum stillen.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:image {\"id\":596,\"align\":\"left\"} -->\r\n<div class=\"wp-block-image\">\r\n<figure class=\"alignleft\"><a href=\"http://www.analoga.org/wp-content/uploads/2014/08/Layout1.jpg\"><img class=\"wp-image-596\" src=\"http://www.analoga.org/wp-content/uploads/2014/08/Layout1.jpg\" alt=\"Eine alte Harry-Potter-Fanseite\" /></a>\r\n<figcaption>Screenshot meiner ältesten Harry-Potter-Fanseite: Rundum schön mit Frames, Buttons und durchlaufender Begrüßung (um 2001).</figcaption>\r\n</figure>\r\n</div>\r\n<!-- /wp:image -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Deshalb entstand zu dieser Zeit ein riesiges Angebot privat geführter kleiner und hochspezialisierter Fanpages, die sich in Kreativität und Leidenschaftlichkeit gegenseitig überboten. Die neuen technischen Möglichkeiten des Internets beflügelten alle, die schon alt genug waren, sich eingehender mit ihrem Computer zu beschäftigen und noch jung genug, dafür sehr viel Zeit und Liebe aufzubringen. Die jungen Kreativen wurden im frühen Web, das nicht mehr 1.0, aber auch noch nicht 2.0 war, von Konsument_innen zu Produzent_innen und ihr Fan-Sein war ihr Katalysator: Es existierten Fansites für Sänger_innen, Bands und Schauspieler_innen, für Bücher, Filme, Games, Animes, Manga und deren Protagonist_innen (\"Fan-Shrines\"), das Angebot umfasste auch Clan-Pages, (RPG-) Foren und ganz eigene Universen, wie z. B. die unzähligen Online-\"Zauberschulen\", die der Harry-Potter-Fankult hervorgebracht hatte.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Wer waren die Menschen hinter diesen Websites? Diese Community aus jungen Designer_innen und Webprogrammierer_innen entstand aus dem einfachen Wunsch heraus, dem eigenen Fan-Sein Ausdruck zu verleihen: Wer etwas auf sich hielt, bastelte alles selbst. Die ersten Freehoster, der WYSIWYG-Phase 5-HTML-Editor, ein FTP-Client und irgendeine illegal gesaugte Bildbearbeitungssoftware machten es möglich. Noch heute kommen manchen Webmastern von damals Tränen der Nostalgie bei der bloßen Erwähnung von <em>geocities</em>. Baukasten-Systeme wie <em>beepworld</em> hingegen waren keine Option.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:image {\"id\":606,\"align\":\"left\"} -->\r\n<div class=\"wp-block-image\">\r\n<figure class=\"alignleft\"><a href=\"http://www.analoga.org/wp-content/uploads/2014/08/kamikaze.jpg\"><img class=\"wp-image-606\" src=\"http://www.analoga.org/wp-content/uploads/2014/08/kamikaze.jpg\" alt=\"Grafik aus Manga &amp; Anime\" /></a>\r\n<figcaption>Outputstark: Die GFX-Szene mit Manga &amp; Anime-Vorlieben</figcaption>\r\n</figure>\r\n</div>\r\n<!-- /wp:image -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Für manche nahm der kreative Output kein Ende. Ihre Produktivität, was Coding und Design anging, überstieg ihren eigenen Bedarf bei Weitem. Daraus entstand die GFX- (\"graphics\"-) Szene, blutjunge Menschen, die Grafiken, Code-Schnipsel, Tutorials und komplette Muster-Homepages für andere bereit stellten - und zwar kostenlos.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Besonders outputstark war aus meiner damaligen Sicht in diesem Bereich die Anime-/Mangaszene. Geschätzt hunderte Ableger entstanden aus einigen großen, fast schon professional arbeitenden Portalen. Ich war 14 Jahre alt, als ich Mitglied bei <em>www.crystal-graphics.de</em> wurde - meine Mitstreiterinnen, und es handelte sich in der Tat um ein rein weibliches Team - waren im selben Alter. Wir waren unsere Vorbilder, lernten voneinander, wuchsen gemeinsam. Das Portal für \"free graphics\" arbeitete mit eigens gecodetem passwortgeschützten Mitgliederbereich und Content-Management-System. In der Community entwickelten sich eigene Design-Standards (\"Table-\", \"DIV-\" oder \"Pop-Up-Layouts\" und ein Vokabular für Homepage-Elemente (\"Bishies\", \"Splashes\", \"Brushes\", \"(Cyber-)Stamps\", \"Awards\" ..), das heute kurz davor ist, in Vergessenheit zu geraten.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:image {\"id\":604,\"align\":\"center\"} -->\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter\"><a href=\"http://www.analoga.org/wp-content/uploads/2014/08/layou5.jpg\"><img class=\"wp-image-604\" src=\"http://www.analoga.org/wp-content/uploads/2014/08/layou5.jpg\" alt=\"Anime GFX Layout\" /></a>\r\n<figcaption>Ein typisches Anime-GFX Layout (um 2003)</figcaption>\r\n</figure>\r\n</div>\r\n<!-- /wp:image -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Also was ist es, was bleibt? Heute vernetzen sich Jugendliche und Fandoms eher über die wesentlich komfortableren Sozialen Medien, die zwar viel Medienkompetenz, aber weniger technisches Know-How abverlangen. Jeder, der seinen Helden ein digitales Denkmal setzen und eine eigene private Website aufbauen möchte, hat mit Wordpress, Joomla und anderer toller Open-Source-Software und kostenlosen Themes schnell und einfach die Gelegenheit dazu. Die Fan- und GFX-Seiten von damals sind fast obsolet geworden und ihre Betreiber_innen sind heute erwachsene Frauen und Männer, die sicher nicht selten ihr Hobby zum Beruf machten.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><em>Leider konnte ich nach über zehn Jahren niemandem aus dem alten Crystal-Graphics-Team erreichen. Nur zu gern würde ich andere (eure!) Geek-Geschichten von damals hören, egal in welchem Fandom ihr zu Hause wart, ob mit oder ohne eigener Homepage. Es gibt sicher viel mehr zu erzählen, als das <a href=\"https://web.archive.org/web/*/http://www.crystal-graphics.de/\" target=\"_blank\" rel=\"noreferrer noopener\">Internet Archive</a> jemals dokumentieren könnte.</em></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><em> ♥ Für aktuelle Infos rund um die Szene ist </em><em><a href=\"http://pinkpearlinfo.blogspot.de\" target=\"_blank\" rel=\"noreferrer noopener\">Pinkpearlinfo</a> eine gute Anlaufstelle. Das Blog gehört zu <a href=\"http://www.thepinkpearl.de/\" target=\"_blank\" rel=\"noreferrer noopener\">Pinkpearl</a>, einer Anima-Grafik-Seite, die noch rege betrieben wird.<br /></em></p>\r\n<!-- /wp:paragraph -->','Digitale Fankultur: Wer das Web um 2000 leidenschaftlich mitgestaltete','','draft','open','open','','','','','2019-04-20 11:10:26','2019-04-20 09:10:26','',0,'https://rike.dev/?p=28',0,'post','',0),(29,1,'2019-04-09 18:18:22','2019-04-09 16:18:22','<!-- wp:paragraph -->\n<p><strong>Fan-Sein im Jahr 1990?</strong> Das bedeutete akribisch geführte Fan-Sammlungen aus Postern, Merchandising und liebevoll gestaltete Ordner und Hefte mit selbst recherchierten und eingeklebten Texten und Bildern. Fan-Sein ab 2000 dagegen eröffnete dank des gerade in den Pionierjahren befindlichen Internets eine neue und sehr kreative Form der Fan-Vernetzung.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:more -->\n<!--more-->\n<!-- /wp:more -->\n\n<!-- wp:paragraph -->\n<p>Wer als Teenager ab 2000 auf der Suche nach Seelenverwandten und Infos über seine Idole im Web unterwegs war, stieß unweigerlich auf zahllose Fan-Communities jeder Art. Heißgeliebte Portale für Fanfiction (<em>fanfiction.net</em>, seit 1998), Fanart (<em>deviantart</em>, seit 2000) oder auch Fansites (<em>thefanlistings.org</em>, seit 2001) wurden alle um die Jahrtausendwende gegründet. Die offiziellen Fanpages konnten das Bedürfnis nach Information und Entertainment nämlich kaum stillen.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":596,\"align\":\"left\"} -->\n<div class=\"wp-block-image\"><figure class=\"alignleft\"><a href=\"http://www.analoga.org/wp-content/uploads/2014/08/Layout1.jpg\"><img src=\"http://www.analoga.org/wp-content/uploads/2014/08/Layout1.jpg\" alt=\"Eine alte Harry-Potter-Fanseite\" class=\"wp-image-596\"/></a><figcaption>Screenshot meiner ältesten Harry-Potter-Fanseite: Rundum schön mit Frames, Buttons und durchlaufender Begrüßung (um 2001).</figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Deshalb entstand zu dieser Zeit ein riesiges Angebot privat geführter kleiner und hochspezialisierter Fanpages, die sich in Kreativität und Leidenschaftlichkeit gegenseitig überboten. Die neuen technischen Möglichkeiten des Internets beflügelten alle, die schon alt genug waren, sich eingehender mit ihrem Computer zu beschäftigen und noch jung genug, dafür sehr viel Zeit und Liebe aufzubringen. Die jungen Kreativen wurden im frühen Web, das nicht mehr 1.0, aber auch noch nicht 2.0 war, von Konsument_innen zu Produzent_innen und ihr Fan-Sein war ihr Katalysator: Es existierten Fansites für Sänger_innen, Bands und Schauspieler_innen, für Bücher, Filme, Games, Animes, Manga und deren Protagonist_innen (\"Fan-Shrines\"), das Angebot umfasste auch Clan-Pages, (RPG-) Foren und ganz eigene Universen, wie z. B. die unzähligen Online-\"Zauberschulen\", die der Harry-Potter-Fankult hervorgebracht hatte.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Wer waren die Menschen hinter diesen Websites? Diese Community aus jungen Designer_innen und Webprogrammierer_innen entstand aus dem einfachen Wunsch heraus, dem eigenen Fan-Sein Ausdruck zu verleihen: Wer etwas auf sich hielt, bastelte alles selbst. Die ersten Freehoster, der WYSIWYG-Phase 5-HTML-Editor, ein FTP-Client und irgendeine illegal gesaugte Bildbearbeitungssoftware machten es möglich. Noch heute kommen manchen Webmastern von damals Tränen der Nostalgie bei der bloßen Erwähnung von <em>geocities</em>. Baukasten-Systeme wie <em>beepworld</em> hingegen waren keine Option.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":606,\"align\":\"left\"} -->\n<div class=\"wp-block-image\"><figure class=\"alignleft\"><a href=\"http://www.analoga.org/wp-content/uploads/2014/08/kamikaze.jpg\"><img src=\"http://www.analoga.org/wp-content/uploads/2014/08/kamikaze.jpg\" alt=\"Grafik aus Manga &amp; Anime\" class=\"wp-image-606\"/></a><figcaption>Outputstark: Die GFX-Szene mit Manga &amp; Anime-Vorlieben</figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Für manche nahm der kreative Output kein Ende. Ihre Produktivität, was Coding und Design anging, überstieg ihren eigenen Bedarf bei Weitem. Daraus entstand die GFX- (\"graphics\"-) Szene, blutjunge Menschen, die Grafiken, Code-Schnipsel, Tutorials und komplette Muster-Homepages für andere bereit stellten - und zwar kostenlos.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Besonders outputstark war aus meiner damaligen Sicht in diesem Bereich die Anime-/Mangaszene. Geschätzt hunderte Ableger entstanden aus einigen großen, fast schon professional arbeitenden Portalen. Ich war 14 Jahre alt, als ich Mitglied bei <em>www.crystal-graphics.de</em> wurde - meine Mitstreiterinnen, und es handelte sich in der Tat um ein rein weibliches Team - waren im selben Alter. Wir waren unsere Vorbilder, lernten voneinander, wuchsen gemeinsam. Das Portal für \"free graphics\" arbeitete mit eigens gecodetem passwortgeschützten Mitgliederbereich und Content-Management-System. In der Community entwickelten sich eigene Design-Standards (\"Table-\", \"DIV-\" oder \"Pop-Up-Layouts\" und ein Vokabular für Homepage-Elemente (\"Bishies\", \"Splashes\", \"Brushes\", \"(Cyber-)Stamps\", \"Awards\" ..), das heute kurz davor ist, in Vergessenheit zu geraten.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":604,\"align\":\"center\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><a href=\"http://www.analoga.org/wp-content/uploads/2014/08/layou5.jpg\"><img src=\"http://www.analoga.org/wp-content/uploads/2014/08/layou5.jpg\" alt=\"Anime GFX Layout\" class=\"wp-image-604\"/></a><figcaption>Ein typisches Anime-GFX Layout (um 2003)</figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Also was ist es, was bleibt? Heute vernetzen sich Jugendliche und Fandoms eher über die wesentlich komfortableren Sozialen Medien, die zwar viel Medienkompetenz, aber weniger technisches Know-How abverlangen. Jeder, der seinen Helden ein digitales Denkmal setzen und eine eigene private Website aufbauen möchte, hat mit Wordpress, Joomla und anderer toller Open-Source-Software und kostenlosen Themes schnell und einfach die Gelegenheit dazu. Die Fan- und GFX-Seiten von damals sind fast obsolet geworden und ihre Betreiber_innen sind heute erwachsene Frauen und Männer, die sicher nicht selten ihr Hobby zum Beruf machten.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>Leider konnte ich nach über zehn Jahren niemandem aus dem alten Crystal-Graphics-Team erreichen. Nur zu gern würde ich andere (eure!) Geek-Geschichten von damals hören, egal in welchem Fandom ihr zu Hause wart, ob mit oder ohne eigener Homepage. Es gibt sicher viel mehr zu erzählen, als das <a href=\"https://web.archive.org/web/*/http://www.crystal-graphics.de/\" target=\"_blank\" rel=\"noreferrer noopener\">Internet Archive</a> jemals dokumentieren könnte.</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em> ♥ Für aktuelle Infos rund um die Szene ist </em><em><a href=\"http://pinkpearlinfo.blogspot.de\" target=\"_blank\" rel=\"noreferrer noopener\">Pinkpearlinfo</a> eine gute Anlaufstelle. Das Blog gehört zu <a href=\"http://www.thepinkpearl.de/\" target=\"_blank\" rel=\"noreferrer noopener\">Pinkpearl</a>, einer Anima-Grafik-Seite, die noch rege betrieben wird.<br></em></p>\n<!-- /wp:paragraph -->','Digitale Fankultur: Wer das Web um 2000 leidenschaftlich mitgestaltete','','inherit','closed','closed','','28-revision-v1','','','2019-04-09 18:18:22','2019-04-09 16:18:22','',28,'https://rike.dev/2019/04/09/28-revision-v1/',0,'revision','',0),(30,1,'2018-07-15 18:18:24','2018-07-15 16:18:24','<!-- wp:paragraph -->\r\n<p>In diesem Tutorial geht es darum, einen einfachen Webserver auf Node.js-Basis zu installieren und zu testen. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" (2018) entstanden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:more -->\r\n<p><!--more--></p>\r\n<!-- /wp:more -->\r\n<p>Für eine Anleitung zur Installation von Node.js und npm in Vorbereitung auf das Setup des Express.js-Servers, gibt es <a href=\"https://rike.dev/2019/06/18/node-js-und-npm-installieren/\">hier</a> das entsprechende Tutorial.</p>\r\n<!-- wp:heading -->\r\n<h2>Den Webserver einrichten / Express.js installieren</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Lege auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest. Den Ort kannst du beliebig festlegen.</li>\r\n<li>Innerhalb dieses Ordners lege zwei neue Dateien an (in Windows z. B. per Rechtsklick: \"Neues Textdokument\")!</li>\r\n<li>Benenne eine Datei um in \"server.js\", die andere in \"index.html\". (In Windows solltest du sicher gehen, dass sich die Dateiendung mitändert, und nicht etwa eine Datei nach dem Schema \"server.js.txt\" und \"index.html.txt\" entstanden ist!)</li>\r\n<li>Navigiere im Terminal zum neu angelegten Ordner. Der Befehl dazu lautet \"cd\" gefolgt vom entsprechenden Pfad. Für ein Windows-System könnte der Befehl so lauten: <!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Neues-Projekt1</pre>\r\n<!-- /wp:preformatted --> Für ein macOS-System wäre dies ein Beispiel-Befehl: <!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Neues-Projekt1</pre>\r\n<!-- /wp:preformatted --> Wenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</li>\r\n<li>Installiere in diesem Ordner das <em>npm</em>-Paket \"Express.js\", den de-Facto-Standard für Webanwendungen unter Node.js mit dem Terminal-Befehl</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">npm install express</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Öffne die Datei \"server.js\" in einem Texteditor (z. B. \"Sublime\") und füge diesen Quellcode ein:</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">const express = require(\'express\');\r\nconst app = express();\r\n\r\napp.use(express.static(__dirname + \'/dist\'));\r\n\r\napp.get(\'/\', function (req, res) {\r\nres.sendFile(__dirname + \'/index.html\');\r\n})\r\n\r\napp.get(\'/about\', function (req, res) {\r\nres.sendFile(__dirname + \'/about.html\');\r\n})\r\n\r\napp.listen(3000);\r\nconsole.log(\"server started on port 3000\");</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Öffne die Datei \"index.html\" und füge einen beliebigen Text ein, z. B. \"Hello World!\". Optional kannst du eine weitere Datei \"about.html\" erstellen und diese mit Leben füllen.</li>\r\n<li>Jetzt müssen wir unseren Webserver nur noch starten. Im Quellcode haben wir ihn bereits angewiesen, die Datei <em>index.html </em>auszugeben.</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Den Webserver starten</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Prüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">node server.js</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Navigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:3000/\">http://127.0.0.1:3000/ </a>oder <a href=\"http://localhost:3000/\">http://localhost:3000/</a>. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. \"Hello World\".</p>\r\n<p>In diesem Beispiel-Tutorial übernimmt unser Server das Handling der Routen (z. B. /about) für uns. Wir könnten den Server auch noch weitere Aufgaben erfüllen lassen, z. B. die Anbindung einer Datenbank.</p>\r\n<p>Ein Beispiel zum Ausliefern einer statischen Website durch Express.js findest du <a href=\"https://rike.dev/2019/06/18/express-js-statische-website/\">hier</a>.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Den Webserver stoppen</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Den gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL http://127.0.0.1:3000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.</p>\r\n<!-- /wp:paragraph -->','Node.js installieren und einen Webserver starten','','publish','open','open','','node-js-installieren-und-einen-webserver-starten','','','2019-06-19 11:50:02','2019-06-19 09:50:02','',0,'https://rike.dev/?p=30',0,'post','',0),(31,1,'2019-04-09 18:19:16','2019-04-09 16:19:16','<!-- wp:paragraph -->\n<p>In diesem Tutorial geht es darum, einen einfachen Webserver auf Node.js-Basis zu installieren und zu testen.&nbsp;Dieses Tutorial ist im Rahmen der Bremer&nbsp;<a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a>&nbsp;für den Kurs \"Einführung in die modere Webentwicklung\" (2018) entstanden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Was ist Node.js?</h2>\n<!-- /wp:heading -->\n\n<!-- wp:more -->\n<!--more-->\n<!-- /wp:more -->\n\n<!-- wp:paragraph -->\n<p><em>Node.js</em> ist eine Softwareumgebung für Javascript, welche es ermöglicht, serverseitige Javascript-Anwendungen (-&gt; Webserver) auf einem beliebigen Betriebssystem zu programmieren.&nbsp;Sie erweitert&nbsp;\"klassisches\" Javascript um die notwendigen Funktionen und ist dabei extrem ressourcenschonend. Wofür brauchen wir <strong>npm</strong>?&nbsp;Mit dem Node Package Manager können wir die Kernfunktionalität von <em>Node.js</em> über Zusatzpakete erweitern. Entwickler aus der ganzen Welt stellen ihre Pakete dort kostenlos zur Verfügung.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Node.js installieren</h2>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5>Windows 7/8/10</h5>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Für Windows stellt die&nbsp;offizielle <em>Node.js</em>-Website&nbsp;für die jeweiligen Versionen zur Verfügung:&nbsp;<a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>.&nbsp;Lade die richtige Datei (.msi) herunter und starte den Installer mit einem Doppelklick. Der Wizard wird dich durch den sehr kurzen Installationsprozess begleiten. Wähle während der Installation die Standardeinstellungen.&nbsp;<em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5>MacOS</h5>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Über die offizielle <em>Node.js</em>-Website kannst du den Installer (.pkg) für Node.js herunterladen:&nbsp;<a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>. Starte den Installer über deinen Mac und befolge die (kurzen) Installationsanweisungen.&nbsp;Wähle während der Installation die Standardeinstellungen.&nbsp;<em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5>Linux/Ubuntu</h5>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>In Ubuntu kann <em>Node.js</em> über die Paketverwaltung installiert werden. Da <em>npm</em> nicht automatisch mitinstalliert wird, holen wir dies manuell nach.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">sudo apt-get update\nsudo apt-get install nodejs\nsudo apt-get install npm</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:heading -->\n<h2>Mit dem Terminal arbeiten / Die Installation von Node.js und npm prüfen</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Mit dem Terminal können wir unser Betriebssystem&nbsp;textbasiert&nbsp;steuern.&nbsp;Häufigster Vorbehalt gegen das Terminal&nbsp;ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:<ul><li>In&nbsp;<strong>Windows 8 und 10</strong>&nbsp;geht das mit einem Klick&nbsp;mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination&nbsp;[Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li><li>In&nbsp;<strong>Windows 7</strong>&nbsp;klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li><li>In vielen&nbsp;<strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li><li>Auf&nbsp;<strong>MacOS</strong>&nbsp;führt die&nbsp;Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li></ul></li><li>Nun&nbsp;prüfen wir, ob auf unserem Betriebssystem <em>Node.js</em> und <em>npm</em> korrekt installiert wurden.&nbsp;Das geht mit den Terminal-Befehlen</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">node -v\nnpm -v</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<ul><li>Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version&nbsp;<em>Node.js </em>und<em> npm </em>installiert sind. Falls eine Fehlermeldung erscheint, solltest du den Installationsvorgang wiederholen.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:heading -->\n<h2>Den Webserver einrichten / Express.js installieren</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>Lege&nbsp;auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest. Den Ort kannst du beliebig festlegen.</li><li>Innerhalb dieses Ordners lege&nbsp;zwei neue Dateien an (in Windows z. B. per Rechtsklick: \"Neues Textdokument\")!</li><li>Benenne&nbsp;eine Datei um in \"server.js\", die andere in \"index.html\". (In Windows solltest du sicher gehen, dass sich die Dateiendung mitändert, und nicht etwa eine Datei nach dem Schema \"server.js.txt\" und \"index.html.txt\" entstanden ist!)</li><li>Navigiere im Terminal zum neu angelegten Ordner. Der Befehl dazu lautet \"cd\" gefolgt vom entsprechenden Pfad. Für ein Windows-System könnte der Befehl so lauten:<br>cd C:\\Users\\Ulrike\\Projekte\\Neues-Projekt1Für ein macOS-System wäre dies ein Beispiel-Befehl:cd /Volumes/PROJECTS/Neues-Projekt1Wenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</li><li>Installiere in diesem Ordner das <em>npm</em>-Paket \"Express.js\", den de-Facto-Standard für Webanwendungen unter Node.js mit dem Terminal-Befehl</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">npm install express</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<ul><li>Öffne die Datei \"server.js\" in einem Texteditor (z. B. \"Sublime\") und füge diesen Quellcode ein:</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">const express = require(\'express\');\nconst app = express();\n\napp.use(express.static(__dirname + \'/dist\'));\n\napp.get(\'/\', function (req, res) {\nres.sendFile(__dirname + \'/index.html\');\n})\n\napp.listen(3000);\nconsole.log(\"server started on port 3000\");</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<ul><li>Öffne die Datei \"index.html\" und füge einen beliebigen Text ein, z. B. \"Hello World!\".</li><li>Jetzt müssen wir unseren Webserver nur noch starten. Im Quellcode haben wir ihn bereits angewiesen, die Datei <em>index.html&nbsp;</em>auszugeben.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:heading -->\n<h2>Den Webserver starten</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Prüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">node server.js</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>Navigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:3000/\">http://127.0.0.1:3000/ </a>oder <a href=\"http://localhost:3000/\">http://localhost:3000/</a>. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. \"Hello World\".</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Den Webserver stoppen</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Den gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL&nbsp;http://127.0.0.1:3000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.</p>\n<!-- /wp:paragraph -->','Node.js installieren und einen Webserver starten','','inherit','closed','closed','','30-revision-v1','','','2019-04-09 18:19:16','2019-04-09 16:19:16','',30,'https://rike.dev/2019/04/09/30-revision-v1/',0,'revision','',0),(33,1,'2019-02-07 18:22:20','2019-02-07 17:22:20','[grey_box]This tutorial is the second part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"&nbsp;(<a href=\"https://rike.dev/2019/02/11/hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1</a>&nbsp;|&nbsp;2&nbsp;|&nbsp;<a href=\"https://rike.dev/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application/\">3</a>)[/grey_box]\n<!--more-->\n\nThe main problem&nbsp;in this part is how to setup a stable and endlessly running task on&nbsp;a Raspberry Pi to continuesly receive the (correct!) sensor data. Secondly&nbsp;we want it to somehow process and transfer it&nbsp;to a service that works as our middleware to provide the frontend with JSON data to display. MQTT is the IoT protocol to go with but how can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5>Setup a web server backend with Node.js and Express.js</h5>\nMultiple solutions would be possible here, but I decided for a Javascript Node.js backend which will be run with Express.js. Make sure <em>node</em> and <em>npm</em> are ready on your machine or install them first.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">node -v\nnpm -v</pre>\nSetup a project folder and a make a subfolder \"server\". Create a new file \"server.js\" within and code a basic backend service. We will upgrade its functionality later.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\nconst app = express();\n\n// test\napp.get(\'/\', function (req, res) {\n res.send(\'hello world!\');\n});\n\napp.listen(3000, () =&gt; console.log(\'App listening on port \', 3000));</pre>\nDon\'t forget to install the <em>npm</em> package<em> express</em> in your console and start the application! (Don\'t know&nbsp;how Node.js with Express.js works? Check out e.g.&nbsp;<a href=\"https://www.guru99.com/node-js-express.html\">this tutorial</a>.)\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm init\nnpm install express --save\nnode server.js</pre>\nGo to your browser and check if your&nbsp;web server works on http://localhost:3000.\n<h5>Setup the MQTT broker Mosquitto</h5>\nWhy MQTT? The protocol is a lightweight publish/subscribe messaging transport solution which is very popular in the IoT field. We will use a MQTT broker as the control center to receive raw sensor data from our&nbsp;<em>rtl_433</em> program, we installed in the previous chapter and forward them to our web server. Mosquitto is a common MQTT broker and is installed and tested on or Raspberry Pi with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt install -y mosquitto mosquitto-clients\nmosquitto -v</pre>\nThe broker will be accessable to clients on mqtt://localhost:1883.\n<h5>Setup a bash script that pipes received data to Mosquitto</h5>\nThe Raspberry Pi now gets the important task to not only start <em>rtl_433</em> to decode traffic from devices that are broadcasting on 433.9 MHz manually, but to start this task on every reboot automatically. For that, we create a cronjob with the tool <em>crontab</em>, which should be installed on&nbsp;our&nbsp;system.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">crontab -h</pre>\nOn your Raspberry Pi create a new file \"tsh_raspberry_script.sh\" (or whatever you want) in your <em>pi</em>&nbsp;home folder and make it executable from your terminal:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">chmod +x tsh_raspberry_script.sh</pre>\nAfter that, open the file in a text editor and add the following bash script. It will start<em> rtl_433</em> and pipe the output in JSON format to Mosquitto, where it will be published in the topic \"home/rtl_344\". Don\'t forget to close and safe the file.\n<pre class=\"EnlighterJSRAW\">#!bin/bash\n/usr/local/bin/rtl_433 -F json -M utc | mosquitto_pub -t home/rtl_433 -l</pre>\nNow we can set up a new cronjob which will execute the shell script on every Raspberry Pi reboot. Open up a terminal:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"># edit crontabs of user \"pi\"\ncrontab -e\n\n# a text editor will open and load all existing cronjobs, add\n@reboot sleep 60 &amp;&amp;&nbsp;sh&nbsp;/home/pi/tsh_raspberry_script.sh</pre>\n<h5>Build a simple database with lowdb and Node.js</h5>\nIn development mode a very basic database will suffice our requirements, that\'s why I used <em>lowdb </em><a href=\"https://github.com/typicode/lowdb\">(Github link)</a> to store the sensor data on localhost first. Lowdb is based on a JSON file in&nbsp;our project folder. If you would like to take an eye on performance and persistence later I have built a solution with PostgreSQL too, but this is <a href=\"http://rike.dev/texts/2019/02/11/setup-postgresql-database-and-api-for-node-js\">another story</a>.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm&nbsp;install&nbsp;lowdb&nbsp;--save</pre>\nIn your <em>server.js</em> add some code.&nbsp;Set some defaults first, which are required if your JSON file (mine is \"db.json\") is empty at first.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const low = require(\'lowdb\');\nconst FileSync = require(\'lowdb/adapters/FileSync\')\nconst adapter = new FileSync(\'db.json\');\nconst db = low(adapter);\n\ndb.defaults({ posts: [] })\n .write()</pre>\nThat\'s all. Now we can write into, edit and delete data within our database.\n<h5>Consume MQTT sensor data and save it to the database</h5>\nWe go back to our Node.js application and install the MQTT client <em>MQTT.js</em> (<a href=\"https://github.com/mqttjs/MQTT.js\">Github link</a>) to be able to consume data that is available via Mosquitto.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm&nbsp;install&nbsp;mqtt&nbsp;--save</pre>\nWith the newly installed MQTT client we are able to receive all the messages that the MQTT broker delivers over its API on mqtt://localhost:1883. We now filter them to only process and store \"correct\" data sets (remember: our RTL-SDR receiver found signals from multiple IoT gagdets we are not interested in).\n\nMy setup included some buffer, temperature and date parsing, basic verifying and filtering regarding incoming messages before I stored the correct Javascript Objects into the lowdb. Continue working on your <em>server.js</em>:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const mqtt = require(\'mqtt\');\nconst client = mqtt.connect(mqtt://localhost:1883);\n\nfahrenheitToCelsius = (fahrenheit) =&gt; {\n var fTempVal = parseFloat(fahrenheit);\n var cTempVal = (fTempVal - 32) * (5 / 9);\n return (Math.round(cTempVal * 100) / 100);\n}\n\nclient.on(\'message\', function (topic, message) {\n // message is buffer\n var stringBuf = message &amp;&amp; message.toString(\'utf-8\')\n try {\n   var json = JSON.parse(stringBuf);\n   // console.log(json);\n   if (json.model === \'inFactory sensor\') {\n     if (json.id === 91 || json.id === 32) {\n     // catch my specific sensor model\n       if (json.temperature_F &amp;&amp; json.humidity) {\n       // add data to lowdb\n       const time = moment.utc(json.time).tz(\"Europe/Berlin\");\n       const formattedTime = time.format(\'YYYY-MM-DD HH:mm:ss\');\n       console.log(\'write post\');\n       db.get(\'posts\')\n       .push({ id: uuid.v1(), room: json.id, temp: fahrenheitToCelsius(json.temperature_F), humidity: json.humidity, time: formattedTime }).write()\n       }\n     }\n   }\n } catch (e) {\n   console.error(stringBuf);\n   }\n})</pre>\nThat\'s it. Whenever the MQTT client receives sensor data it will store it in our database accordingly. You can check that in your \"db.json\" file in your project folder, which grows bigger and bigger during runtime. It won\'t delete itself on backend restart!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\n \"posts\": [\n {\n \"id\": \"c107fc70-1f33-11e9-9b95-fbfea27c8046\",\n \"room\": 32,\n \"temp\": 22.89,\n \"humidity\": 30,\n \"time\": \"2019-01-23 18:24:34\"\n },\n {\n \"id\": \"6607f9f0-1f34-11e9-9b95-fbfea27c8046\",\n \"room\": 32,\n \"temp\": 22.89,\n \"humidity\": 30,\n \"time\": \"2019-01-23 18:29:11\"\n },\n {\n \"id\": \"16492190-1f35-11e9-9b95-fbfea27c8046\",\n \"room\": 91,\n \"temp\": 22.72,\n \"humidity\": 35,\n \"time\": \"2019-01-23 18:34:07\"\n }\n]\n}</pre>\n<h5>Provide sensor data via REST API</h5>\nNow that we have clean data in our lowdb we might want to provide them via a REST API to be consumable for a frontend or multiple frontends (smartphone app, web app, ..). We already deployed a local web server running on Node.js and Express.js and can very simply add an endpoint the provides the database data with the following code. Add it to your <em>server.js</em>!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/api\', (req, res) =&gt; {\n res.send(db.get(\'posts\'));\n});</pre>\nYes, that\'s it. Check if it is working on http://localhost:3000/api or with your favourite REST client (e.g. Postman).\n\n<hr>\n\n[blue_box]Proceed to the third part of the tutorial \"<a href=\"https://rike.dev/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application/\">Display smart home data&nbsp;in a Quasar, Vue.js and Chart.js powered web application</a>\".[/blue_box]','Get and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend application','','publish','open','open','','smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application','','','2019-04-12 10:14:41','2019-04-12 08:14:41','',0,'https://rike.dev/?p=33',0,'post','',2),(34,1,'2019-04-09 18:22:20','2019-04-09 16:22:20','<blockquote>This tutorial is the second part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"&nbsp;(<a href=\"http://rike.dev/texts/2019/02/11/choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1</a>&nbsp;|&nbsp;2&nbsp;|&nbsp;<a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3</a>)</blockquote>\n<!--more-->\n\nThe main problem&nbsp;in this part is how to setup a stable and endlessly running task on&nbsp;a Raspberry Pi to continuesly receive the (correct!) sensor data. Secondly&nbsp;we want it to somehow process and transfer it&nbsp;to a service that works as our middleware to provide the frontend with JSON data to display. MQTT is the IoT protocol to go with but how can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5>Setup a web server backend with Node.js and Express.js</h5>\nMultiple solutions would be possible here, but I decided for a Javascript Node.js backend which will be run with Express.js. Make sure <em>node</em> and <em>npm</em> are ready on your machine or install them first.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">node -v\nnpm -v</pre>\nSetup a project folder and a make a subfolder \"server\". Create a new file \"server.js\" within and code a basic backend service. We will upgrade its functionality later.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\nconst app = express();\n\n// test\napp.get(\'/\', function (req, res) {\n res.send(\'hello world!\');\n});\n\napp.listen(3000, () =&gt; console.log(\'App listening on port \', 3000));</pre>\nDon\'t forget to install the <em>npm</em> package<em> express</em> in your console and start the application! (Don\'t know&nbsp;how Node.js with Express.js works? Check out e.g.&nbsp;<a href=\"https://www.guru99.com/node-js-express.html\">this tutorial</a>.)\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm init\nnpm install express --save\nnode server.js</pre>\nGo to your browser and check if your&nbsp;web server works on http://localhost:3000.\n<h5>Setup the MQTT broker Mosquitto</h5>\nWhy MQTT? The protocol is a lightweight publish/subscribe messaging transport solution which is very popular in the IoT field. We will use a MQTT broker as the control center to receive raw sensor data from our&nbsp;<em>rtl_433</em> program, we installed in the previous chapter and forward them to our web server. Mosquitto is a common MQTT broker and is installed and tested on or Raspberry Pi with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt install -y mosquitto mosquitto-clients\nmosquitto -v</pre>\nThe broker will be accessable to clients on mqtt://localhost:1883.\n<h5>Setup a bash script that pipes received data to Mosquitto</h5>\nThe Raspberry Pi now gets the important task to not only start <em>rtl_433</em> to decode traffic from devices that are broadcasting on 433.9 MHz manually, but to start this task on every reboot automatically. For that, we create a cronjob with the tool <em>crontab</em>, which should be installed on&nbsp;our&nbsp;system.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">crontab -h</pre>\nOn your Raspberry Pi create a new file \"tsh_raspberry_script.sh\" (or whatever you want) in your <em>pi</em>&nbsp;home folder and make it executable from your terminal:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">chmod +x tsh_raspberry_script.sh</pre>\nAfter that, open the file in a text editor and add the following bash script. It will start<em> rtl_433</em> and pipe the output in JSON format to Mosquitto, where it will be published in the topic \"home/rtl_344\". Don\'t forget to close and safe the file.\n<pre class=\"EnlighterJSRAW\">#!bin/bash\n/usr/local/bin/rtl_433 -F json -M utc | mosquitto_pub -t home/rtl_433 -l</pre>\nNow we can set up a new cronjob which will execute the shell script on every Raspberry Pi reboot. Open up a terminal:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"># edit crontabs of user \"pi\"\ncrontab -e\n\n# a text editor will open and load all existing cronjobs, add\n@reboot sleep 60 &amp;&amp;&nbsp;sh&nbsp;/home/pi/tsh_raspberry_script.sh</pre>\n<h5>Build a simple database with lowdb and Node.js</h5>\nIn development mode a very basic database will suffice our requirements, that\'s why I used <em>lowdb </em><a href=\"https://github.com/typicode/lowdb\">(Github link)</a> to store the sensor data on localhost first. Lowdb is based on a JSON file in&nbsp;our project folder. If you would like to take an eye on performance and persistence later I have built a solution with PostgreSQL too, but this is <a href=\"http://rike.dev/texts/2019/02/11/setup-postgresql-database-and-api-for-node-js\">another story</a>.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm&nbsp;install&nbsp;lowdb&nbsp;--save</pre>\nIn your <em>server.js</em> add some code.&nbsp;Set some defaults first, which are required if your JSON file (mine is \"db.json\") is empty at first.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const low = require(\'lowdb\');\nconst FileSync = require(\'lowdb/adapters/FileSync\')\nconst adapter = new FileSync(\'db.json\');\nconst db = low(adapter);\n\ndb.defaults({ posts: [] })\n .write()</pre>\nThat\'s all. Now we can write into, edit and delete data within our database.\n<h5>Consume MQTT sensor data and save it to the database</h5>\nWe go back to our Node.js application and install the MQTT client <em>MQTT.js</em> (<a href=\"https://github.com/mqttjs/MQTT.js\">Github link</a>) to be able to consume data that is available via Mosquitto.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm&nbsp;install&nbsp;mqtt&nbsp;--save</pre>\nWith the newly installed MQTT client we are able to receive all the messages that the MQTT broker delivers over its API on mqtt://localhost:1883. We now filter them to only process and store \"correct\" data sets (remember: our RTL-SDR receiver found signals from multiple IoT gagdets we are not interested in).\n\nMy setup included some buffer, temperature and date parsing, basic verifying and filtering regarding incoming messages before I stored the correct Javascript Objects into the lowdb. Continue working on your <em>server.js</em>:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const mqtt = require(\'mqtt\');\nconst client = mqtt.connect(mqtt://localhost:1883);\n\nfahrenheitToCelsius = (fahrenheit) =&gt; {\n var fTempVal = parseFloat(fahrenheit);\n var cTempVal = (fTempVal - 32) * (5 / 9);\n return (Math.round(cTempVal * 100) / 100);\n}\n\nclient.on(\'message\', function (topic, message) {\n // message is buffer\n var stringBuf = message &amp;&amp; message.toString(\'utf-8\')\n try {\n   var json = JSON.parse(stringBuf);\n   // console.log(json);\n   if (json.model === \'inFactory sensor\') {\n     if (json.id === 91 || json.id === 32) {\n     // catch my specific sensor model\n       if (json.temperature_F &amp;&amp; json.humidity) {\n       // add data to lowdb\n       const time = moment.utc(json.time).tz(\"Europe/Berlin\");\n       const formattedTime = time.format(\'YYYY-MM-DD HH:mm:ss\');\n       console.log(\'write post\');\n       db.get(\'posts\')\n       .push({ id: uuid.v1(), room: json.id, temp: fahrenheitToCelsius(json.temperature_F), humidity: json.humidity, time: formattedTime }).write()\n       }\n     }\n   }\n } catch (e) {\n   console.error(stringBuf);\n   }\n})</pre>\nThat\'s it. Whenever the MQTT client receives sensor data it will store it in our database accordingly. You can check that in your \"db.json\" file in your project folder, which grows bigger and bigger during runtime. It won\'t delete itself on backend restart!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\n \"posts\": [\n {\n \"id\": \"c107fc70-1f33-11e9-9b95-fbfea27c8046\",\n \"room\": 32,\n \"temp\": 22.89,\n \"humidity\": 30,\n \"time\": \"2019-01-23 18:24:34\"\n },\n {\n \"id\": \"6607f9f0-1f34-11e9-9b95-fbfea27c8046\",\n \"room\": 32,\n \"temp\": 22.89,\n \"humidity\": 30,\n \"time\": \"2019-01-23 18:29:11\"\n },\n {\n \"id\": \"16492190-1f35-11e9-9b95-fbfea27c8046\",\n \"room\": 91,\n \"temp\": 22.72,\n \"humidity\": 35,\n \"time\": \"2019-01-23 18:34:07\"\n }\n]\n}</pre>\n<h5>Provide sensor data via REST API</h5>\nNow that we have clean data in our lowdb we might want to provide them via a REST API to be consumable for a frontend or multiple frontends (smartphone app, web app, ..). We already deployed a local web server running on Node.js and Express.js and can very simply add an endpoint the provides the database data with the following code. Add it to your <em>server.js</em>!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/api\', (req, res) =&gt; {\n res.send(db.get(\'posts\'));\n});</pre>\nYes, that\'s it. Check if it is working on http://localhost:3000/api or with your favourite REST client (e.g. Postman).\n\n&nbsp;\n\n<hr>\n\n<blockquote>Proceed to the third part of the tutorial \"<a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">Display smart home data&nbsp;in a Quasar, Vue.js and Chart.js powered web application</a>\".</blockquote>','','','inherit','closed','closed','','33-revision-v1','','','2019-04-09 18:22:20','2019-04-09 16:22:20','',33,'https://rike.dev/2019/04/09/33-revision-v1/',0,'revision','',0),(35,1,'2019-04-09 18:22:56','2019-04-09 16:22:56','<blockquote>This tutorial is the second part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\" (<a href=\"http://rike.dev/texts/2019/02/11/choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1</a> | 2 | <a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3</a>)</blockquote>\n<!--more-->\n\nThe main problem in this part is how to setup a stable and endlessly running task on a Raspberry Pi to continuesly receive the (correct!) sensor data. Secondly we want it to somehow process and transfer it to a service that works as our middleware to provide the frontend with JSON data to display. MQTT is the IoT protocol to go with but how can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5>Setup a web server backend with Node.js and Express.js</h5>\nMultiple solutions would be possible here, but I decided for a Javascript Node.js backend which will be run with Express.js. Make sure <em>node</em> and <em>npm</em> are ready on your machine or install them first.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">node -v\nnpm -v</pre>\nSetup a project folder and a make a subfolder \"server\". Create a new file \"server.js\" within and code a basic backend service. We will upgrade its functionality later.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\nconst app = express();\n\n// test\napp.get(\'/\', function (req, res) {\n res.send(\'hello world!\');\n});\n\napp.listen(3000, () =&gt; console.log(\'App listening on port \', 3000));</pre>\nDon\'t forget to install the <em>npm</em> package<em> express</em> in your console and start the application! (Don\'t know how Node.js with Express.js works? Check out e.g. <a href=\"https://www.guru99.com/node-js-express.html\">this tutorial</a>.)\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm init\nnpm install express --save\nnode server.js</pre>\nGo to your browser and check if your web server works on http://localhost:3000.\n<h5>Setup the MQTT broker Mosquitto</h5>\nWhy MQTT? The protocol is a lightweight publish/subscribe messaging transport solution which is very popular in the IoT field. We will use a MQTT broker as the control center to receive raw sensor data from our <em>rtl_433</em> program, we installed in the previous chapter and forward them to our web server. Mosquitto is a common MQTT broker and is installed and tested on or Raspberry Pi with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt install -y mosquitto mosquitto-clients\nmosquitto -v</pre>\nThe broker will be accessable to clients on mqtt://localhost:1883.\n<h5>Setup a bash script that pipes received data to Mosquitto</h5>\nThe Raspberry Pi now gets the important task to not only start <em>rtl_433</em> to decode traffic from devices that are broadcasting on 433.9 MHz manually, but to start this task on every reboot automatically. For that, we create a cronjob with the tool <em>crontab</em>, which should be installed on our system.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">crontab -h</pre>\nOn your Raspberry Pi create a new file \"tsh_raspberry_script.sh\" (or whatever you want) in your <em>pi</em> home folder and make it executable from your terminal:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">chmod +x tsh_raspberry_script.sh</pre>\nAfter that, open the file in a text editor and add the following bash script. It will start<em> rtl_433</em> and pipe the output in JSON format to Mosquitto, where it will be published in the topic \"home/rtl_344\". Don\'t forget to close and safe the file.\n<pre class=\"EnlighterJSRAW\">#!bin/bash\n/usr/local/bin/rtl_433 -F json -M utc | mosquitto_pub -t home/rtl_433 -l</pre>\nNow we can set up a new cronjob which will execute the shell script on every Raspberry Pi reboot. Open up a terminal:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"># edit crontabs of user \"pi\"\ncrontab -e\n\n# a text editor will open and load all existing cronjobs, add\n@reboot sleep 60 &amp;&amp; sh /home/pi/tsh_raspberry_script.sh</pre>\n<h5>Build a simple database with lowdb and Node.js</h5>\nIn development mode a very basic database will suffice our requirements, that\'s why I used <em>lowdb </em><a href=\"https://github.com/typicode/lowdb\">(Github link)</a> to store the sensor data on localhost first. Lowdb is based on a JSON file in our project folder. If you would like to take an eye on performance and persistence later I have built a solution with PostgreSQL too, but this is <a href=\"http://rike.dev/texts/2019/02/11/setup-postgresql-database-and-api-for-node-js\">another story</a>.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install lowdb --save</pre>\nIn your <em>server.js</em> add some code. Set some defaults first, which are required if your JSON file (mine is \"db.json\") is empty at first.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const low = require(\'lowdb\');\nconst FileSync = require(\'lowdb/adapters/FileSync\')\nconst adapter = new FileSync(\'db.json\');\nconst db = low(adapter);\n\ndb.defaults({ posts: [] })\n .write()</pre>\nThat\'s all. Now we can write into, edit and delete data within our database.\n<h5>Consume MQTT sensor data and save it to the database</h5>\nWe go back to our Node.js application and install the MQTT client <em>MQTT.js</em> (<a href=\"https://github.com/mqttjs/MQTT.js\">Github link</a>) to be able to consume data that is available via Mosquitto.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install mqtt --save</pre>\nWith the newly installed MQTT client we are able to receive all the messages that the MQTT broker delivers over its API on mqtt://localhost:1883. We now filter them to only process and store \"correct\" data sets (remember: our RTL-SDR receiver found signals from multiple IoT gagdets we are not interested in).\n\nMy setup included some buffer, temperature and date parsing, basic verifying and filtering regarding incoming messages before I stored the correct Javascript Objects into the lowdb. Continue working on your <em>server.js</em>:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const mqtt = require(\'mqtt\');\nconst client = mqtt.connect(mqtt://localhost:1883);\n\nfahrenheitToCelsius = (fahrenheit) =&gt; {\n var fTempVal = parseFloat(fahrenheit);\n var cTempVal = (fTempVal - 32) * (5 / 9);\n return (Math.round(cTempVal * 100) / 100);\n}\n\nclient.on(\'message\', function (topic, message) {\n // message is buffer\n var stringBuf = message &amp;&amp; message.toString(\'utf-8\')\n try {\n   var json = JSON.parse(stringBuf);\n   // console.log(json);\n   if (json.model === \'inFactory sensor\') {\n     if (json.id === 91 || json.id === 32) {\n     // catch my specific sensor model\n       if (json.temperature_F &amp;&amp; json.humidity) {\n       // add data to lowdb\n       const time = moment.utc(json.time).tz(\"Europe/Berlin\");\n       const formattedTime = time.format(\'YYYY-MM-DD HH:mm:ss\');\n       console.log(\'write post\');\n       db.get(\'posts\')\n       .push({ id: uuid.v1(), room: json.id, temp: fahrenheitToCelsius(json.temperature_F), humidity: json.humidity, time: formattedTime }).write()\n       }\n     }\n   }\n } catch (e) {\n   console.error(stringBuf);\n   }\n})</pre>\nThat\'s it. Whenever the MQTT client receives sensor data it will store it in our database accordingly. You can check that in your \"db.json\" file in your project folder, which grows bigger and bigger during runtime. It won\'t delete itself on backend restart!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\n \"posts\": [\n {\n \"id\": \"c107fc70-1f33-11e9-9b95-fbfea27c8046\",\n \"room\": 32,\n \"temp\": 22.89,\n \"humidity\": 30,\n \"time\": \"2019-01-23 18:24:34\"\n },\n {\n \"id\": \"6607f9f0-1f34-11e9-9b95-fbfea27c8046\",\n \"room\": 32,\n \"temp\": 22.89,\n \"humidity\": 30,\n \"time\": \"2019-01-23 18:29:11\"\n },\n {\n \"id\": \"16492190-1f35-11e9-9b95-fbfea27c8046\",\n \"room\": 91,\n \"temp\": 22.72,\n \"humidity\": 35,\n \"time\": \"2019-01-23 18:34:07\"\n }\n]\n}</pre>\n<h5>Provide sensor data via REST API</h5>\nNow that we have clean data in our lowdb we might want to provide them via a REST API to be consumable for a frontend or multiple frontends (smartphone app, web app, ..). We already deployed a local web server running on Node.js and Express.js and can very simply add an endpoint the provides the database data with the following code. Add it to your <em>server.js</em>!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/api\', (req, res) =&gt; {\n res.send(db.get(\'posts\'));\n});</pre>\nYes, that\'s it. Check if it is working on http://localhost:3000/api or with your favourite REST client (e.g. Postman).\n\n<hr />\n\n<blockquote>Proceed to the third part of the tutorial \"<a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">Display smart home data in a Quasar, Vue.js and Chart.js powered web application</a>\".</blockquote>','','','inherit','closed','closed','','33-revision-v1','','','2019-04-09 18:22:56','2019-04-09 16:22:56','',33,'https://rike.dev/2019/04/09/33-revision-v1/',0,'revision','',0),(36,1,'2019-04-09 18:23:47','2019-04-09 16:23:47','<blockquote>This tutorial is the second part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\" (<a href=\"http://rike.dev/texts/2019/02/11/choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1</a> | 2 | <a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3</a>)</blockquote>\n<!--more-->\n\nThe main problem in this part is how to setup a stable and endlessly running task on a Raspberry Pi to continuesly receive the (correct!) sensor data. Secondly we want it to somehow process and transfer it to a service that works as our middleware to provide the frontend with JSON data to display. MQTT is the IoT protocol to go with but how can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5>Setup a web server backend with Node.js and Express.js</h5>\nMultiple solutions would be possible here, but I decided for a Javascript Node.js backend which will be run with Express.js. Make sure <em>node</em> and <em>npm</em> are ready on your machine or install them first.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">node -v\nnpm -v</pre>\nSetup a project folder and a make a subfolder \"server\". Create a new file \"server.js\" within and code a basic backend service. We will upgrade its functionality later.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\nconst app = express();\n\n// test\napp.get(\'/\', function (req, res) {\n res.send(\'hello world!\');\n});\n\napp.listen(3000, () =&gt; console.log(\'App listening on port \', 3000));</pre>\nDon\'t forget to install the <em>npm</em> package<em> express</em> in your console and start the application! (Don\'t know how Node.js with Express.js works? Check out e.g. <a href=\"https://www.guru99.com/node-js-express.html\">this tutorial</a>.)\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm init\nnpm install express --save\nnode server.js</pre>\nGo to your browser and check if your web server works on http://localhost:3000.\n<h5>Setup the MQTT broker Mosquitto</h5>\nWhy MQTT? The protocol is a lightweight publish/subscribe messaging transport solution which is very popular in the IoT field. We will use a MQTT broker as the control center to receive raw sensor data from our <em>rtl_433</em> program, we installed in the previous chapter and forward them to our web server. Mosquitto is a common MQTT broker and is installed and tested on or Raspberry Pi with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt install -y mosquitto mosquitto-clients\nmosquitto -v</pre>\nThe broker will be accessable to clients on mqtt://localhost:1883.\n<h5>Setup a bash script that pipes received data to Mosquitto</h5>\nThe Raspberry Pi now gets the important task to not only start <em>rtl_433</em> to decode traffic from devices that are broadcasting on 433.9 MHz manually, but to start this task on every reboot automatically. For that, we create a cronjob with the tool <em>crontab</em>, which should be installed on our system.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">crontab -h</pre>\nOn your Raspberry Pi create a new file \"tsh_raspberry_script.sh\" (or whatever you want) in your <em>pi</em> home folder and make it executable from your terminal:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">chmod +x tsh_raspberry_script.sh</pre>\nAfter that, open the file in a text editor and add the following bash script. It will start<em> rtl_433</em> and pipe the output in JSON format to Mosquitto, where it will be published in the topic \"home/rtl_344\". Don\'t forget to close and safe the file.\n<pre class=\"EnlighterJSRAW\">#!bin/bash\n/usr/local/bin/rtl_433 -F json -M utc | mosquitto_pub -t home/rtl_433 -l</pre>\nNow we can set up a new cronjob which will execute the shell script on every Raspberry Pi reboot. Open up a terminal:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"># edit crontabs of user \"pi\"\ncrontab -e\n\n# a text editor will open and load all existing cronjobs, add\n@reboot sleep 60 &amp;&amp; sh /home/pi/tsh_raspberry_script.sh</pre>\n<h5>Build a simple database with lowdb and Node.js</h5>\nIn development mode a very basic database will suffice our requirements, that\'s why I used <em>lowdb </em><a href=\"https://github.com/typicode/lowdb\">(Github link)</a> to store the sensor data on localhost first. Lowdb is based on a JSON file in our project folder. If you would like to take an eye on performance and persistence later I have built a solution with PostgreSQL too, but this is <a href=\"http://rike.dev/texts/2019/02/11/setup-postgresql-database-and-api-for-node-js\">another story</a>.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install lowdb --save</pre>\nIn your <em>server.js</em> add some code. Set some defaults first, which are required if your JSON file (mine is \"db.json\") is empty at first.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const low = require(\'lowdb\');\nconst FileSync = require(\'lowdb/adapters/FileSync\')\nconst adapter = new FileSync(\'db.json\');\nconst db = low(adapter);\n\ndb.defaults({ posts: [] })\n .write()</pre>\nThat\'s all. Now we can write into, edit and delete data within our database.\n<h5>Consume MQTT sensor data and save it to the database</h5>\nWe go back to our Node.js application and install the MQTT client <em>MQTT.js</em> (<a href=\"https://github.com/mqttjs/MQTT.js\">Github link</a>) to be able to consume data that is available via Mosquitto.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install mqtt --save</pre>\nWith the newly installed MQTT client we are able to receive all the messages that the MQTT broker delivers over its API on mqtt://localhost:1883. We now filter them to only process and store \"correct\" data sets (remember: our RTL-SDR receiver found signals from multiple IoT gagdets we are not interested in).\n\nMy setup included some buffer, temperature and date parsing, basic verifying and filtering regarding incoming messages before I stored the correct Javascript Objects into the lowdb. Continue working on your <em>server.js</em>:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const mqtt = require(\'mqtt\');\nconst client = mqtt.connect(mqtt://localhost:1883);\n\nfahrenheitToCelsius = (fahrenheit) =&gt; {\n var fTempVal = parseFloat(fahrenheit);\n var cTempVal = (fTempVal - 32) * (5 / 9);\n return (Math.round(cTempVal * 100) / 100);\n}\n\nclient.on(\'message\', function (topic, message) {\n // message is buffer\n var stringBuf = message &amp;&amp; message.toString(\'utf-8\')\n try {\n   var json = JSON.parse(stringBuf);\n   // console.log(json);\n   if (json.model === \'inFactory sensor\') {\n     if (json.id === 91 || json.id === 32) {\n     // catch my specific sensor model\n       if (json.temperature_F &amp;&amp; json.humidity) {\n       // add data to lowdb\n       const time = moment.utc(json.time).tz(\"Europe/Berlin\");\n       const formattedTime = time.format(\'YYYY-MM-DD HH:mm:ss\');\n       console.log(\'write post\');\n       db.get(\'posts\')\n       .push({ id: uuid.v1(), room: json.id, temp: fahrenheitToCelsius(json.temperature_F), humidity: json.humidity, time: formattedTime }).write()\n       }\n     }\n   }\n } catch (e) {\n   console.error(stringBuf);\n   }\n})</pre>\nThat\'s it. Whenever the MQTT client receives sensor data it will store it in our database accordingly. You can check that in your \"db.json\" file in your project folder, which grows bigger and bigger during runtime. It won\'t delete itself on backend restart!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\n \"posts\": [\n {\n \"id\": \"c107fc70-1f33-11e9-9b95-fbfea27c8046\",\n \"room\": 32,\n \"temp\": 22.89,\n \"humidity\": 30,\n \"time\": \"2019-01-23 18:24:34\"\n },\n {\n \"id\": \"6607f9f0-1f34-11e9-9b95-fbfea27c8046\",\n \"room\": 32,\n \"temp\": 22.89,\n \"humidity\": 30,\n \"time\": \"2019-01-23 18:29:11\"\n },\n {\n \"id\": \"16492190-1f35-11e9-9b95-fbfea27c8046\",\n \"room\": 91,\n \"temp\": 22.72,\n \"humidity\": 35,\n \"time\": \"2019-01-23 18:34:07\"\n }\n]\n}</pre>\n<h5>Provide sensor data via REST API</h5>\nNow that we have clean data in our lowdb we might want to provide them via a REST API to be consumable for a frontend or multiple frontends (smartphone app, web app, ..). We already deployed a local web server running on Node.js and Express.js and can very simply add an endpoint the provides the database data with the following code. Add it to your <em>server.js</em>!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/api\', (req, res) =&gt; {\n res.send(db.get(\'posts\'));\n});</pre>\nYes, that\'s it. Check if it is working on http://localhost:3000/api or with your favourite REST client (e.g. Postman).\n\n<hr />\n\n<blockquote>Proceed to the third part of the tutorial \"<a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">Display smart home data in a Quasar, Vue.js and Chart.js powered web application</a>\".</blockquote>','Get and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend application','','inherit','closed','closed','','33-revision-v1','','','2019-04-09 18:23:47','2019-04-09 16:23:47','',33,'https://rike.dev/2019/04/09/33-revision-v1/',0,'revision','',0),(37,1,'2019-04-20 11:53:25','2019-04-20 09:53:25','In this short tutorial we will setup a Node.js application with a connection to a PostgreSQL database and provide data via API endpoint.\r\n<!--more--> [grey_box]This tutorial is part of the series \"<a href=\"https://rike.dev/2019/02/11/smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js/\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"[/grey_box] At first, follow the <a href=\"http://www.postgresqltutorial.com/install-postgresql/\">official online documentation</a> on how to install a PostgreSQL database system on your OS. On a Linux machine, you might do something like this:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt-get update\r\nsudo apt-get install postgresql postgresql-contrib</pre>\r\nThis installation comes with <em>psql, </em>a terminal-based front-end to PostgreSQL. Access to the (still empty) database system is provided with:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\"> sudo -u postgres psql</pre>\r\nCreate a new database with the name \"tshtest\", list all available databases and connect to \"tsh\":\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">postgres=# CREATE DATABASE tshtest;\r\npostgres=# \\list\r\npostgres=# \\c tsh</pre>\r\nFrom here you could create tables to store data, but it is also possible to do that from our Node.js application later. <em>So here we go:</em> Our Node.js application won\'t do anything more than handle our database requests from a (non-existing) frontend. You can test all API calls with a client like <a href=\"https://www.getpostman.com/\">Postman</a> or even just your browser. The next code snippet provides our basic Node.js (with Express.js) boilerplate already including the <a href=\"https://www.npmjs.com/package/pg\"><em>node-postgres</em> library</a>, the propably best client for Node.js. Because we are working on a web application which makes frequent queries we use a connection pool. The easiest and by far most common way to use node-postgres is through a connection pool.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\r\nconst app = express();\r\nconst uuid = require(\'uuid\');\r\nconst Pool = require(\'pg\').Pool;\r\nconst port = 3000;\r\n\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThe connection pool is triggered with the following code snippet. This code also checks on every server start, if the table \"posts\" is already existing. If not, it will be created. Right after that we will insert a first example post. If the SQL syntax is new to you, you can check out <a href=\"https://beginner-sql-tutorial.com/sql.htm\">this great tutorial</a> to know what\'s going on here.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'tshtest\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n    pool.query(\'INSERT INTO posts (id, room, temp, humidity, time) VALUES ($1, $2, $3, $4, $5)\', [uuid.v1(), 1, 30, 40, 2019-04-20], (error, results) =&gt; {\r\n        if (error) {\r\n          throw error\r\n        } else {\r\n          console.log(results);\r\n        }\r\n    })\r\n} catch (e) {\r\n    console.log(e)\r\n}</pre>\r\nIt\'s time to open up a new endpoint on <em>/getData</em>, which will fetch all posts from the table \"posts\" in the database \"tshtest\".\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/getData\', (req, res) =&gt; {\r\n    pool.query(\'SELECT * FROM posts\', (error, results) =&gt; {\r\n      if (error) {\r\n        throw error\r\n      }\r\n      res.status(200).json(results.rows)\r\n    })\r\n});</pre>\r\nJust for fun I add another endpoint <em>/deleteData</em>, which will delete all data from the database if called (be careful with that one ;)).\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/deleteData\', (req, res) =&gt; {\r\n    try {\r\n      pool.query(\"TRUNCATE TABLE posts\");\r\n      res.end(\'Deleted data!\');\r\n    } catch (e) {\r\n      res.send(e);\r\n      console.error(e);\r\n    }\r\n});</pre>\r\nStart you web app with <code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code> and check the endpoint http://localhost:3000/getData, which works also just right out of every browser and displays all database entries in JSON format.','Setup PostgreSQL database and API for Node.js','','publish','open','open','','setup-postgresql-database-and-api-for-node-js','','','2019-05-10 15:26:08','2019-05-10 13:26:08','',0,'https://rike.dev/?p=37',0,'post','',1),(38,1,'2019-04-09 18:25:29','2019-04-09 16:25:29','','Setup PostgreSQL database and API for Node.js','','inherit','closed','closed','','37-revision-v1','','','2019-04-09 18:25:29','2019-04-09 16:25:29','',37,'https://rike.dev/2019/04/09/37-revision-v1/',0,'revision','',0),(39,1,'2019-02-11 18:25:31','2019-02-11 17:25:31','[grey_box]This tutorial is the second part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\" (<a href=\"https://rike.dev/2019/02/11/hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1</a>&nbsp;|&nbsp;<a href=\"https://rike.dev/2019/02/07/smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application/\">2</a>&nbsp;|&nbsp;3)[/grey_box]\n<!--more-->\n\nIn this part we will build a basic dashboard displaying smart home sensor data with charts.&nbsp;We could go with whatever implementation you would like here: from vanilla HTML/CSS/JS to every framework which is suitable to our needs - which are basically doing an API call to our backend to fetch sensor data and lift them up to work nicely with a chart visualisation.&nbsp; There are also other good solutions to deal with IoT frontends like Pimatic, OpenHAB and FHEM, but let\'s just build this part completely on our own.&nbsp;We will go with the SPA framework Vue.js with Quasar on top: It comes with UI components in the popular Material Design, axios and some other features, that help getting started with Vue.js very fast.\n\nInstall the Vue.js (<a href=\"https://vuejs.org/\">Link</a>) and Quasar CLI (<a href=\"https://github.com/quasarframework/quasar\">Github link</a>) first!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install -g vue-cli\nnpm install -g quasar-cli</pre>\nGo to your project root and init a new sub project for your frontend code with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">quasar init vue-frontend</pre>\nNow start you development server on http://localhost:8080/ with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">quasar dev</pre>\nand you are ready to develop your frontend according to your likes. Quasar comes with a basic starter layout including a side navigation. However we don\'t need to work on this heavily and focus on the the homepage, where we will build the dashboard functionality.\n\nGo to <em>Index.vue</em> and update the basic dashboard layout. You can use static images like in my proposal and put them into the <em>src/assets</em> folder.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;template&gt;\n &lt;q-page padding class=\"docs-input row justify-center\"&gt;\n   &lt;div class=\"row gutter-sm\"&gt;\n     &lt;div class=\"col-6\"&gt;\n       &lt;q-card inline&gt;\n         &lt;q-card-media style=\"max-height: 250px\"&gt;\n            &lt;img src=\"~assets/temperature.jpg\"&gt;\n             &lt;q-card-title slot=\"overlay\"&gt;\n               Temperature\n               &lt;span slot=\"subtitle\"&gt;hot or not&lt;/span&gt;\n             &lt;/q-card-title&gt;\n         &lt;/q-card-media&gt;\n         &lt;q-card-main&gt;lorem ipsum&lt;/q-card-main&gt;\n       &lt;/q-card&gt;\n &lt;/div&gt;\n &lt;div class=\"col-6\"&gt;\n   &lt;q-card inline&gt;\n     &lt;q-card-media style=\"max-height: 250px\"&gt;\n       &lt;img src=\"~assets/humidity.jpg\"&gt;\n       &lt;q-card-title slot=\"overlay\"&gt;\n         Humidity\n         &lt;span slot=\"subtitle\"&gt;some like it wet&lt;/span&gt;\n       &lt;/q-card-title&gt;\n     &lt;/q-card-media&gt;\n     &lt;q-card-main&gt;lorem ipsum&lt;/q-card-main&gt;\n   &lt;/q-card&gt;\n  &lt;/div&gt;\n &lt;/div&gt;\n &lt;/q-page&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\n&lt;/style&gt;\n\n&lt;script&gt;\n  export default {\n  name: \"PageIndex\"\n  };\n&lt;/script&gt;</pre>\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/9.png\"><img class=\"imagedropshadow alignnone wp-image-50 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/9.png\" alt=\"Dashboard\" width=\"989\" height=\"407\"></a>\n<h5>Fetch sensor data from Node.js backend</h5>\nTo fetch necessary data on page load we make use of Vue.js\' created() function in the &lt;script&gt;&lt;/script&gt; section below the template. We insert a new function this.fetchData(); there and implement this new function in the methods\' block.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\"> methods: {\n  fetchData() {\n   this.loaded = false;\n   this.$axios\n    .get(\"http://localhost:3000/api\")\n    .then(response =&gt; {\n       return response.data;\n    })\n    .then(response =&gt; {\n      console.log(response);\n      this.loaded = true;\n\n    })\n    .catch(e =&gt; {\n      console.log(e);\n      this.$q.notify({\n       color: \"negative\",\n       position: \"top\",\n       message: \"Could not fetch.\",\n       icon: \"report_problem\"\n    });\n  });\n }\n}</pre>\nWe simply use the <em>axios</em> library (<a href=\"https://github.com/axios/axios\">Github link</a>) which Quasar included right from the setup, so we can use it globally without importing it explicitly. If this works properly you should be able to log the array of sensor data in your browser\'s developer tools. If there is any problem, we trigger&nbsp;the Quasar component notification and include the error message.\n\n<strong>Hint:</strong> If you encounter <em>CORS</em> problems in the communication between front- and backend (e. g. \"No Access-Control-Allow-Origin header is present on the requested resource.\") edit your<em> server.js</em> and restart it as follows:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.use(function (req, res, next) {\n res.header(\"Access-Control-Allow-Origin\", \"*\");\n res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n next();\n});</pre>\n<h5>Build a line chart with Chart.js</h5>\nIn this part I will focus on displaying only the temperature chart to make the tutorial more comprehensable. At first we will install the npm package <em>vue-chartjs </em><a href=\"https://github.com/apertureless/vue-chartjs\">(Github link)&nbsp;</a>which works as a practical Vue.js wrapper for Chart.js (<a href=\"https://www.chartjs.org/\">Link</a>).\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install vue-chartsjs --save</pre>\nNow we build a generic, reusable line chart component to use in the web application. Create a new file \"LineChart.js\" in the <em>src/components</em> folder and import the <em>vue-chartsjs</em> package. Furthermore, we will follow the basic tutorial for the package and specify a data collection prop and an options prop that will prettify our line chart later.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">import { Line } from \'vue-chartjs\';\n\nexport default {\n extends: Line,\n props: {\n   datacollection: {\n    type: Object,\n    default: null\n   },\n   options: {\n    type: Object,\n    default: null\n   }\n  },\n mounted() {\n   this.renderChart(this.datacollection, this.options, {responsive: true})\n }\n}</pre>\nSwitch to the<em> Index.vue</em> again and include a new line chart component (html tag) in your template.&nbsp;We want to display it within the card component. Additionally we specify some properties: <em>v-if=\"loaded\"</em> will tell the component that it should only mount, if the according data prop is true. Also, we transfer the <em>fetched datacollection_humidity</em> and <em>options_humidity</em> as our generic datacollection and options into the line chart.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;q-card-main&gt;\n &lt;line-chart\n   v-if=\"loaded\"\n   :datacollection=\"datacollection_humidity\"\n   :options=\"options_humidity\"\n &gt;&lt;/line-chart&gt;\n&lt;/q-card-main&gt;</pre>\nWe also have to edit our fetchData(); function and transfer the fetched data as a processible JSON to the data collection prop.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// process the backend response and add labels and some styling for the Chart.js api  \nconst datacollection_humidity = {\n   labels: response.map(obj =&gt; obj.time),\n   datasets: [\n     {\n       label: \"Humidity\",\n       backgroundColor: \"#000\",\n       data: response.map(obj =&gt; obj.humidity)\n     }\n   ]\n};\n\nthis.datacollection_humidity = datacollection_humidity;\n\n// set some optional properties regarding axes and ticks\nthis.options_humidity = {\n   scales: {\n   xAxes: [\n     {\n       type: \"time\",\n       distribution: \"linear\"\n     }\n   ],\n   yAxes: [\n     {\n       scaleLabel: {\n       display: true\n     },\n   ticks: {\n     callback: function(value, index, values) {\n       return value + \"%\";\n       }\n     }\n    }\n   ]\n  }\n};</pre>\nDon\'t forget to add the LineChart component and the necessary \"loaded\" data prop in your Vue.js &lt;script&gt;&lt;/script&gt; section.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">export default {\n name: \"PageIndex\",\n components: {\n   LineChart\n   },\n data() {\n   return {\n     loaded: false,\n     };\n   }\n}</pre>\nThat\'s it! On every page reload, the web application fetches available sensor data from our backend service and will display it as a line chart. You would like to add more functionality? You can find all features we built and more (filtering, reloading, deploying, saving persistently, ..) in my <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github repository</a> for this project.','Display smart home data in a Quasar, Vue.js and Chart.js powered web application','','publish','open','open','','display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application','','','2019-04-12 10:10:58','2019-04-12 08:10:58','',0,'https://rike.dev/?p=39',0,'post','',1),(40,1,'2019-04-09 18:26:11','2019-04-09 16:26:11','<blockquote>This tutorial is the second part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\" (<a href=\"http://rike.dev/texts/2019/02/11/choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1</a>&nbsp;|&nbsp;<a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2</a>&nbsp;|&nbsp;3)</blockquote>\n<!--more-->\n\nIn this part we will build a basic dashboard displaying smart home sensor data with charts.&nbsp;We could go with whatever implementation you would like here: from vanilla HTML/CSS/JS to every framework which is suitable to our needs - which are basically doing an API call to our backend to fetch sensor data and lift them up to work nicely with a chart visualisation.&nbsp; There are also other good solutions to deal with IoT frontends like Pimatic, OpenHAB and FHEM, but let\'s just build this part completely on our own.&nbsp;We will go with the SPA framework Vue.js with Quasar on top: It comes with UI components in the popular Material Design, axios and some other features, that help getting started with Vue.js very fast.\n\nInstall the Vue.js (<a href=\"https://vuejs.org/\">Link</a>) and Quasar CLI (<a href=\"https://github.com/quasarframework/quasar\">Github link</a>) first!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install -g vue-cli\nnpm install -g quasar-cli</pre>\nGo to your project root and init a new sub project for your frontend code with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">quasar init vue-frontend</pre>\nNow start you development server on http://localhost:8080/ with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">quasar dev</pre>\nand you are ready to develop your frontend according to your likes. Quasar comes with a basic starter layout including a side navigation. However we don\'t need to work on this heavily and focus on the the homepage, where we will build the dashboard functionality.\n\nGo to <em>Index.vue</em> and update the basic dashboard layout. You can use static images like in my proposal and put them into the <em>src/assets</em> folder.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;template&gt;\n &lt;q-page padding class=\"docs-input row justify-center\"&gt;\n   &lt;div class=\"row gutter-sm\"&gt;\n     &lt;div class=\"col-6\"&gt;\n       &lt;q-card inline&gt;\n         &lt;q-card-media style=\"max-height: 250px\"&gt;\n            &lt;img src=\"~assets/temperature.jpg\"&gt;\n             &lt;q-card-title slot=\"overlay\"&gt;\n               Temperature\n               &lt;span slot=\"subtitle\"&gt;hot or not&lt;/span&gt;\n             &lt;/q-card-title&gt;\n         &lt;/q-card-media&gt;\n         &lt;q-card-main&gt;lorem ipsum&lt;/q-card-main&gt;\n       &lt;/q-card&gt;\n &lt;/div&gt;\n &lt;div class=\"col-6\"&gt;\n   &lt;q-card inline&gt;\n     &lt;q-card-media style=\"max-height: 250px\"&gt;\n       &lt;img src=\"~assets/humidity.jpg\"&gt;\n       &lt;q-card-title slot=\"overlay\"&gt;\n         Humidity\n         &lt;span slot=\"subtitle\"&gt;some like it wet&lt;/span&gt;\n       &lt;/q-card-title&gt;\n     &lt;/q-card-media&gt;\n     &lt;q-card-main&gt;lorem ipsum&lt;/q-card-main&gt;\n   &lt;/q-card&gt;\n  &lt;/div&gt;\n &lt;/div&gt;\n &lt;/q-page&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\n&lt;/style&gt;\n\n&lt;script&gt;\n  export default {\n  name: \"PageIndex\"\n  };\n&lt;/script&gt;</pre>\n<img class=\"alignnone size-full wp-image-420\" src=\"http://rike.dev/texts/wp-content/uploads/2019/02/Auswahl_008.png\" alt=\"Basic dashboard\" width=\"989\" height=\"407\">\n<h5>Fetch sensor data from Node.js backend</h5>\nTo fetch necessary data on page load we make use of Vue.js\' created() function in the &lt;script&gt;&lt;/script&gt; section below the template. We insert a new function this.fetchData(); there and implement this new function in the methods\' block.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\"> methods: {\n  fetchData() {\n   this.loaded = false;\n   this.$axios\n    .get(\"http://localhost:3000/api\")\n    .then(response =&gt; {\n       return response.data;\n    })\n    .then(response =&gt; {\n      console.log(response);\n      this.loaded = true;\n\n    })\n    .catch(e =&gt; {\n      console.log(e);\n      this.$q.notify({\n       color: \"negative\",\n       position: \"top\",\n       message: \"Could not fetch.\",\n       icon: \"report_problem\"\n    });\n  });\n }\n}</pre>\nWe simply use the <em>axios</em> library (<a href=\"https://github.com/axios/axios\">Github link</a>) which Quasar included right from the setup, so we can use it globally without importing it explicitly. If this works properly you should be able to log the array of sensor data in your browser\'s developer tools. If there is any problem, we trigger&nbsp;the Quasar component notification and include the error message.\n\n<strong>Hint:</strong> If you encounter <em>CORS</em> problems in the communication between front- and backend (e. g. \"No Access-Control-Allow-Origin header is present on the requested resource.\") edit your<em> server.js</em> and restart it as follows:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.use(function (req, res, next) {\n res.header(\"Access-Control-Allow-Origin\", \"*\");\n res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n next();\n});</pre>\n<h5>Build a line chart with Chart.js</h5>\nIn this part I will focus on displaying only the temperature chart to make the tutorial more comprehensable. At first we will install the npm package <em>vue-chartjs </em><a href=\"https://github.com/apertureless/vue-chartjs\">(Github link)&nbsp;</a>which works as a practical Vue.js wrapper for Chart.js (<a href=\"https://www.chartjs.org/\">Link</a>).\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install vue-chartsjs --save</pre>\nNow we build a generic, reusable line chart component to use in the web application. Create a new file \"LineChart.js\" in the <em>src/components</em> folder and import the <em>vue-chartsjs</em> package. Furthermore, we will follow the basic tutorial for the package and specify a data collection prop and an options prop that will prettify our line chart later.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">import { Line } from \'vue-chartjs\';\n\nexport default {\n extends: Line,\n props: {\n   datacollection: {\n    type: Object,\n    default: null\n   },\n   options: {\n    type: Object,\n    default: null\n   }\n  },\n mounted() {\n   this.renderChart(this.datacollection, this.options, {responsive: true})\n }\n}</pre>\nSwitch to the<em> Index.vue</em> again and include a new line chart component (html tag) in your template.&nbsp;We want to display it within the card component. Additionally we specify some properties: <em>v-if=\"loaded\"</em> will tell the component that it should only mount, if the according data prop is true. Also, we transfer the <em>fetched datacollection_humidity</em> and <em>options_humidity</em> as our generic datacollection and options into the line chart.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;q-card-main&gt;\n &lt;line-chart\n   v-if=\"loaded\"\n   :datacollection=\"datacollection_humidity\"\n   :options=\"options_humidity\"\n &gt;&lt;/line-chart&gt;\n&lt;/q-card-main&gt;</pre>\nWe also have to edit our fetchData(); function and transfer the fetched data as a processible JSON to the data collection prop.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// process the backend response and add labels and some styling for the Chart.js api  \nconst datacollection_humidity = {\n   labels: response.map(obj =&gt; obj.time),\n   datasets: [\n     {\n       label: \"Humidity\",\n       backgroundColor: \"#000\",\n       data: response.map(obj =&gt; obj.humidity)\n     }\n   ]\n};\n\nthis.datacollection_humidity = datacollection_humidity;\n\n// set some optional properties regarding axes and ticks\nthis.options_humidity = {\n   scales: {\n   xAxes: [\n     {\n       type: \"time\",\n       distribution: \"linear\"\n     }\n   ],\n   yAxes: [\n     {\n       scaleLabel: {\n       display: true\n     },\n   ticks: {\n     callback: function(value, index, values) {\n       return value + \"%\";\n       }\n     }\n    }\n   ]\n  }\n};</pre>\nDon\'t forget to add the LineChart component and the necessary \"loaded\" data prop in your Vue.js &lt;script&gt;&lt;/script&gt; section.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">export default {\n name: \"PageIndex\",\n components: {\n   LineChart\n   },\n data() {\n   return {\n     loaded: false,\n     };\n   }\n}</pre>\nThat\'s it! On every page reload, the web application fetches available sensor data from our backend service and will display it as a line chart. You would like to add more functionality? You can find all features we built and more (filtering, reloading, deploying, saving persistently, ..) in my <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github repository</a> for this project.\n\n&nbsp;','Display smart home data in a Quasar, Vue.js and Chart.js powered web application','','inherit','closed','closed','','39-revision-v1','','','2019-04-09 18:26:11','2019-04-09 16:26:11','',39,'https://rike.dev/2019/04/09/39-revision-v1/',0,'revision','',0),(41,1,'2019-02-11 18:28:15','2019-02-11 17:28:15','[grey_box]This tutorial is part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"&nbsp;(1&nbsp;|&nbsp;<a href=\"https://rike.dev/2019/02/07/smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application/\">2</a>&nbsp;|&nbsp;<a href=\"https://rike.dev/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application/\">3</a>)[/grey_box]\n<!--more-->\n<h5>Which (new) IoT hardware do&nbsp;we need for this setup?</h5>\n<ul>\n 	<li><strong>RTL-SDR USB receiver:</strong>&nbsp;a cheap&nbsp;dongle&nbsp;that can be used as a computer based radio scanner for receiving live radio signals in your area (those gagdets receive signals from 500 kHz up to 1.75 GHz) (<a href=\"https://www.amazon.com/dp/B00VZ1AWQA/ref=cm_sw_em_r_mt_dp_U_GkvyCb5A4PD19\">Amazon link</a>)</li>\n 	<li><strong>Temperature / Humidity sensor:</strong> an even cheaper gagdet, that sends sensor data at 433 MHz into the area (e.g. as part of a \"real\" wheather station) (<a href=\"https://www.amazon.de/gp/product/B01MXEBI18/ref=ppx_yo_dt_b_asin_title_o05__o00_s00?ie=UTF8&amp;psc=1\">Amazon link</a>)</li>\n 	<li><strong>Raspberry Pi 3 Model B:</strong> the&nbsp;small&nbsp;single-board computer&nbsp;servers as our heart and base station to receive and process sensor data, I have the Raspbian operating system installed. It could even serve as your web server later (if you are familiar with maintaining your own, but I will use a cloud service in this tutorial). (<a href=\"https://www.amazon.com/Raspberry-Pi-RASPBERRYPI3-MODB-1GB-Model-Motherboard/dp/B01CD5VC92/ref=sr_1_3?ie=UTF8&amp;qid=1549882307&amp;sr=8-3&amp;keywords=Raspberry+Pi+3+Model+B\">Amazon link</a>)</li>\n</ul>\nAt first, setup your sensors whereever you like in your appartment and connect your RTL-SDR receiver with the Raspberry Pi. How to receive the raw data out of the nearby area? A little open source software will help us with that: <em>rtl_433</em> is a program (<a href=\"https://github.com/merbanan/rtl_433\">Github link</a>) to decode traffic from devices that are broadcasting on 433.9 MHz. We install it on our Raspberry Pi:\n<div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"># prepare os\nsudo apt-get update\nsudo apt-get upgrade\n \n# install dependencies\nsudo apt-get install libtool libusb-1.0.0-dev librtlsdr-dev rtl-sdr cmake\n \n# clone rtl_433 Git Repository\ngit clone https://github.com/merbanan/rtl_433.git\n \n# change to directory\ncd rtl_433/\n\n# make build folder\nmkdir build\ncd build/\n\n# compile\ncmake ../\n\n# make\nmake\n\n# install\nsudo make install\n\n# test if rtl_433 was properly installed\nrtl_433 -h\n</pre>\nAfter that we test if the program detects our RTL-SDR receiver with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">rtl_433&nbsp;-G</pre>\nI had some trouble with the following error:&nbsp;<em>Kernel driver is active, or device is claimed by second instance of librtlsdr.&nbsp;</em><em>In the first case, please either detach or blacklist the kernel module&nbsp;</em><em>(dvb_usb_rtl28xxu), or enable automatic detaching at compile time.</em>\n\nThe repository owner recommends\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo&nbsp;rmmod&nbsp;dvb_usb_rtl28xxu&nbsp;rtl2832</pre>\nin that case. If everything went well, the receiver is ready to get sensor data and<em> rtl_433</em> helps with processing, so that after a few seconds you should get signals in the nearby area (yes, even temperature sensor data of your neighbor\'s or sensor data of connected cars.)\n\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/7.png\"><img class=\"imagedropshadow alignnone wp-image-47 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/7.png\" alt=\"\" width=\"914\" height=\"261\"></a>\n\n</div>\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/8.png\"><img class=\"imagedropshadow alignnone wp-image-48 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/8.png\" alt=\"\" width=\"963\" height=\"252\"></a>\n\nHurray, hardware is running!\n\n<hr>\n\n[blue_box]Proceed to the second part of the tutorial \"<a href=\"https://rike.dev/2019/02/07/smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application/\">Get&nbsp;and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a>\".[/blue_box]','Choose and setup hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity','','publish','open','open','','hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity','','','2019-04-12 10:14:14','2019-04-12 08:14:14','',0,'https://rike.dev/?p=41',0,'post','',0),(42,1,'2019-04-09 18:29:18','2019-04-09 16:29:18','<blockquote>This tutorial is part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"&nbsp;(1&nbsp;|&nbsp;<a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2</a>&nbsp;|&nbsp;<a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3</a>)</blockquote>\n<!--more-->\n<h5>Which (new) IoT hardware do&nbsp;we need for this setup?</h5>\n<ul>\n 	<li><strong>RTL-SDR USB receiver:</strong>&nbsp;a cheap&nbsp;dongle&nbsp;that can be used as a computer based radio scanner for receiving live radio signals in your area (those gagdets receive signals from 500 kHz up to 1.75 GHz) (<a href=\"https://www.amazon.com/dp/B00VZ1AWQA/ref=cm_sw_em_r_mt_dp_U_GkvyCb5A4PD19\">Amazon link</a>)</li>\n 	<li><strong>Temperature / Humidity sensor:</strong> an even cheaper gagdet, that sends sensor data at 433 MHz into the area (e.g. as part of a \"real\" wheather station) (<a href=\"https://www.amazon.de/gp/product/B01MXEBI18/ref=ppx_yo_dt_b_asin_title_o05__o00_s00?ie=UTF8&amp;psc=1\">Amazon link</a>)</li>\n 	<li><strong>Raspberry Pi 3 Model B:</strong> the&nbsp;small&nbsp;single-board computer&nbsp;servers as our heart and base station to receive and process sensor data, I have the Raspbian operating system installed. It could even serve as your web server later (if you are familiar with maintaining your own, but I will use a cloud service in this tutorial). (<a href=\"https://www.amazon.com/Raspberry-Pi-RASPBERRYPI3-MODB-1GB-Model-Motherboard/dp/B01CD5VC92/ref=sr_1_3?ie=UTF8&amp;qid=1549882307&amp;sr=8-3&amp;keywords=Raspberry+Pi+3+Model+B\">Amazon link</a>)</li>\n</ul>\nAt first, setup your sensors whereever you like in your appartment and connect your RTL-SDR receiver with the Raspberry Pi. How to receive the raw data out of the nearby area? A little open source software will help us with that: <em>rtl_433</em> is a program (<a href=\"https://github.com/merbanan/rtl_433\">Github link</a>) to decode traffic from devices that are broadcasting on 433.9 MHz. We install it on our Raspberry Pi:\n<div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"># prepare os\nsudo apt-get update\nsudo apt-get upgrade\n \n# install dependencies\nsudo apt-get install libtool libusb-1.0.0-dev librtlsdr-dev rtl-sdr cmake\n \n# clone rtl_433 Git Repository\ngit clone https://github.com/merbanan/rtl_433.git\n \n# change to directory\ncd rtl_433/\n\n# make build folder\nmkdir build\ncd build/\n\n# compile\ncmake ../\n\n# make\nmake\n\n# install\nsudo make install\n\n# test if rtl_433 was properly installed\nrtl_433 -h\n</pre>\nAfter that we test if the program detects our RTL-SDR receiver with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">rtl_433&nbsp;-G</pre>\nI had some trouble with the following error:&nbsp;<em>Kernel driver is active, or device is claimed by second instance of librtlsdr.&nbsp;</em><em>In the first case, please either detach or blacklist the kernel module&nbsp;</em><em>(dvb_usb_rtl28xxu), or enable automatic detaching at compile time.</em>\n\nThe repository owner recommends\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo&nbsp;rmmod&nbsp;dvb_usb_rtl28xxu&nbsp;rtl2832</pre>\nin that case. If everything went well, the receiver is ready to get sensor data and<em> rtl_433</em> helps with processing, so that after a few seconds you should get signals in the nearby area (yes, even temperature sensor data of your neighbor\'s or sensor data of connected cars.)\n\n</div>\n<a href=\"http://rike.dev/texts/wp-content/uploads/2019/01/1.png\"><img class=\"imagedropshadow alignnone wp-image-392 size-full\" src=\"http://rike.dev/texts/wp-content/uploads/2019/01/1.png\" alt=\"rtl_433 Output\" width=\"914\" height=\"261\"></a>\n\n<a href=\"http://rike.dev/texts/wp-content/uploads/2019/01/2.png\"><img class=\"imagedropshadow alignnone wp-image-393 size-full\" src=\"http://rike.dev/texts/wp-content/uploads/2019/01/2.png\" alt=\"rtl_433 Output - 2\" width=\"963\" height=\"252\"></a>\n\nHurray, hardware is running!\n\n&nbsp;\n\n<hr>\n\n<blockquote>Proceed to the second part of the tutorial \"<a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">Get&nbsp;and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a>\".</blockquote>','Choose and setup hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity','','inherit','closed','closed','','41-revision-v1','','','2019-04-09 18:29:18','2019-04-09 16:29:18','',41,'https://rike.dev/2019/04/09/41-revision-v1/',0,'revision','',0),(43,1,'2019-02-11 18:29:47','2019-02-11 17:29:47','[grey_box] <strong>TLDR;</strong> This three-part tutorial explains how to setup a basic smart home web app tracking sensor data for temperature and humidity with a Raspberry Pi and web technologies like Mosquitto, Node.js, Express.js, Vue.js, Quasar and Chart.js.[/grey_box]\r\n\r\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/6.png\"><img class=\" imagedropshadow aligncenter wp-image-45 size-large\" src=\"https://rike.dev/wp-content/uploads/2019/02/6-1024x667.png\" alt=\"Tiny Smart Home\" width=\"650\" height=\"423\" /></a>\r\n\r\nSo I went on maternity this January and came up with an idea about a nice little project to do in my free time that went a little further from my usual Javascript front- und backend projects I usually do at work. I have a Raspberry Pi 3 at home I bought over a year ago and never did something useful with so I decided I wanted to track temperatures and humidity in our child\'s room and bedroom to a have an idea about a good indoor climate. In the end I wanted to finalize a cloud-based dashboard web app which provides the incoming sensor data in real time and available everywhere and everytime.\r\n\r\n<em>I wrote this three-part tutorial to track my experiences, tech choices and suggestions for you to follow and came up with a solution that comes with an easy hardware setup and some popular (and worth to learn if you are not already familiar with) web development technologies, including Node.js, Mosquitto and Vue.js.</em>\r\n\r\nThe basic three parts will allow you to run a web application on your local machine. Nevertheless I added some more features including persistent database storing and the deployment in the cloud with Heroku. You will find these tutorials at the end of this page.\r\n[green_box]<strong>The code base is stored on <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github</a>!</strong>[/green_box]\r\n\r\n<!--more-->\r\n<h5><a href=\"https://rike.dev/2019/02/11/hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1 . Choose and install hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity</a></h5>\r\nI did some research on how to build basic weather stations and home automation systems with a Raspberry Pi but they were mostly no wireless solutions or they came up with too much IoT hacking/soldering and especially required a lot of electrical knowledge I do not have. The core problem I figured out was that many tutorials wanted me to build a remote sensor gagdet with radio functionality and sleep mode (e.g. with an Arduino) all on my own. So the question was: Is there a better and easier alternative to such an all self made solution and what about the receiving hardware on the Raspberry Pi?\r\n\r\nFortunately, there exists an easier alternative I will show you in this part of the tutorial which deals with slightly more expensive IoT gagdets but which enabled me to set up my smart home hardware in a smooth but nonetheless instructive way.\r\n<h5><a href=\"https://rike.dev/2019/02/07/smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application/\">2. Get and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a></h5>\r\nThe main problem in this part was how to set up a stable and endlessly running task on my Raspberry Pi to continuously receive the (correct!) sensor data. Secondly I wanted it to somehow process and transfer it to a backend/microservice/middleware, which then would provide an upcoming frontend with JSON data to display. MQTT is the IoT protocol to go with but how to set it up? How can a MQTT broker like Mosquitto work with a Node.js backend properly?\r\n<h5><a href=\"https://rike.dev/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application/\">3. Display smart home data in a Quasar, Vue.js and Chart.js powered web application</a></h5>\r\nThis was somehow the easiest part, because I mainly work as a frontend engineer and know how to implement dashboard-like web app solutions in combination with backend REST API services and the like. I challenged myself with an insight into Vue.js, since I mainly used React as a SPA framework before. In search of a nice UI library I discovered Quasar, which provides a very useful CLI and UI components so that there was no need to come up with an own CSS by myself.\r\n\r\n<hr />\r\n\r\n<h5> Add more features?</h5>\r\nI wrote some more or less standalone tutorials, which will help you to improve your existent application with some more capacities.\r\n<ol>\r\n 	<li>Deploy your smart home application up to the cloud on Heroku <em>(coming soon)</em></li>\r\n 	<li>\r\n<div>Build a simple session-based authentication with Node.js and Vue.js <em>(coming soon)</em></div></li>\r\n 	<li>\r\n<div><a style=\"color: #e44249;\" href=\"https://rike.dev/2019/04/20/setup-postgresql-database-and-api-for-node-js\">Setup PostgreSQL database and API for Node.js</a></div></li>\r\n 	<li><a style=\"color: #e44249;\" href=\"https://rike.dev/2019/04/20/get-a-csv-download-out-of-postgresql-or-lowdb-database-on-node-js/\">Get a CSV download out of PostgreSQL or lowdb database on Node.js</a></li>\r\n</ol>','How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js','','publish','open','open','','smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js','','','2019-04-20 12:52:28','2019-04-20 10:52:28','',0,'https://rike.dev/?p=43',0,'post','',4),(44,1,'2019-04-09 18:30:20','2019-04-09 16:30:20','<blockquote><strong>TLDR;</strong> This three-part tutorial&nbsp;explains how to setup a basic smart home web app tracking sensor data for temperature and humidity with a Raspberry Pi and web technologies like Mosquitto, Node.js, Express.js, Vue.js, Quasar and Chart.js.</blockquote>\n<a href=\"http://rike.dev/texts/wp-content/uploads/2019/02/Auswahl_009.png\"><img class=\"imagedropshadow alignnone wp-image-481 size-full\" src=\"http://rike.dev/texts/wp-content/uploads/2019/02/Auswahl_009.png\" alt=\"Tiny Smart Home\" width=\"1286\" height=\"838\"></a>\n\nSo I went on maternity this January and came up with an idea about a nice little project to do in my free time that went a little further from my usual Javascript front- und backend projects I usually do at work. I have a Raspberry Pi 3 at home I bought over a year ago and never did something useful with so I decided I wanted to track temperatures and humidity in our child\'s room and bedroom to a have an idea about a good indoor climate. In the end I wanted to finalize a cloud-based dashboard web app which provides the incoming sensor data in real time and available everywhere and everytime.\n\n<em>I wrote this three-part tutorial to track my experiences, tech choices and suggestions for you to follow and came up with a solution that comes with an easy&nbsp;hardware setup and some popular (and worth to learn if you are not already familiar with) web development technologies, including Node.js, Mosquitto and Vue.js.</em>\n\nThe basic three parts will allow you to run a web application on your local machine. Nevertheless I added some more features including persistent database storing and the deployment in the cloud with Heroku. You will find these tutorials at the end of this page.\n<blockquote><strong>The code base is stored on <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github</a>!</strong></blockquote>\n<!--more-->\n<h5><a href=\"http://rike.dev/texts/2019/02/11/choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity\">1 . Choose and install hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity</a></h5>\nI did some research on how to build basic&nbsp;weather stations and home automation systems with a Raspberry Pi but they were mostly no wireless solutions or they came up with too much IoT hacking/soldering and especially required a lot of electrical knowledge I do not have. The core problem I figured out was that many tutorials wanted me to build a remote sensor gagdet with radio functionality and sleep mode (e.g. with an Arduino) all on my own.&nbsp;So the question was: Is there a better and easier alternative to such an all self made solution and what about the receiving hardware on the Raspberry Pi?\n\nFortunately, there exists an easier alternative I will show you in&nbsp;this part of the tutorial which deals with slightly more expensive IoT gagdets but which enabled me to set up my smart home hardware in a smooth but nonetheless instructive way.\n<h5><a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2. Get&nbsp;and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a></h5>\nThe main problem in this part was how to set up a stable and endlessly running task on my Raspberry Pi to continuously receive the (correct!) sensor data. Secondly I wanted it to somehow process and transfer it&nbsp;to a backend/microservice/middleware, which then would&nbsp;provide&nbsp;an upcoming frontend with JSON data to display. MQTT is the IoT protocol to go with but how to set it up? How can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5><a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3. Display smart home data&nbsp;in a Quasar, Vue.js and Chart.js powered web application</a></h5>\n<div>This was somehow the easiest part, because I mainly work as a frontend engineer and know how to implement dashboard-like web app solutions in combination with backend REST API services and the like. I challenged myself with an insight into Vue.js, since I mainly used React as a SPA framework before. In search of a nice UI library I discovered Quasar, which provides a very useful CLI and UI components so that there was no need to come up with an own CSS by myself.</div>\n<div></div>\n<div>\n\n<hr>\n\n</div>\n<h5>&nbsp;Add more features?</h5>\nI wrote some more or less standalone tutorials, which will help you to improve your existent application with some more capacities.\n<ol>\n 	<li>Deploy your smart home application up to the cloud on Heroku <em>(coming soon)</em></li>\n 	<li>\n<div>Build a simple session-based authentication with Node.js and Vue.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>\n<div>Setup PostgreSQL database and API for Node.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>Get a CSV download out of PostgreSQL database&nbsp;<em>(coming soon)</em></li>\n</ol>\n<div></div>','How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js','','inherit','closed','closed','','43-revision-v1','','','2019-04-09 18:30:20','2019-04-09 16:30:20','',43,'https://rike.dev/2019/04/09/43-revision-v1/',0,'revision','',0),(45,1,'2019-04-09 18:32:49','2019-04-09 16:32:49','','6','','inherit','open','closed','','6','','','2019-04-09 18:32:56','2019-04-09 16:32:56','',43,'https://rike.dev/wp-content/uploads/2019/02/6.png',0,'attachment','image/png',0),(46,1,'2019-04-09 18:33:11','2019-04-09 16:33:11','<blockquote><strong>TLDR;</strong> This three-part tutorial explains how to setup a basic smart home web app tracking sensor data for temperature and humidity with a Raspberry Pi and web technologies like Mosquitto, Node.js, Express.js, Vue.js, Quasar and Chart.js.</blockquote>\n<img class=\"wp-image-45 size-large aligncenter\" src=\"https://rike.dev/wp-content/uploads/2019/02/6-1024x667.png\" alt=\"Tiny Smart Home\" width=\"640\" height=\"417\" />\n\nSo I went on maternity this January and came up with an idea about a nice little project to do in my free time that went a little further from my usual Javascript front- und backend projects I usually do at work. I have a Raspberry Pi 3 at home I bought over a year ago and never did something useful with so I decided I wanted to track temperatures and humidity in our child\'s room and bedroom to a have an idea about a good indoor climate. In the end I wanted to finalize a cloud-based dashboard web app which provides the incoming sensor data in real time and available everywhere and everytime.\n\n<em>I wrote this three-part tutorial to track my experiences, tech choices and suggestions for you to follow and came up with a solution that comes with an easy hardware setup and some popular (and worth to learn if you are not already familiar with) web development technologies, including Node.js, Mosquitto and Vue.js.</em>\n\nThe basic three parts will allow you to run a web application on your local machine. Nevertheless I added some more features including persistent database storing and the deployment in the cloud with Heroku. You will find these tutorials at the end of this page.\n<blockquote><strong>The code base is stored on <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github</a>!</strong></blockquote>\n<!--more-->\n<h5><a href=\"http://rike.dev/texts/2019/02/11/choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity\">1 . Choose and install hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity</a></h5>\nI did some research on how to build basic weather stations and home automation systems with a Raspberry Pi but they were mostly no wireless solutions or they came up with too much IoT hacking/soldering and especially required a lot of electrical knowledge I do not have. The core problem I figured out was that many tutorials wanted me to build a remote sensor gagdet with radio functionality and sleep mode (e.g. with an Arduino) all on my own. So the question was: Is there a better and easier alternative to such an all self made solution and what about the receiving hardware on the Raspberry Pi?\n\nFortunately, there exists an easier alternative I will show you in this part of the tutorial which deals with slightly more expensive IoT gagdets but which enabled me to set up my smart home hardware in a smooth but nonetheless instructive way.\n<h5><a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2. Get and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a></h5>\nThe main problem in this part was how to set up a stable and endlessly running task on my Raspberry Pi to continuously receive the (correct!) sensor data. Secondly I wanted it to somehow process and transfer it to a backend/microservice/middleware, which then would provide an upcoming frontend with JSON data to display. MQTT is the IoT protocol to go with but how to set it up? How can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5><a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3. Display smart home data in a Quasar, Vue.js and Chart.js powered web application</a></h5>\n<div>This was somehow the easiest part, because I mainly work as a frontend engineer and know how to implement dashboard-like web app solutions in combination with backend REST API services and the like. I challenged myself with an insight into Vue.js, since I mainly used React as a SPA framework before. In search of a nice UI library I discovered Quasar, which provides a very useful CLI and UI components so that there was no need to come up with an own CSS by myself.</div>\n<div></div>\n<div>\n\n<hr />\n\n</div>\n<h5> Add more features?</h5>\nI wrote some more or less standalone tutorials, which will help you to improve your existent application with some more capacities.\n<ol>\n 	<li>Deploy your smart home application up to the cloud on Heroku <em>(coming soon)</em></li>\n 	<li>\n<div>Build a simple session-based authentication with Node.js and Vue.js <em>(coming soon)</em></div></li>\n 	<li>\n<div>Setup PostgreSQL database and API for Node.js <em>(coming soon)</em></div></li>\n 	<li>Get a CSV download out of PostgreSQL database <em>(coming soon)</em></li>\n</ol>\n<div></div>','How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js','','inherit','closed','closed','','43-revision-v1','','','2019-04-09 18:33:11','2019-04-09 16:33:11','',43,'https://rike.dev/2019/04/09/43-revision-v1/',0,'revision','',0),(47,1,'2019-04-09 18:34:25','2019-04-09 16:34:25','','','','inherit','open','closed','','7','','','2019-04-09 18:34:32','2019-04-09 16:34:32','',41,'https://rike.dev/wp-content/uploads/2019/02/7.png',0,'attachment','image/png',0),(48,1,'2019-04-09 18:35:04','2019-04-09 16:35:04','','','','inherit','open','closed','','8','','','2019-04-09 18:35:07','2019-04-09 16:35:07','',41,'https://rike.dev/wp-content/uploads/2019/02/8.png',0,'attachment','image/png',0),(49,1,'2019-04-09 18:35:19','2019-04-09 16:35:19','<blockquote>This tutorial is part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\" (1 | <a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2</a> | <a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3</a>)</blockquote>\n<!--more-->\n<h5>Which (new) IoT hardware do we need for this setup?</h5>\n<ul>\n 	<li><strong>RTL-SDR USB receiver:</strong> a cheap dongle that can be used as a computer based radio scanner for receiving live radio signals in your area (those gagdets receive signals from 500 kHz up to 1.75 GHz) (<a href=\"https://www.amazon.com/dp/B00VZ1AWQA/ref=cm_sw_em_r_mt_dp_U_GkvyCb5A4PD19\">Amazon link</a>)</li>\n 	<li><strong>Temperature / Humidity sensor:</strong> an even cheaper gagdet, that sends sensor data at 433 MHz into the area (e.g. as part of a \"real\" wheather station) (<a href=\"https://www.amazon.de/gp/product/B01MXEBI18/ref=ppx_yo_dt_b_asin_title_o05__o00_s00?ie=UTF8&amp;psc=1\">Amazon link</a>)</li>\n 	<li><strong>Raspberry Pi 3 Model B:</strong> the small single-board computer servers as our heart and base station to receive and process sensor data, I have the Raspbian operating system installed. It could even serve as your web server later (if you are familiar with maintaining your own, but I will use a cloud service in this tutorial). (<a href=\"https://www.amazon.com/Raspberry-Pi-RASPBERRYPI3-MODB-1GB-Model-Motherboard/dp/B01CD5VC92/ref=sr_1_3?ie=UTF8&amp;qid=1549882307&amp;sr=8-3&amp;keywords=Raspberry+Pi+3+Model+B\">Amazon link</a>)</li>\n</ul>\nAt first, setup your sensors whereever you like in your appartment and connect your RTL-SDR receiver with the Raspberry Pi. How to receive the raw data out of the nearby area? A little open source software will help us with that: <em>rtl_433</em> is a program (<a href=\"https://github.com/merbanan/rtl_433\">Github link</a>) to decode traffic from devices that are broadcasting on 433.9 MHz. We install it on our Raspberry Pi:\n<div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"># prepare os\nsudo apt-get update\nsudo apt-get upgrade\n \n# install dependencies\nsudo apt-get install libtool libusb-1.0.0-dev librtlsdr-dev rtl-sdr cmake\n \n# clone rtl_433 Git Repository\ngit clone https://github.com/merbanan/rtl_433.git\n \n# change to directory\ncd rtl_433/\n\n# make build folder\nmkdir build\ncd build/\n\n# compile\ncmake ../\n\n# make\nmake\n\n# install\nsudo make install\n\n# test if rtl_433 was properly installed\nrtl_433 -h\n</pre>\nAfter that we test if the program detects our RTL-SDR receiver with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">rtl_433 -G</pre>\nI had some trouble with the following error: <em>Kernel driver is active, or device is claimed by second instance of librtlsdr. </em><em>In the first case, please either detach or blacklist the kernel module </em><em>(dvb_usb_rtl28xxu), or enable automatic detaching at compile time.</em>\n\nThe repository owner recommends\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo rmmod dvb_usb_rtl28xxu rtl2832</pre>\nin that case. If everything went well, the receiver is ready to get sensor data and<em> rtl_433</em> helps with processing, so that after a few seconds you should get signals in the nearby area (yes, even temperature sensor data of your neighbor\'s or sensor data of connected cars.)\n\n<img class=\"alignnone wp-image-47 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/7.png\" alt=\"\" width=\"914\" height=\"261\" />\n\n</div>\n<img class=\"alignnone wp-image-48 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/8.png\" alt=\"\" width=\"963\" height=\"252\" />\n\nHurray, hardware is running!\n\n<hr />\n\n<blockquote>Proceed to the second part of the tutorial \"<a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">Get and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a>\".</blockquote>','Choose and setup hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity','','inherit','closed','closed','','41-revision-v1','','','2019-04-09 18:35:19','2019-04-09 16:35:19','',41,'https://rike.dev/2019/04/09/41-revision-v1/',0,'revision','',0),(50,1,'2019-04-09 18:36:41','2019-04-09 16:36:41','','9','','inherit','open','closed','','9','','','2019-04-09 18:36:51','2019-04-09 16:36:51','',39,'https://rike.dev/wp-content/uploads/2019/02/9.png',0,'attachment','image/png',0),(51,1,'2019-04-09 18:37:01','2019-04-09 16:37:01','<blockquote>This tutorial is the second part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\" (<a href=\"http://rike.dev/texts/2019/02/11/choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1</a> | <a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2</a> | 3)</blockquote>\n<!--more-->\n\nIn this part we will build a basic dashboard displaying smart home sensor data with charts. We could go with whatever implementation you would like here: from vanilla HTML/CSS/JS to every framework which is suitable to our needs - which are basically doing an API call to our backend to fetch sensor data and lift them up to work nicely with a chart visualisation.  There are also other good solutions to deal with IoT frontends like Pimatic, OpenHAB and FHEM, but let\'s just build this part completely on our own. We will go with the SPA framework Vue.js with Quasar on top: It comes with UI components in the popular Material Design, axios and some other features, that help getting started with Vue.js very fast.\n\nInstall the Vue.js (<a href=\"https://vuejs.org/\">Link</a>) and Quasar CLI (<a href=\"https://github.com/quasarframework/quasar\">Github link</a>) first!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install -g vue-cli\nnpm install -g quasar-cli</pre>\nGo to your project root and init a new sub project for your frontend code with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">quasar init vue-frontend</pre>\nNow start you development server on http://localhost:8080/ with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">quasar dev</pre>\nand you are ready to develop your frontend according to your likes. Quasar comes with a basic starter layout including a side navigation. However we don\'t need to work on this heavily and focus on the the homepage, where we will build the dashboard functionality.\n\nGo to <em>Index.vue</em> and update the basic dashboard layout. You can use static images like in my proposal and put them into the <em>src/assets</em> folder.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;template&gt;\n &lt;q-page padding class=\"docs-input row justify-center\"&gt;\n   &lt;div class=\"row gutter-sm\"&gt;\n     &lt;div class=\"col-6\"&gt;\n       &lt;q-card inline&gt;\n         &lt;q-card-media style=\"max-height: 250px\"&gt;\n            &lt;img src=\"~assets/temperature.jpg\"&gt;\n             &lt;q-card-title slot=\"overlay\"&gt;\n               Temperature\n               &lt;span slot=\"subtitle\"&gt;hot or not&lt;/span&gt;\n             &lt;/q-card-title&gt;\n         &lt;/q-card-media&gt;\n         &lt;q-card-main&gt;lorem ipsum&lt;/q-card-main&gt;\n       &lt;/q-card&gt;\n &lt;/div&gt;\n &lt;div class=\"col-6\"&gt;\n   &lt;q-card inline&gt;\n     &lt;q-card-media style=\"max-height: 250px\"&gt;\n       &lt;img src=\"~assets/humidity.jpg\"&gt;\n       &lt;q-card-title slot=\"overlay\"&gt;\n         Humidity\n         &lt;span slot=\"subtitle\"&gt;some like it wet&lt;/span&gt;\n       &lt;/q-card-title&gt;\n     &lt;/q-card-media&gt;\n     &lt;q-card-main&gt;lorem ipsum&lt;/q-card-main&gt;\n   &lt;/q-card&gt;\n  &lt;/div&gt;\n &lt;/div&gt;\n &lt;/q-page&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\n&lt;/style&gt;\n\n&lt;script&gt;\n  export default {\n  name: \"PageIndex\"\n  };\n&lt;/script&gt;</pre>\n<img class=\"alignnone wp-image-50 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/9.png\" alt=\"Dashboard\" width=\"989\" height=\"407\" />\n<h5>Fetch sensor data from Node.js backend</h5>\nTo fetch necessary data on page load we make use of Vue.js\' created() function in the &lt;script&gt;&lt;/script&gt; section below the template. We insert a new function this.fetchData(); there and implement this new function in the methods\' block.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\"> methods: {\n  fetchData() {\n   this.loaded = false;\n   this.$axios\n    .get(\"http://localhost:3000/api\")\n    .then(response =&gt; {\n       return response.data;\n    })\n    .then(response =&gt; {\n      console.log(response);\n      this.loaded = true;\n\n    })\n    .catch(e =&gt; {\n      console.log(e);\n      this.$q.notify({\n       color: \"negative\",\n       position: \"top\",\n       message: \"Could not fetch.\",\n       icon: \"report_problem\"\n    });\n  });\n }\n}</pre>\nWe simply use the <em>axios</em> library (<a href=\"https://github.com/axios/axios\">Github link</a>) which Quasar included right from the setup, so we can use it globally without importing it explicitly. If this works properly you should be able to log the array of sensor data in your browser\'s developer tools. If there is any problem, we trigger the Quasar component notification and include the error message.\n\n<strong>Hint:</strong> If you encounter <em>CORS</em> problems in the communication between front- and backend (e. g. \"No Access-Control-Allow-Origin header is present on the requested resource.\") edit your<em> server.js</em> and restart it as follows:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.use(function (req, res, next) {\n res.header(\"Access-Control-Allow-Origin\", \"*\");\n res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n next();\n});</pre>\n<h5>Build a line chart with Chart.js</h5>\nIn this part I will focus on displaying only the temperature chart to make the tutorial more comprehensable. At first we will install the npm package <em>vue-chartjs </em><a href=\"https://github.com/apertureless/vue-chartjs\">(Github link) </a>which works as a practical Vue.js wrapper for Chart.js (<a href=\"https://www.chartjs.org/\">Link</a>).\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install vue-chartsjs --save</pre>\nNow we build a generic, reusable line chart component to use in the web application. Create a new file \"LineChart.js\" in the <em>src/components</em> folder and import the <em>vue-chartsjs</em> package. Furthermore, we will follow the basic tutorial for the package and specify a data collection prop and an options prop that will prettify our line chart later.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">import { Line } from \'vue-chartjs\';\n\nexport default {\n extends: Line,\n props: {\n   datacollection: {\n    type: Object,\n    default: null\n   },\n   options: {\n    type: Object,\n    default: null\n   }\n  },\n mounted() {\n   this.renderChart(this.datacollection, this.options, {responsive: true})\n }\n}</pre>\nSwitch to the<em> Index.vue</em> again and include a new line chart component (html tag) in your template. We want to display it within the card component. Additionally we specify some properties: <em>v-if=\"loaded\"</em> will tell the component that it should only mount, if the according data prop is true. Also, we transfer the <em>fetched datacollection_humidity</em> and <em>options_humidity</em> as our generic datacollection and options into the line chart.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;q-card-main&gt;\n &lt;line-chart\n   v-if=\"loaded\"\n   :datacollection=\"datacollection_humidity\"\n   :options=\"options_humidity\"\n &gt;&lt;/line-chart&gt;\n&lt;/q-card-main&gt;</pre>\nWe also have to edit our fetchData(); function and transfer the fetched data as a processible JSON to the data collection prop.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// process the backend response and add labels and some styling for the Chart.js api  \nconst datacollection_humidity = {\n   labels: response.map(obj =&gt; obj.time),\n   datasets: [\n     {\n       label: \"Humidity\",\n       backgroundColor: \"#000\",\n       data: response.map(obj =&gt; obj.humidity)\n     }\n   ]\n};\n\nthis.datacollection_humidity = datacollection_humidity;\n\n// set some optional properties regarding axes and ticks\nthis.options_humidity = {\n   scales: {\n   xAxes: [\n     {\n       type: \"time\",\n       distribution: \"linear\"\n     }\n   ],\n   yAxes: [\n     {\n       scaleLabel: {\n       display: true\n     },\n   ticks: {\n     callback: function(value, index, values) {\n       return value + \"%\";\n       }\n     }\n    }\n   ]\n  }\n};</pre>\nDon\'t forget to add the LineChart component and the necessary \"loaded\" data prop in your Vue.js &lt;script&gt;&lt;/script&gt; section.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">export default {\n name: \"PageIndex\",\n components: {\n   LineChart\n   },\n data() {\n   return {\n     loaded: false,\n     };\n   }\n}</pre>\nThat\'s it! On every page reload, the web application fetches available sensor data from our backend service and will display it as a line chart. You would like to add more functionality? You can find all features we built and more (filtering, reloading, deploying, saving persistently, ..) in my <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github repository</a> for this project.','Display smart home data in a Quasar, Vue.js and Chart.js powered web application','','inherit','closed','closed','','39-revision-v1','','','2019-04-09 18:37:01','2019-04-09 16:37:01','',39,'https://rike.dev/2019/04/09/39-revision-v1/',0,'revision','',0),(52,1,'2019-04-09 18:37:52','2019-04-09 16:37:52','<blockquote>This tutorial is the second part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"&nbsp;(<a href=\"http://rike.dev/texts/2019/02/11/choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1</a>&nbsp;|&nbsp;2&nbsp;|&nbsp;<a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3</a>)</blockquote>\n<!--more-->\n\nThe main problem&nbsp;in this part is how to setup a stable and endlessly running task on&nbsp;a Raspberry Pi to continuesly receive the (correct!) sensor data. Secondly&nbsp;we want it to somehow process and transfer it&nbsp;to a service that works as our middleware to provide the frontend with JSON data to display. MQTT is the IoT protocol to go with but how can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5>Setup a web server backend with Node.js and Express.js</h5>\nMultiple solutions would be possible here, but I decided for a Javascript Node.js backend which will be run with Express.js. Make sure <em>node</em> and <em>npm</em> are ready on your machine or install them first.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">node -v\nnpm -v</pre>\nSetup a project folder and a make a subfolder \"server\". Create a new file \"server.js\" within and code a basic backend service. We will upgrade its functionality later.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\nconst app = express();\n\n// test\napp.get(\'/\', function (req, res) {\n res.send(\'hello world!\');\n});\n\napp.listen(3000, () =&gt; console.log(\'App listening on port \', 3000));</pre>\nDon\'t forget to install the <em>npm</em> package<em> express</em> in your console and start the application! (Don\'t know&nbsp;how Node.js with Express.js works? Check out e.g.&nbsp;<a href=\"https://www.guru99.com/node-js-express.html\">this tutorial</a>.)\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm init\nnpm install express --save\nnode server.js</pre>\nGo to your browser and check if your&nbsp;web server works on http://localhost:3000.\n<h5>Setup the MQTT broker Mosquitto</h5>\nWhy MQTT? The protocol is a lightweight publish/subscribe messaging transport solution which is very popular in the IoT field. We will use a MQTT broker as the control center to receive raw sensor data from our&nbsp;<em>rtl_433</em> program, we installed in the previous chapter and forward them to our web server. Mosquitto is a common MQTT broker and is installed and tested on or Raspberry Pi with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt install -y mosquitto mosquitto-clients\nmosquitto -v</pre>\nThe broker will be accessable to clients on mqtt://localhost:1883.\n<h5>Setup a bash script that pipes received data to Mosquitto</h5>\nThe Raspberry Pi now gets the important task to not only start <em>rtl_433</em> to decode traffic from devices that are broadcasting on 433.9 MHz manually, but to start this task on every reboot automatically. For that, we create a cronjob with the tool <em>crontab</em>, which should be installed on&nbsp;our&nbsp;system.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">crontab -h</pre>\nOn your Raspberry Pi create a new file \"tsh_raspberry_script.sh\" (or whatever you want) in your <em>pi</em>&nbsp;home folder and make it executable from your terminal:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">chmod +x tsh_raspberry_script.sh</pre>\nAfter that, open the file in a text editor and add the following bash script. It will start<em> rtl_433</em> and pipe the output in JSON format to Mosquitto, where it will be published in the topic \"home/rtl_344\". Don\'t forget to close and safe the file.\n<pre class=\"EnlighterJSRAW\">#!bin/bash\n/usr/local/bin/rtl_433 -F json -M utc | mosquitto_pub -t home/rtl_433 -l</pre>\nNow we can set up a new cronjob which will execute the shell script on every Raspberry Pi reboot. Open up a terminal:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"># edit crontabs of user \"pi\"\ncrontab -e\n\n# a text editor will open and load all existing cronjobs, add\n@reboot sleep 60 &amp;&amp;&nbsp;sh&nbsp;/home/pi/tsh_raspberry_script.sh</pre>\n<h5>Build a simple database with lowdb and Node.js</h5>\nIn development mode a very basic database will suffice our requirements, that\'s why I used <em>lowdb </em><a href=\"https://github.com/typicode/lowdb\">(Github link)</a> to store the sensor data on localhost first. Lowdb is based on a JSON file in&nbsp;our project folder. If you would like to take an eye on performance and persistence later I have built a solution with PostgreSQL too, but this is <a href=\"http://rike.dev/texts/2019/02/11/setup-postgresql-database-and-api-for-node-js\">another story</a>.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm&nbsp;install&nbsp;lowdb&nbsp;--save</pre>\nIn your <em>server.js</em> add some code.&nbsp;Set some defaults first, which are required if your JSON file (mine is \"db.json\") is empty at first.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const low = require(\'lowdb\');\nconst FileSync = require(\'lowdb/adapters/FileSync\')\nconst adapter = new FileSync(\'db.json\');\nconst db = low(adapter);\n\ndb.defaults({ posts: [] })\n .write()</pre>\nThat\'s all. Now we can write into, edit and delete data within our database.\n<h5>Consume MQTT sensor data and save it to the database</h5>\nWe go back to our Node.js application and install the MQTT client <em>MQTT.js</em> (<a href=\"https://github.com/mqttjs/MQTT.js\">Github link</a>) to be able to consume data that is available via Mosquitto.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm&nbsp;install&nbsp;mqtt&nbsp;--save</pre>\nWith the newly installed MQTT client we are able to receive all the messages that the MQTT broker delivers over its API on mqtt://localhost:1883. We now filter them to only process and store \"correct\" data sets (remember: our RTL-SDR receiver found signals from multiple IoT gagdets we are not interested in).\n\nMy setup included some buffer, temperature and date parsing, basic verifying and filtering regarding incoming messages before I stored the correct Javascript Objects into the lowdb. Continue working on your <em>server.js</em>:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const mqtt = require(\'mqtt\');\nconst client = mqtt.connect(mqtt://localhost:1883);\n\nfahrenheitToCelsius = (fahrenheit) =&gt; {\n var fTempVal = parseFloat(fahrenheit);\n var cTempVal = (fTempVal - 32) * (5 / 9);\n return (Math.round(cTempVal * 100) / 100);\n}\n\nclient.on(\'message\', function (topic, message) {\n // message is buffer\n var stringBuf = message &amp;&amp; message.toString(\'utf-8\')\n try {\n   var json = JSON.parse(stringBuf);\n   // console.log(json);\n   if (json.model === \'inFactory sensor\') {\n     if (json.id === 91 || json.id === 32) {\n     // catch my specific sensor model\n       if (json.temperature_F &amp;&amp; json.humidity) {\n       // add data to lowdb\n       const time = moment.utc(json.time).tz(\"Europe/Berlin\");\n       const formattedTime = time.format(\'YYYY-MM-DD HH:mm:ss\');\n       console.log(\'write post\');\n       db.get(\'posts\')\n       .push({ id: uuid.v1(), room: json.id, temp: fahrenheitToCelsius(json.temperature_F), humidity: json.humidity, time: formattedTime }).write()\n       }\n     }\n   }\n } catch (e) {\n   console.error(stringBuf);\n   }\n})</pre>\nThat\'s it. Whenever the MQTT client receives sensor data it will store it in our database accordingly. You can check that in your \"db.json\" file in your project folder, which grows bigger and bigger during runtime. It won\'t delete itself on backend restart!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\n \"posts\": [\n {\n \"id\": \"c107fc70-1f33-11e9-9b95-fbfea27c8046\",\n \"room\": 32,\n \"temp\": 22.89,\n \"humidity\": 30,\n \"time\": \"2019-01-23 18:24:34\"\n },\n {\n \"id\": \"6607f9f0-1f34-11e9-9b95-fbfea27c8046\",\n \"room\": 32,\n \"temp\": 22.89,\n \"humidity\": 30,\n \"time\": \"2019-01-23 18:29:11\"\n },\n {\n \"id\": \"16492190-1f35-11e9-9b95-fbfea27c8046\",\n \"room\": 91,\n \"temp\": 22.72,\n \"humidity\": 35,\n \"time\": \"2019-01-23 18:34:07\"\n }\n]\n}</pre>\n<h5>Provide sensor data via REST API</h5>\nNow that we have clean data in our lowdb we might want to provide them via a REST API to be consumable for a frontend or multiple frontends (smartphone app, web app, ..). We already deployed a local web server running on Node.js and Express.js and can very simply add an endpoint the provides the database data with the following code. Add it to your <em>server.js</em>!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/api\', (req, res) =&gt; {\n res.send(db.get(\'posts\'));\n});</pre>\nYes, that\'s it. Check if it is working on http://localhost:3000/api or with your favourite REST client (e.g. Postman).\n\n<hr>\n\n<blockquote>Proceed to the third part of the tutorial \"<a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">Display smart home data&nbsp;in a Quasar, Vue.js and Chart.js powered web application</a>\".</blockquote>','Get and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend application','','inherit','closed','closed','','33-revision-v1','','','2019-04-09 18:37:52','2019-04-09 16:37:52','',33,'https://rike.dev/2019/04/09/33-revision-v1/',0,'revision','',0),(54,1,'2019-04-09 18:42:16','2019-04-09 16:42:16','','cropped-ue','','inherit','open','closed','','cropped-ue','','','2019-04-09 18:42:16','2019-04-09 16:42:16','',0,'https://rike.dev/wp-content/uploads/2019/04/cropped-ue.jpg',0,'attachment','image/jpeg',0),(55,1,'2019-04-09 18:42:18','2019-04-09 16:42:18','https://rike.dev/wp-content/uploads/2019/04/cropped-cropped-ue.jpg','cropped-cropped-ue.jpg','','inherit','open','closed','','cropped-cropped-ue-jpg','','','2019-04-09 18:42:18','2019-04-09 16:42:18','',0,'https://rike.dev/wp-content/uploads/2019/04/cropped-cropped-ue.jpg',0,'attachment','image/jpeg',0),(57,1,'2019-04-09 18:52:19','2019-04-09 16:52:19','','Home','','publish','closed','closed','','startseite','','','2019-04-09 19:14:40','2019-04-09 17:14:40','',0,'https://rike.dev/?p=57',1,'nav_menu_item','',0),(58,1,'2019-04-09 18:51:59','0000-00-00 00:00:00',' ','','','draft','closed','closed','','','','','2019-04-09 18:51:59','0000-00-00 00:00:00','',0,'https://rike.dev/?p=58',1,'nav_menu_item','',0),(59,1,'2019-04-09 18:52:19','2019-04-09 16:52:19',' ','','','publish','closed','closed','','59','','','2019-04-09 19:14:40','2019-04-09 17:14:40','',0,'https://rike.dev/?p=59',2,'nav_menu_item','',0),(60,1,'2019-04-09 18:52:19','2019-04-09 16:52:19',' ','','','publish','closed','closed','','60','','','2019-04-09 19:14:40','2019-04-09 17:14:40','',0,'https://rike.dev/?p=60',3,'nav_menu_item','',0),(62,1,'2019-04-09 18:53:30','2019-04-09 16:53:30','<!-- wp:paragraph -->\n<p>In diesem Tutorial geht es darum, einen einfachen Webserver auf Node.js-Basis zu installieren und zu testen.&nbsp;Dieses Tutorial ist im Rahmen der Bremer&nbsp;<a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a>&nbsp;für den Kurs \"Einführung in die modere Webentwicklung\" (2018) entstanden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:more -->\n<!--more-->\n<!-- /wp:more -->\n\n<!-- wp:heading -->\n<h2>Was ist Node.js?</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p><em>Node.js</em> ist eine Softwareumgebung für Javascript, welche es ermöglicht, serverseitige Javascript-Anwendungen (-&gt; Webserver) auf einem beliebigen Betriebssystem zu programmieren.&nbsp;Sie erweitert&nbsp;\"klassisches\" Javascript um die notwendigen Funktionen und ist dabei extrem ressourcenschonend. Wofür brauchen wir <strong>npm</strong>?&nbsp;Mit dem Node Package Manager können wir die Kernfunktionalität von <em>Node.js</em> über Zusatzpakete erweitern. Entwickler aus der ganzen Welt stellen ihre Pakete dort kostenlos zur Verfügung.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Node.js installieren</h2>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5>Windows 7/8/10</h5>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Für Windows stellt die&nbsp;offizielle <em>Node.js</em>-Website&nbsp;für die jeweiligen Versionen zur Verfügung:&nbsp;<a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>.&nbsp;Lade die richtige Datei (.msi) herunter und starte den Installer mit einem Doppelklick. Der Wizard wird dich durch den sehr kurzen Installationsprozess begleiten. Wähle während der Installation die Standardeinstellungen.&nbsp;<em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5>MacOS</h5>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Über die offizielle <em>Node.js</em>-Website kannst du den Installer (.pkg) für Node.js herunterladen:&nbsp;<a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>. Starte den Installer über deinen Mac und befolge die (kurzen) Installationsanweisungen.&nbsp;Wähle während der Installation die Standardeinstellungen.&nbsp;<em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5>Linux/Ubuntu</h5>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>In Ubuntu kann <em>Node.js</em> über die Paketverwaltung installiert werden. Da <em>npm</em> nicht automatisch mitinstalliert wird, holen wir dies manuell nach.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">sudo apt-get update\nsudo apt-get install nodejs\nsudo apt-get install npm</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:heading -->\n<h2>Mit dem Terminal arbeiten / Die Installation von Node.js und npm prüfen</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Mit dem Terminal können wir unser Betriebssystem&nbsp;textbasiert&nbsp;steuern.&nbsp;Häufigster Vorbehalt gegen das Terminal&nbsp;ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:<ul><li>In&nbsp;<strong>Windows 8 und 10</strong>&nbsp;geht das mit einem Klick&nbsp;mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination&nbsp;[Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li><li>In&nbsp;<strong>Windows 7</strong>&nbsp;klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li><li>In vielen&nbsp;<strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li><li>Auf&nbsp;<strong>MacOS</strong>&nbsp;führt die&nbsp;Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li></ul></li><li>Nun&nbsp;prüfen wir, ob auf unserem Betriebssystem <em>Node.js</em> und <em>npm</em> korrekt installiert wurden.&nbsp;Das geht mit den Terminal-Befehlen</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">node -v\nnpm -v</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<ul><li>Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version&nbsp;<em>Node.js </em>und<em> npm </em>installiert sind. Falls eine Fehlermeldung erscheint, solltest du den Installationsvorgang wiederholen.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:heading -->\n<h2>Den Webserver einrichten / Express.js installieren</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>Lege&nbsp;auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest. Den Ort kannst du beliebig festlegen.</li><li>Innerhalb dieses Ordners lege&nbsp;zwei neue Dateien an (in Windows z. B. per Rechtsklick: \"Neues Textdokument\")!</li><li>Benenne&nbsp;eine Datei um in \"server.js\", die andere in \"index.html\". (In Windows solltest du sicher gehen, dass sich die Dateiendung mitändert, und nicht etwa eine Datei nach dem Schema \"server.js.txt\" und \"index.html.txt\" entstanden ist!)</li><li>Navigiere im Terminal zum neu angelegten Ordner. Der Befehl dazu lautet \"cd\" gefolgt vom entsprechenden Pfad. Für ein Windows-System könnte der Befehl so lauten:<br>cd C:\\Users\\Ulrike\\Projekte\\Neues-Projekt1Für ein macOS-System wäre dies ein Beispiel-Befehl:cd /Volumes/PROJECTS/Neues-Projekt1Wenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</li><li>Installiere in diesem Ordner das <em>npm</em>-Paket \"Express.js\", den de-Facto-Standard für Webanwendungen unter Node.js mit dem Terminal-Befehl</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">npm install express</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<ul><li>Öffne die Datei \"server.js\" in einem Texteditor (z. B. \"Sublime\") und füge diesen Quellcode ein:</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">const express = require(\'express\');\nconst app = express();\n\napp.use(express.static(__dirname + \'/dist\'));\n\napp.get(\'/\', function (req, res) {\nres.sendFile(__dirname + \'/index.html\');\n})\n\napp.listen(3000);\nconsole.log(\"server started on port 3000\");</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<ul><li>Öffne die Datei \"index.html\" und füge einen beliebigen Text ein, z. B. \"Hello World!\".</li><li>Jetzt müssen wir unseren Webserver nur noch starten. Im Quellcode haben wir ihn bereits angewiesen, die Datei <em>index.html&nbsp;</em>auszugeben.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:heading -->\n<h2>Den Webserver starten</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Prüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">node server.js</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>Navigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:3000/\">http://127.0.0.1:3000/ </a>oder <a href=\"http://localhost:3000/\">http://localhost:3000/</a>. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. \"Hello World\".</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Den Webserver stoppen</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Den gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL&nbsp;http://127.0.0.1:3000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.</p>\n<!-- /wp:paragraph -->','Node.js installieren und einen Webserver starten','','inherit','closed','closed','','30-revision-v1','','','2019-04-09 18:53:30','2019-04-09 16:53:30','',30,'https://rike.dev/2019/04/09/30-revision-v1/',0,'revision','',0),(64,1,'2019-04-09 19:04:49','2019-04-09 17:04:49','<blockquote><strong>TLDR;</strong> This three-part tutorial explains how to setup a basic smart home web app tracking sensor data for temperature and humidity with a Raspberry Pi and web technologies like Mosquitto, Node.js, Express.js, Vue.js, Quasar and Chart.js.</blockquote>\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/6.png\"><img class=\" imagedropshadow aligncenter wp-image-45 size-large\" src=\"https://rike.dev/wp-content/uploads/2019/02/6-1024x667.png\" alt=\"Tiny Smart Home\" width=\"650\" height=\"423\" /></a>\n\nSo I went on maternity this January and came up with an idea about a nice little project to do in my free time that went a little further from my usual Javascript front- und backend projects I usually do at work. I have a Raspberry Pi 3 at home I bought over a year ago and never did something useful with so I decided I wanted to track temperatures and humidity in our child\'s room and bedroom to a have an idea about a good indoor climate. In the end I wanted to finalize a cloud-based dashboard web app which provides the incoming sensor data in real time and available everywhere and everytime.\n\n<em>I wrote this three-part tutorial to track my experiences, tech choices and suggestions for you to follow and came up with a solution that comes with an easy hardware setup and some popular (and worth to learn if you are not already familiar with) web development technologies, including Node.js, Mosquitto and Vue.js.</em>\n\nThe basic three parts will allow you to run a web application on your local machine. Nevertheless I added some more features including persistent database storing and the deployment in the cloud with Heroku. You will find these tutorials at the end of this page.\n<blockquote><strong>The code base is stored on <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github</a>!</strong></blockquote>\n<!--more-->\n<h5><a href=\"http://rike.dev/texts/2019/02/11/choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity\">1 . Choose and install hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity</a></h5>\nI did some research on how to build basic weather stations and home automation systems with a Raspberry Pi but they were mostly no wireless solutions or they came up with too much IoT hacking/soldering and especially required a lot of electrical knowledge I do not have. The core problem I figured out was that many tutorials wanted me to build a remote sensor gagdet with radio functionality and sleep mode (e.g. with an Arduino) all on my own. So the question was: Is there a better and easier alternative to such an all self made solution and what about the receiving hardware on the Raspberry Pi?\n\nFortunately, there exists an easier alternative I will show you in this part of the tutorial which deals with slightly more expensive IoT gagdets but which enabled me to set up my smart home hardware in a smooth but nonetheless instructive way.\n<h5><a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2. Get and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a></h5>\nThe main problem in this part was how to set up a stable and endlessly running task on my Raspberry Pi to continuously receive the (correct!) sensor data. Secondly I wanted it to somehow process and transfer it to a backend/microservice/middleware, which then would provide an upcoming frontend with JSON data to display. MQTT is the IoT protocol to go with but how to set it up? How can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5><a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3. Display smart home data in a Quasar, Vue.js and Chart.js powered web application</a></h5>\n<div>This was somehow the easiest part, because I mainly work as a frontend engineer and know how to implement dashboard-like web app solutions in combination with backend REST API services and the like. I challenged myself with an insight into Vue.js, since I mainly used React as a SPA framework before. In search of a nice UI library I discovered Quasar, which provides a very useful CLI and UI components so that there was no need to come up with an own CSS by myself.</div>\n<div></div>\n<div>\n\n<hr />\n\n</div>\n<h5> Add more features?</h5>\nI wrote some more or less standalone tutorials, which will help you to improve your existent application with some more capacities.\n<ol>\n 	<li>Deploy your smart home application up to the cloud on Heroku <em>(coming soon)</em></li>\n 	<li>\n<div>Build a simple session-based authentication with Node.js and Vue.js <em>(coming soon)</em></div></li>\n 	<li>\n<div>Setup PostgreSQL database and API for Node.js <em>(coming soon)</em></div></li>\n 	<li>Get a CSV download out of PostgreSQL database <em>(coming soon)</em></li>\n</ol>\n<div></div>','How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js','','inherit','closed','closed','','43-revision-v1','','','2019-04-09 19:04:49','2019-04-09 17:04:49','',43,'https://rike.dev/2019/04/09/43-revision-v1/',0,'revision','',0),(65,1,'2019-04-09 19:07:12','2019-04-09 17:07:12','<blockquote>This tutorial is part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\" (1 | <a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2</a> | <a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3</a>)</blockquote>\n<!--more-->\n<h5>Which (new) IoT hardware do we need for this setup?</h5>\n<ul>\n 	<li><strong>RTL-SDR USB receiver:</strong> a cheap dongle that can be used as a computer based radio scanner for receiving live radio signals in your area (those gagdets receive signals from 500 kHz up to 1.75 GHz) (<a href=\"https://www.amazon.com/dp/B00VZ1AWQA/ref=cm_sw_em_r_mt_dp_U_GkvyCb5A4PD19\">Amazon link</a>)</li>\n 	<li><strong>Temperature / Humidity sensor:</strong> an even cheaper gagdet, that sends sensor data at 433 MHz into the area (e.g. as part of a \"real\" wheather station) (<a href=\"https://www.amazon.de/gp/product/B01MXEBI18/ref=ppx_yo_dt_b_asin_title_o05__o00_s00?ie=UTF8&amp;psc=1\">Amazon link</a>)</li>\n 	<li><strong>Raspberry Pi 3 Model B:</strong> the small single-board computer servers as our heart and base station to receive and process sensor data, I have the Raspbian operating system installed. It could even serve as your web server later (if you are familiar with maintaining your own, but I will use a cloud service in this tutorial). (<a href=\"https://www.amazon.com/Raspberry-Pi-RASPBERRYPI3-MODB-1GB-Model-Motherboard/dp/B01CD5VC92/ref=sr_1_3?ie=UTF8&amp;qid=1549882307&amp;sr=8-3&amp;keywords=Raspberry+Pi+3+Model+B\">Amazon link</a>)</li>\n</ul>\nAt first, setup your sensors whereever you like in your appartment and connect your RTL-SDR receiver with the Raspberry Pi. How to receive the raw data out of the nearby area? A little open source software will help us with that: <em>rtl_433</em> is a program (<a href=\"https://github.com/merbanan/rtl_433\">Github link</a>) to decode traffic from devices that are broadcasting on 433.9 MHz. We install it on our Raspberry Pi:\n<div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"># prepare os\nsudo apt-get update\nsudo apt-get upgrade\n \n# install dependencies\nsudo apt-get install libtool libusb-1.0.0-dev librtlsdr-dev rtl-sdr cmake\n \n# clone rtl_433 Git Repository\ngit clone https://github.com/merbanan/rtl_433.git\n \n# change to directory\ncd rtl_433/\n\n# make build folder\nmkdir build\ncd build/\n\n# compile\ncmake ../\n\n# make\nmake\n\n# install\nsudo make install\n\n# test if rtl_433 was properly installed\nrtl_433 -h\n</pre>\nAfter that we test if the program detects our RTL-SDR receiver with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">rtl_433 -G</pre>\nI had some trouble with the following error: <em>Kernel driver is active, or device is claimed by second instance of librtlsdr. </em><em>In the first case, please either detach or blacklist the kernel module </em><em>(dvb_usb_rtl28xxu), or enable automatic detaching at compile time.</em>\n\nThe repository owner recommends\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo rmmod dvb_usb_rtl28xxu rtl2832</pre>\nin that case. If everything went well, the receiver is ready to get sensor data and<em> rtl_433</em> helps with processing, so that after a few seconds you should get signals in the nearby area (yes, even temperature sensor data of your neighbor\'s or sensor data of connected cars.)\n\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/7.png\"><img class=\"imagedropshadow alignnone wp-image-47 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/7.png\" alt=\"\" width=\"914\" height=\"261\" /></a>\n\n</div>\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/8.png\"><img class=\"imagedropshadow alignnone wp-image-48 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/8.png\" alt=\"\" width=\"963\" height=\"252\" /></a>\n\nHurray, hardware is running!\n\n<hr />\n\n<blockquote>Proceed to the second part of the tutorial \"<a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">Get and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a>\".</blockquote>','Choose and setup hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity','','inherit','closed','closed','','41-revision-v1','','','2019-04-09 19:07:12','2019-04-09 17:07:12','',41,'https://rike.dev/2019/04/09/41-revision-v1/',0,'revision','',0),(66,1,'2019-04-09 19:07:31','2019-04-09 17:07:31','<blockquote>This tutorial is the second part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\" (<a href=\"http://rike.dev/texts/2019/02/11/choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1</a> | <a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2</a> | 3)</blockquote>\n<!--more-->\n\nIn this part we will build a basic dashboard displaying smart home sensor data with charts. We could go with whatever implementation you would like here: from vanilla HTML/CSS/JS to every framework which is suitable to our needs - which are basically doing an API call to our backend to fetch sensor data and lift them up to work nicely with a chart visualisation.  There are also other good solutions to deal with IoT frontends like Pimatic, OpenHAB and FHEM, but let\'s just build this part completely on our own. We will go with the SPA framework Vue.js with Quasar on top: It comes with UI components in the popular Material Design, axios and some other features, that help getting started with Vue.js very fast.\n\nInstall the Vue.js (<a href=\"https://vuejs.org/\">Link</a>) and Quasar CLI (<a href=\"https://github.com/quasarframework/quasar\">Github link</a>) first!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install -g vue-cli\nnpm install -g quasar-cli</pre>\nGo to your project root and init a new sub project for your frontend code with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">quasar init vue-frontend</pre>\nNow start you development server on http://localhost:8080/ with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">quasar dev</pre>\nand you are ready to develop your frontend according to your likes. Quasar comes with a basic starter layout including a side navigation. However we don\'t need to work on this heavily and focus on the the homepage, where we will build the dashboard functionality.\n\nGo to <em>Index.vue</em> and update the basic dashboard layout. You can use static images like in my proposal and put them into the <em>src/assets</em> folder.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;template&gt;\n &lt;q-page padding class=\"docs-input row justify-center\"&gt;\n   &lt;div class=\"row gutter-sm\"&gt;\n     &lt;div class=\"col-6\"&gt;\n       &lt;q-card inline&gt;\n         &lt;q-card-media style=\"max-height: 250px\"&gt;\n            &lt;img src=\"~assets/temperature.jpg\"&gt;\n             &lt;q-card-title slot=\"overlay\"&gt;\n               Temperature\n               &lt;span slot=\"subtitle\"&gt;hot or not&lt;/span&gt;\n             &lt;/q-card-title&gt;\n         &lt;/q-card-media&gt;\n         &lt;q-card-main&gt;lorem ipsum&lt;/q-card-main&gt;\n       &lt;/q-card&gt;\n &lt;/div&gt;\n &lt;div class=\"col-6\"&gt;\n   &lt;q-card inline&gt;\n     &lt;q-card-media style=\"max-height: 250px\"&gt;\n       &lt;img src=\"~assets/humidity.jpg\"&gt;\n       &lt;q-card-title slot=\"overlay\"&gt;\n         Humidity\n         &lt;span slot=\"subtitle\"&gt;some like it wet&lt;/span&gt;\n       &lt;/q-card-title&gt;\n     &lt;/q-card-media&gt;\n     &lt;q-card-main&gt;lorem ipsum&lt;/q-card-main&gt;\n   &lt;/q-card&gt;\n  &lt;/div&gt;\n &lt;/div&gt;\n &lt;/q-page&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\n&lt;/style&gt;\n\n&lt;script&gt;\n  export default {\n  name: \"PageIndex\"\n  };\n&lt;/script&gt;</pre>\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/9.png\"><img class=\"imagedropshadow alignnone wp-image-50 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/9.png\" alt=\"Dashboard\" width=\"989\" height=\"407\" /></a>\n<h5>Fetch sensor data from Node.js backend</h5>\nTo fetch necessary data on page load we make use of Vue.js\' created() function in the &lt;script&gt;&lt;/script&gt; section below the template. We insert a new function this.fetchData(); there and implement this new function in the methods\' block.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\"> methods: {\n  fetchData() {\n   this.loaded = false;\n   this.$axios\n    .get(\"http://localhost:3000/api\")\n    .then(response =&gt; {\n       return response.data;\n    })\n    .then(response =&gt; {\n      console.log(response);\n      this.loaded = true;\n\n    })\n    .catch(e =&gt; {\n      console.log(e);\n      this.$q.notify({\n       color: \"negative\",\n       position: \"top\",\n       message: \"Could not fetch.\",\n       icon: \"report_problem\"\n    });\n  });\n }\n}</pre>\nWe simply use the <em>axios</em> library (<a href=\"https://github.com/axios/axios\">Github link</a>) which Quasar included right from the setup, so we can use it globally without importing it explicitly. If this works properly you should be able to log the array of sensor data in your browser\'s developer tools. If there is any problem, we trigger the Quasar component notification and include the error message.\n\n<strong>Hint:</strong> If you encounter <em>CORS</em> problems in the communication between front- and backend (e. g. \"No Access-Control-Allow-Origin header is present on the requested resource.\") edit your<em> server.js</em> and restart it as follows:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.use(function (req, res, next) {\n res.header(\"Access-Control-Allow-Origin\", \"*\");\n res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n next();\n});</pre>\n<h5>Build a line chart with Chart.js</h5>\nIn this part I will focus on displaying only the temperature chart to make the tutorial more comprehensable. At first we will install the npm package <em>vue-chartjs </em><a href=\"https://github.com/apertureless/vue-chartjs\">(Github link) </a>which works as a practical Vue.js wrapper for Chart.js (<a href=\"https://www.chartjs.org/\">Link</a>).\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install vue-chartsjs --save</pre>\nNow we build a generic, reusable line chart component to use in the web application. Create a new file \"LineChart.js\" in the <em>src/components</em> folder and import the <em>vue-chartsjs</em> package. Furthermore, we will follow the basic tutorial for the package and specify a data collection prop and an options prop that will prettify our line chart later.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">import { Line } from \'vue-chartjs\';\n\nexport default {\n extends: Line,\n props: {\n   datacollection: {\n    type: Object,\n    default: null\n   },\n   options: {\n    type: Object,\n    default: null\n   }\n  },\n mounted() {\n   this.renderChart(this.datacollection, this.options, {responsive: true})\n }\n}</pre>\nSwitch to the<em> Index.vue</em> again and include a new line chart component (html tag) in your template. We want to display it within the card component. Additionally we specify some properties: <em>v-if=\"loaded\"</em> will tell the component that it should only mount, if the according data prop is true. Also, we transfer the <em>fetched datacollection_humidity</em> and <em>options_humidity</em> as our generic datacollection and options into the line chart.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;q-card-main&gt;\n &lt;line-chart\n   v-if=\"loaded\"\n   :datacollection=\"datacollection_humidity\"\n   :options=\"options_humidity\"\n &gt;&lt;/line-chart&gt;\n&lt;/q-card-main&gt;</pre>\nWe also have to edit our fetchData(); function and transfer the fetched data as a processible JSON to the data collection prop.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// process the backend response and add labels and some styling for the Chart.js api  \nconst datacollection_humidity = {\n   labels: response.map(obj =&gt; obj.time),\n   datasets: [\n     {\n       label: \"Humidity\",\n       backgroundColor: \"#000\",\n       data: response.map(obj =&gt; obj.humidity)\n     }\n   ]\n};\n\nthis.datacollection_humidity = datacollection_humidity;\n\n// set some optional properties regarding axes and ticks\nthis.options_humidity = {\n   scales: {\n   xAxes: [\n     {\n       type: \"time\",\n       distribution: \"linear\"\n     }\n   ],\n   yAxes: [\n     {\n       scaleLabel: {\n       display: true\n     },\n   ticks: {\n     callback: function(value, index, values) {\n       return value + \"%\";\n       }\n     }\n    }\n   ]\n  }\n};</pre>\nDon\'t forget to add the LineChart component and the necessary \"loaded\" data prop in your Vue.js &lt;script&gt;&lt;/script&gt; section.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">export default {\n name: \"PageIndex\",\n components: {\n   LineChart\n   },\n data() {\n   return {\n     loaded: false,\n     };\n   }\n}</pre>\nThat\'s it! On every page reload, the web application fetches available sensor data from our backend service and will display it as a line chart. You would like to add more functionality? You can find all features we built and more (filtering, reloading, deploying, saving persistently, ..) in my <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github repository</a> for this project.','Display smart home data in a Quasar, Vue.js and Chart.js powered web application','','inherit','closed','closed','','39-revision-v1','','','2019-04-09 19:07:31','2019-04-09 17:07:31','',39,'https://rike.dev/2019/04/09/39-revision-v1/',0,'revision','',0),(67,1,'2019-04-09 19:09:14','2019-04-09 17:09:14','<!-- wp:paragraph -->\n<p>In diesem Tutorial geht es darum, den auf Python basierenden SimpleHTTP-Server zu installieren und zu testen.&nbsp;Dieses Tutorial ist im Rahmen der Bremer&nbsp;<a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a>&nbsp;für den Kurs \"Einführung in die modere Webentwicklung\" entstanden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:more -->\n<!--more-->\n<!-- /wp:more -->\n\n<!-- wp:paragraph -->\n<p>Je nachdem, welche Python-Version auf deinem Betriebssystem installiert ist, befolge die weiteren Schritte zur Installation eines kleinen Webservers auf deinem Computer. Wie du die Python-Version identifizierst, lernst du <a href=\"http://rike.dev/2017/07/28/der-terminal-und-python-installieren/\">in diesem Tutorial</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Lege&nbsp;auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest. Den Ort kannst du beliebig festlegen.</li><li>Innerhalb dieses Ordners lege eine neue Datei an (in Windows z. B. per Rechtsklick: \"Neues Textdokument\")!</li><li>Benenne die Datei um in \"index.html\"!</li><li>Öffne die Datei in einem Texteditor (z. B. \"Sublime\") und füge einen beliebigen Text ein, z. B. \"Hello World!\"</li><li>Öffne ein neues Terminal-Fenster (es ist kein Problem, mehrere Terminal-Fenster parallel laufen zu lassen) und navigiere zum neu angelegten Ordner. Der Befehl dazu lautet \"cd\" gefolgt vom entsprechenden Pfad.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Für ein Windows-System könnte der Befehl so lauten:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Webentwicklung</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>Für ein macOS-System wäre dies ein Beispiel-Befehl:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Webentwicklung</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>Wenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Da wir Python installiert haben, und Python in der Standardausführung bereits ein kleines \"Werkzeug\" für einen einfach Webserver mitbringt, müssen wir diesen Webserver jetzt nur noch starten.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Anleitung für Python 2.x.x</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>Prüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">python -m SimpleHTTPServer</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<ul><li>Solltest du eine Warnmeldung von deiner Firewall erhalten, klicke auf \"Ok\" bzw. \"Zulassen\".</li><li>Navigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:8000/\">http://127.0.0.1:8000/</a>. &nbsp;Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. \"Hello World\".</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Glückwunsch! Du hast deinen ersten lokalen Webserver eingerichtet!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Anleitung für Python 3.x.x</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>Prüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">python -m http.server</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<ul><li>Solltest du eine Warnmeldung von deiner Firewall erhalten, klicke auf \"Ok\" bzw. \"Zulassen\".</li><li>Navigiere in deinem Browser zur URL http://127.0.0.1:8000/. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. \"Hello World\".</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":21,\"align\":\"center\",\"linkDestination\":\"media\",\"className\":\"wp-image-291 size-full\"} -->\n<div class=\"wp-block-image wp-image-291 size-full\"><figure class=\"aligncenter\"><a class=\"imagedropshadow\" href=\"https://rike.dev/wp-content/uploads/2019/04/5.png\"><img src=\"https://rike.dev/wp-content/uploads/2019/04/5.png\" alt=\"&quot;Hello World&quot; im Browser unter der lokalen URL http://127.0.0.1:8000/\" class=\"wp-image-21\"/></a><figcaption>\"Hello World\" im Browser unter der lokalen URL http://127.0.0.1:8000/</figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:heading -->\n<h2>Den Webserver stoppen</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>Den gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL&nbsp;http://127.0.0.1:8000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.</li></ul>\n<!-- /wp:list -->','Einen einfachen Webserver mit Python 2.x.x oder 3.x.x installieren','','inherit','closed','closed','','20-revision-v1','','','2019-04-09 19:09:14','2019-04-09 17:09:14','',20,'https://rike.dev/2019/04/09/20-revision-v1/',0,'revision','',0),(68,1,'2019-04-09 19:10:04','2019-04-09 17:10:04','<!-- wp:paragraph -->\n<p>In diesem Tutorial geht es darum, den auf Python basierenden SimpleHTTP-Server zu installieren und zu testen.&nbsp;Dieses Tutorial ist im Rahmen der Bremer&nbsp;<a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a>&nbsp;für den Kurs \"Einführung in die modere Webentwicklung\" entstanden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:more -->\n<!--more-->\n<!-- /wp:more -->\n\n<!-- wp:paragraph -->\n<p>Je nachdem, welche Python-Version auf deinem Betriebssystem installiert ist, befolge die weiteren Schritte zur Installation eines kleinen Webservers auf deinem Computer. Wie du die Python-Version identifizierst, lernst du <a href=\"http://rike.dev/2017/07/28/der-terminal-und-python-installieren/\">in diesem Tutorial</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Lege&nbsp;auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest. Den Ort kannst du beliebig festlegen.</li><li>Innerhalb dieses Ordners lege eine neue Datei an (in Windows z. B. per Rechtsklick: \"Neues Textdokument\")!</li><li>Benenne die Datei um in \"index.html\"!</li><li>Öffne die Datei in einem Texteditor (z. B. \"Sublime\") und füge einen beliebigen Text ein, z. B. \"Hello World!\"</li><li>Öffne ein neues Terminal-Fenster (es ist kein Problem, mehrere Terminal-Fenster parallel laufen zu lassen) und navigiere zum neu angelegten Ordner. Der Befehl dazu lautet \"cd\" gefolgt vom entsprechenden Pfad.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Für ein Windows-System könnte der Befehl so lauten:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Webentwicklung</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>Für ein macOS-System wäre dies ein Beispiel-Befehl:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Webentwicklung</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>Wenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Da wir Python installiert haben, und Python in der Standardausführung bereits ein kleines \"Werkzeug\" für einen einfach Webserver mitbringt, müssen wir diesen Webserver jetzt nur noch starten.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Anleitung für Python 2.x.x</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>Prüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">python -m SimpleHTTPServer</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<ul><li>Solltest du eine Warnmeldung von deiner Firewall erhalten, klicke auf \"Ok\" bzw. \"Zulassen\".</li><li>Navigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:8000/\">http://127.0.0.1:8000/</a>. &nbsp;Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. \"Hello World\".</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Glückwunsch! Du hast deinen ersten lokalen Webserver eingerichtet!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Anleitung für Python 3.x.x</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>Prüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">python -m http.server</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<ul><li>Solltest du eine Warnmeldung von deiner Firewall erhalten, klicke auf \"Ok\" bzw. \"Zulassen\".</li><li>Navigiere in deinem Browser zur URL http://127.0.0.1:8000/. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. \"Hello World\".</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":21,\"align\":\"center\",\"linkDestination\":\"media\",\"className\":\"wp-image-291 size-full imagedropshadow\"} -->\n<div class=\"wp-block-image wp-image-291 size-full imagedropshadow\"><figure class=\"aligncenter\"><a class=\"\" href=\"https://rike.dev/wp-content/uploads/2019/04/5.png\"><img src=\"https://rike.dev/wp-content/uploads/2019/04/5.png\" alt=\"&quot;Hello World&quot; im Browser unter der lokalen URL http://127.0.0.1:8000/\" class=\"wp-image-21\"/></a><figcaption>\"Hello World\" im Browser unter der lokalen URL http://127.0.0.1:8000/</figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:heading -->\n<h2>Den Webserver stoppen</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>Den gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL&nbsp;http://127.0.0.1:8000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.</li></ul>\n<!-- /wp:list -->','Einen einfachen Webserver mit Python 2.x.x oder 3.x.x installieren','','inherit','closed','closed','','20-revision-v1','','','2019-04-09 19:10:04','2019-04-09 17:10:04','',20,'https://rike.dev/2019/04/09/20-revision-v1/',0,'revision','',0),(69,1,'2019-04-09 19:10:36','2019-04-09 17:10:36','<!-- wp:paragraph -->\n<p>In diesem Tutorial lernst du, wie du mit dem Terminal deines Betriebssystems arbeitest, die Programmiersprache installierst und testest. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" entstanden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:more -->\n<!--more-->\n<!-- /wp:more -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Mit dem Terminal arbeiten / Python-Installation prüfen</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Mit dem Terminal können wir unser Betriebssystem <em>textbasiert</em> steuern.&nbsp;Häufigster Vorbehalt gegen das Terminal&nbsp;ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:<ul><li>In <strong>Windows 8 und 10</strong> geht das mit einem Klick&nbsp;mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination&nbsp;[Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li><li>In <strong>Windows 7</strong> klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li><li>In vielen <strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li><li>Auf <strong>MacOS</strong>&nbsp;führt die&nbsp;Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li></ul></li><li>Nun&nbsp;prüfen wir, ob auf unserem Betriebssystem bereits die Programmiersprache <em>Python&nbsp;</em>installiert ist. Die Chancen stehen gut, denn MacOS und viele Linux-Distributionen bringen<em> Python</em> bereits mit. Gib im Terminal ein. Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version <em>Python</em> installiert ist. Wenn das der Fall ist, musst du an dieser Stelle nichts weiter tun (es ist egal, welche Python-Version du nutzt)!<br>Solltest du eine Fehlermeldung erhalten, musst du die Installation von Python für dein Betriebssystem nachholen (nächster Schritt).</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":14,\"align\":\"center\",\"linkDestination\":\"media\",\"className\":\"wp-image-286 size-full imagedropshadow\"} -->\n<div class=\"wp-block-image wp-image-286 size-full imagedropshadow\"><figure class=\"aligncenter\"><a href=\"https://rike.dev/wp-content/uploads/2017/07/1.png\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/1.png\" alt=\"Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.\" class=\"wp-image-14\"/></a><figcaption>Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.</figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:image {\"id\":15,\"align\":\"center\",\"className\":\"wp-image-282 size-full\"} -->\n<div class=\"wp-block-image wp-image-282 size-full\"><figure class=\"aligncenter\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/2.png\" alt=\"Dieses Windows-System hat leider noch keine Python-Installation vorliegen.\" class=\"wp-image-15\"/><figcaption>Dieses Windows-System hat leider noch keine Python-Installation vorliegen.</figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Python installieren (empfohlen: Version 3.x.x)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Python können wir wie ein normales Softwarepaket herunterladen und für unser Betriebssystem installieren. Die Programmiersprache ist Open-Source, das heißt kostenlos erhältlich.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Surfe zu&nbsp;https://www.python.org/downloads/ und lade den jüngsten Release von <em>Python 3</em>.xx herunter, momentan ist das <em>Python 3.6.2</em>. Achte darauf, dass du das Paket für dein Betriebssystem herunterlädst, normalerweise erkennt die Website dein Betriebssystem automatisch und schlägt dir die richtige Datei vor.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":16} -->\n<figure class=\"wp-block-image\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/3-1024x423.png\" alt=\"Python Download\" class=\"wp-image-16\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li>Installiere die Datei wie eine gewöhnliche Software, z. B. über Windows per Doppelklick auf die Datei \"python-3-6-2.exe\". Aktiviere die Auswahl \"Add Python 3.6 to PATH\" im ersten Installationsfenster!! Weitere Anpassungen musst du nicht durchführen. Im nächsten Schritt wird die Installation durchgeführt und du kannst den Installer verlassen.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":17,\"align\":\"center\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/4.png\" alt=\"Python Installation\" class=\"wp-image-17\"/></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li>Wenn Python richtig installiert wurde, kannst du die Python-Installation aus Schritt 2 noch einmal prüfen und solltest diesmal erfolgreich sein.</li></ul>\n<!-- /wp:list -->','Mit dem Terminal arbeiten und Python installieren','','inherit','closed','closed','','12-revision-v1','','','2019-04-09 19:10:36','2019-04-09 17:10:36','',12,'https://rike.dev/2019/04/09/12-revision-v1/',0,'revision','',0),(70,1,'2019-04-09 19:10:44','2019-04-09 17:10:44','<!-- wp:paragraph -->\n<p>In diesem Tutorial lernst du, wie du mit dem Terminal deines Betriebssystems arbeitest, die Programmiersprache installierst und testest. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" entstanden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:more -->\n<!--more-->\n<!-- /wp:more -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Mit dem Terminal arbeiten / Python-Installation prüfen</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Mit dem Terminal können wir unser Betriebssystem <em>textbasiert</em> steuern.&nbsp;Häufigster Vorbehalt gegen das Terminal&nbsp;ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:<ul><li>In <strong>Windows 8 und 10</strong> geht das mit einem Klick&nbsp;mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination&nbsp;[Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li><li>In <strong>Windows 7</strong> klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li><li>In vielen <strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li><li>Auf <strong>MacOS</strong>&nbsp;führt die&nbsp;Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li></ul></li><li>Nun&nbsp;prüfen wir, ob auf unserem Betriebssystem bereits die Programmiersprache <em>Python&nbsp;</em>installiert ist. Die Chancen stehen gut, denn MacOS und viele Linux-Distributionen bringen<em> Python</em> bereits mit. Gib im Terminal ein. Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version <em>Python</em> installiert ist. Wenn das der Fall ist, musst du an dieser Stelle nichts weiter tun (es ist egal, welche Python-Version du nutzt)!<br>Solltest du eine Fehlermeldung erhalten, musst du die Installation von Python für dein Betriebssystem nachholen (nächster Schritt).</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":14,\"align\":\"center\",\"linkDestination\":\"media\",\"className\":\"wp-image-286 size-full imagedropshadow\"} -->\n<div class=\"wp-block-image wp-image-286 size-full imagedropshadow\"><figure class=\"aligncenter\"><a href=\"https://rike.dev/wp-content/uploads/2017/07/1.png\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/1.png\" alt=\"Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.\" class=\"wp-image-14\"/></a><figcaption>Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.</figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:image {\"id\":15,\"align\":\"center\",\"linkDestination\":\"media\",\"className\":\"wp-image-282 size-full imagedropshadow\"} -->\n<div class=\"wp-block-image wp-image-282 size-full imagedropshadow\"><figure class=\"aligncenter\"><a href=\"https://rike.dev/wp-content/uploads/2017/07/2.png\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/2.png\" alt=\"Dieses Windows-System hat leider noch keine Python-Installation vorliegen.\" class=\"wp-image-15\"/></a><figcaption>Dieses Windows-System hat leider noch keine Python-Installation vorliegen.</figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Python installieren (empfohlen: Version 3.x.x)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Python können wir wie ein normales Softwarepaket herunterladen und für unser Betriebssystem installieren. Die Programmiersprache ist Open-Source, das heißt kostenlos erhältlich.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Surfe zu&nbsp;https://www.python.org/downloads/ und lade den jüngsten Release von <em>Python 3</em>.xx herunter, momentan ist das <em>Python 3.6.2</em>. Achte darauf, dass du das Paket für dein Betriebssystem herunterlädst, normalerweise erkennt die Website dein Betriebssystem automatisch und schlägt dir die richtige Datei vor.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":16} -->\n<figure class=\"wp-block-image\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/3-1024x423.png\" alt=\"Python Download\" class=\"wp-image-16\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li>Installiere die Datei wie eine gewöhnliche Software, z. B. über Windows per Doppelklick auf die Datei \"python-3-6-2.exe\". Aktiviere die Auswahl \"Add Python 3.6 to PATH\" im ersten Installationsfenster!! Weitere Anpassungen musst du nicht durchführen. Im nächsten Schritt wird die Installation durchgeführt und du kannst den Installer verlassen.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":17,\"align\":\"center\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/4.png\" alt=\"Python Installation\" class=\"wp-image-17\"/></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li>Wenn Python richtig installiert wurde, kannst du die Python-Installation aus Schritt 2 noch einmal prüfen und solltest diesmal erfolgreich sein.</li></ul>\n<!-- /wp:list -->','Mit dem Terminal arbeiten und Python installieren','','inherit','closed','closed','','12-revision-v1','','','2019-04-09 19:10:44','2019-04-09 17:10:44','',12,'https://rike.dev/2019/04/09/12-revision-v1/',0,'revision','',0),(71,1,'2019-04-09 19:10:51','2019-04-09 17:10:51','<!-- wp:paragraph -->\n<p>In diesem Tutorial lernst du, wie du mit dem Terminal deines Betriebssystems arbeitest, die Programmiersprache installierst und testest. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" entstanden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:more -->\n<!--more-->\n<!-- /wp:more -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Mit dem Terminal arbeiten / Python-Installation prüfen</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Mit dem Terminal können wir unser Betriebssystem <em>textbasiert</em> steuern.&nbsp;Häufigster Vorbehalt gegen das Terminal&nbsp;ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:<ul><li>In <strong>Windows 8 und 10</strong> geht das mit einem Klick&nbsp;mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination&nbsp;[Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li><li>In <strong>Windows 7</strong> klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li><li>In vielen <strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li><li>Auf <strong>MacOS</strong>&nbsp;führt die&nbsp;Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li></ul></li><li>Nun&nbsp;prüfen wir, ob auf unserem Betriebssystem bereits die Programmiersprache <em>Python&nbsp;</em>installiert ist. Die Chancen stehen gut, denn MacOS und viele Linux-Distributionen bringen<em> Python</em> bereits mit. Gib im Terminal ein. Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version <em>Python</em> installiert ist. Wenn das der Fall ist, musst du an dieser Stelle nichts weiter tun (es ist egal, welche Python-Version du nutzt)!<br>Solltest du eine Fehlermeldung erhalten, musst du die Installation von Python für dein Betriebssystem nachholen (nächster Schritt).</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":14,\"align\":\"center\",\"linkDestination\":\"media\",\"className\":\"wp-image-286 size-full imagedropshadow\"} -->\n<div class=\"wp-block-image wp-image-286 size-full imagedropshadow\"><figure class=\"aligncenter\"><a href=\"https://rike.dev/wp-content/uploads/2017/07/1.png\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/1.png\" alt=\"Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.\" class=\"wp-image-14\"/></a><figcaption>Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.</figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:image {\"id\":15,\"align\":\"center\",\"linkDestination\":\"media\",\"className\":\"wp-image-282 size-full imagedropshadow\"} -->\n<div class=\"wp-block-image wp-image-282 size-full imagedropshadow\"><figure class=\"aligncenter\"><a href=\"https://rike.dev/wp-content/uploads/2017/07/2.png\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/2.png\" alt=\"Dieses Windows-System hat leider noch keine Python-Installation vorliegen.\" class=\"wp-image-15\"/></a><figcaption>Dieses Windows-System hat leider noch keine Python-Installation vorliegen.</figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Python installieren (empfohlen: Version 3.x.x)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Python können wir wie ein normales Softwarepaket herunterladen und für unser Betriebssystem installieren. Die Programmiersprache ist Open-Source, das heißt kostenlos erhältlich.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Surfe zu&nbsp;https://www.python.org/downloads/ und lade den jüngsten Release von <em>Python 3</em>.xx herunter, momentan ist das <em>Python 3.6.2</em>. Achte darauf, dass du das Paket für dein Betriebssystem herunterlädst, normalerweise erkennt die Website dein Betriebssystem automatisch und schlägt dir die richtige Datei vor.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":16,\"linkDestination\":\"media\",\"className\":\"imagedropshadow\"} -->\n<figure class=\"wp-block-image imagedropshadow\"><a href=\"https://rike.dev/wp-content/uploads/2017/07/3.png\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/3-1024x423.png\" alt=\"Python Download\" class=\"wp-image-16\"/></a></figure>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li>Installiere die Datei wie eine gewöhnliche Software, z. B. über Windows per Doppelklick auf die Datei \"python-3-6-2.exe\". Aktiviere die Auswahl \"Add Python 3.6 to PATH\" im ersten Installationsfenster!! Weitere Anpassungen musst du nicht durchführen. Im nächsten Schritt wird die Installation durchgeführt und du kannst den Installer verlassen.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":17,\"align\":\"center\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/4.png\" alt=\"Python Installation\" class=\"wp-image-17\"/></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li>Wenn Python richtig installiert wurde, kannst du die Python-Installation aus Schritt 2 noch einmal prüfen und solltest diesmal erfolgreich sein.</li></ul>\n<!-- /wp:list -->','Mit dem Terminal arbeiten und Python installieren','','inherit','closed','closed','','12-revision-v1','','','2019-04-09 19:10:51','2019-04-09 17:10:51','',12,'https://rike.dev/2019/04/09/12-revision-v1/',0,'revision','',0),(72,1,'2019-04-09 19:10:57','2019-04-09 17:10:57','<!-- wp:paragraph -->\n<p>In diesem Tutorial lernst du, wie du mit dem Terminal deines Betriebssystems arbeitest, die Programmiersprache installierst und testest. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" entstanden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:more -->\n<!--more-->\n<!-- /wp:more -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Mit dem Terminal arbeiten / Python-Installation prüfen</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Mit dem Terminal können wir unser Betriebssystem <em>textbasiert</em> steuern.&nbsp;Häufigster Vorbehalt gegen das Terminal&nbsp;ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:<ul><li>In <strong>Windows 8 und 10</strong> geht das mit einem Klick&nbsp;mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination&nbsp;[Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li><li>In <strong>Windows 7</strong> klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li><li>In vielen <strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li><li>Auf <strong>MacOS</strong>&nbsp;führt die&nbsp;Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li></ul></li><li>Nun&nbsp;prüfen wir, ob auf unserem Betriebssystem bereits die Programmiersprache <em>Python&nbsp;</em>installiert ist. Die Chancen stehen gut, denn MacOS und viele Linux-Distributionen bringen<em> Python</em> bereits mit. Gib im Terminal ein. Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version <em>Python</em> installiert ist. Wenn das der Fall ist, musst du an dieser Stelle nichts weiter tun (es ist egal, welche Python-Version du nutzt)!<br>Solltest du eine Fehlermeldung erhalten, musst du die Installation von Python für dein Betriebssystem nachholen (nächster Schritt).</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":14,\"align\":\"center\",\"linkDestination\":\"media\",\"className\":\"wp-image-286 size-full imagedropshadow\"} -->\n<div class=\"wp-block-image wp-image-286 size-full imagedropshadow\"><figure class=\"aligncenter\"><a href=\"https://rike.dev/wp-content/uploads/2017/07/1.png\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/1.png\" alt=\"Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.\" class=\"wp-image-14\"/></a><figcaption>Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.</figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:image {\"id\":15,\"align\":\"center\",\"linkDestination\":\"media\",\"className\":\"wp-image-282 size-full imagedropshadow\"} -->\n<div class=\"wp-block-image wp-image-282 size-full imagedropshadow\"><figure class=\"aligncenter\"><a href=\"https://rike.dev/wp-content/uploads/2017/07/2.png\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/2.png\" alt=\"Dieses Windows-System hat leider noch keine Python-Installation vorliegen.\" class=\"wp-image-15\"/></a><figcaption>Dieses Windows-System hat leider noch keine Python-Installation vorliegen.</figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Python installieren (empfohlen: Version 3.x.x)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Python können wir wie ein normales Softwarepaket herunterladen und für unser Betriebssystem installieren. Die Programmiersprache ist Open-Source, das heißt kostenlos erhältlich.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Surfe zu&nbsp;https://www.python.org/downloads/ und lade den jüngsten Release von <em>Python 3</em>.xx herunter, momentan ist das <em>Python 3.6.2</em>. Achte darauf, dass du das Paket für dein Betriebssystem herunterlädst, normalerweise erkennt die Website dein Betriebssystem automatisch und schlägt dir die richtige Datei vor.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":16,\"linkDestination\":\"media\",\"className\":\"imagedropshadow\"} -->\n<figure class=\"wp-block-image imagedropshadow\"><a href=\"https://rike.dev/wp-content/uploads/2017/07/3.png\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/3-1024x423.png\" alt=\"Python Download\" class=\"wp-image-16\"/></a></figure>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li>Installiere die Datei wie eine gewöhnliche Software, z. B. über Windows per Doppelklick auf die Datei \"python-3-6-2.exe\". Aktiviere die Auswahl \"Add Python 3.6 to PATH\" im ersten Installationsfenster!! Weitere Anpassungen musst du nicht durchführen. Im nächsten Schritt wird die Installation durchgeführt und du kannst den Installer verlassen.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":17,\"align\":\"center\",\"linkDestination\":\"media\",\"className\":\"imagedropshadow\"} -->\n<div class=\"wp-block-image imagedropshadow\"><figure class=\"aligncenter\"><a href=\"https://rike.dev/wp-content/uploads/2017/07/4.png\"><img src=\"https://rike.dev/wp-content/uploads/2017/07/4.png\" alt=\"Python Installation\" class=\"wp-image-17\"/></a></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li>Wenn Python richtig installiert wurde, kannst du die Python-Installation aus Schritt 2 noch einmal prüfen und solltest diesmal erfolgreich sein.</li></ul>\n<!-- /wp:list -->','Mit dem Terminal arbeiten und Python installieren','','inherit','closed','closed','','12-revision-v1','','','2019-04-09 19:10:57','2019-04-09 17:10:57','',12,'https://rike.dev/2019/04/09/12-revision-v1/',0,'revision','',0),(73,1,'2019-04-09 19:18:38','2019-04-09 17:18:38','','','','inherit','open','closed','','coding','','','2019-04-09 19:18:46','2019-04-09 17:18:46','',0,'https://rike.dev/wp-content/uploads/2019/04/coding.png',0,'attachment','image/png',0),(74,1,'2019-04-09 19:18:46','2019-04-09 17:18:46','https://rike.dev/wp-content/uploads/2019/04/cropped-coding.png','cropped-coding.png','','inherit','open','closed','','cropped-coding-png','','','2019-04-09 19:18:46','2019-04-09 17:18:46','',0,'https://rike.dev/wp-content/uploads/2019/04/cropped-coding.png',0,'attachment','image/png',0),(75,1,'2019-04-09 19:18:58','2019-04-09 17:18:58','https://rike.dev/wp-content/uploads/2019/04/cropped-coding-1.png','cropped-coding-1.png','','inherit','open','closed','','cropped-coding-1-png','','','2019-04-09 19:18:58','2019-04-09 17:18:58','',0,'https://rike.dev/wp-content/uploads/2019/04/cropped-coding-1.png',0,'attachment','image/png',0),(77,1,'2019-04-10 10:32:01','2019-04-10 08:32:01','<blockquote><strong>TLDR;</strong> This three-part tutorial&nbsp;explains how to setup a basic smart home web app tracking sensor data for temperature and humidity with a Raspberry Pi and web technologies like Mosquitto, Node.js, Express.js, Vue.js, Quasar and Chart.js.</blockquote>\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/6.png\"><img class=\" imagedropshadow aligncenter wp-image-45 size-large\" src=\"https://rike.dev/wp-content/uploads/2019/02/6-1024x667.png\" alt=\"Tiny Smart Home\" width=\"650\" height=\"423\"></a>\n\nSo I went on maternity this January and came up with an idea about a nice little project to do in my free time that went a little further from my usual Javascript front- und backend projects I usually do at work. I have a Raspberry Pi 3 at home I bought over a year ago and never did something useful with so I decided I wanted to track temperatures and humidity in our child\'s room and bedroom to a have an idea about a good indoor climate. In the end I wanted to finalize a cloud-based dashboard web app which provides the incoming sensor data in real time and available everywhere and everytime.\n\n<em>I wrote this three-part tutorial to track my experiences, tech choices and suggestions for you to follow and came up with a solution that comes with an easy&nbsp;hardware setup and some popular (and worth to learn if you are not already familiar with) web development technologies, including Node.js, Mosquitto and Vue.js.</em>\n\nThe basic three parts will allow you to run a web application on your local machine. Nevertheless I added some more features including persistent database storing and the deployment in the cloud with Heroku. You will find these tutorials at the end of this page.\n<blockquote><strong>The code base is stored on <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github</a>!</strong></blockquote>\n<!--more-->\n<h5><a href=\"http://rike.dev/texts/2019/02/11/choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity\">1 . Choose and install hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity</a></h5>\nI did some research on how to build basic&nbsp;weather stations and home automation systems with a Raspberry Pi but they were mostly no wireless solutions or they came up with too much IoT hacking/soldering and especially required a lot of electrical knowledge I do not have. The core problem I figured out was that many tutorials wanted me to build a remote sensor gagdet with radio functionality and sleep mode (e.g. with an Arduino) all on my own.&nbsp;So the question was: Is there a better and easier alternative to such an all self made solution and what about the receiving hardware on the Raspberry Pi?\n\nFortunately, there exists an easier alternative I will show you in&nbsp;this part of the tutorial which deals with slightly more expensive IoT gagdets but which enabled me to set up my smart home hardware in a smooth but nonetheless instructive way.\n<h5><a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2. Get&nbsp;and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a></h5>\nThe main problem in this part was how to set up a stable and endlessly running task on my Raspberry Pi to continuously receive the (correct!) sensor data. Secondly I wanted it to somehow process and transfer it&nbsp;to a backend/microservice/middleware, which then would&nbsp;provide&nbsp;an upcoming frontend with JSON data to display. MQTT is the IoT protocol to go with but how to set it up? How can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5><a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3. Display smart home data&nbsp;in a Quasar, Vue.js and Chart.js powered web application</a></h5>\n<div>This was somehow the easiest part, because I mainly work as a frontend engineer and know how to implement dashboard-like web app solutions in combination with backend REST API services and the like. I challenged myself with an insight into Vue.js, since I mainly used React as a SPA framework before. In search of a nice UI library I discovered Quasar, which provides a very useful CLI and UI components so that there was no need to come up with an own CSS by myself.</div>\n<div></div>\n<div>\n\n<hr>\n\n</div>\n<h5>&nbsp;Add more features?</h5>\nI wrote some more or less standalone tutorials, which will help you to improve your existent application with some more capacities.\n<ol>\n 	<li>Deploy your smart home application up to the cloud on Heroku <em>(coming soon)</em></li>\n 	<li>\n<div>Build a simple session-based authentication with Node.js and Vue.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>\n<div>Setup PostgreSQL database and API for Node.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>Get a CSV download out of PostgreSQL database&nbsp;<em>(coming soon)</em></li>\n</ol>\n<div></div>','How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js','','inherit','closed','closed','','43-revision-v1','','','2019-04-10 10:32:01','2019-04-10 08:32:01','',43,'https://rike.dev/2019/04/10/43-revision-v1/',0,'revision','',0),(78,1,'2019-04-10 10:32:27','2019-04-10 08:32:27','<blockquote>This tutorial is part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"&nbsp;(1&nbsp;|&nbsp;<a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2</a>&nbsp;|&nbsp;<a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3</a>)</blockquote>\n<!--more-->\n<h5>Which (new) IoT hardware do&nbsp;we need for this setup?</h5>\n<ul>\n 	<li><strong>RTL-SDR USB receiver:</strong>&nbsp;a cheap&nbsp;dongle&nbsp;that can be used as a computer based radio scanner for receiving live radio signals in your area (those gagdets receive signals from 500 kHz up to 1.75 GHz) (<a href=\"https://www.amazon.com/dp/B00VZ1AWQA/ref=cm_sw_em_r_mt_dp_U_GkvyCb5A4PD19\">Amazon link</a>)</li>\n 	<li><strong>Temperature / Humidity sensor:</strong> an even cheaper gagdet, that sends sensor data at 433 MHz into the area (e.g. as part of a \"real\" wheather station) (<a href=\"https://www.amazon.de/gp/product/B01MXEBI18/ref=ppx_yo_dt_b_asin_title_o05__o00_s00?ie=UTF8&amp;psc=1\">Amazon link</a>)</li>\n 	<li><strong>Raspberry Pi 3 Model B:</strong> the&nbsp;small&nbsp;single-board computer&nbsp;servers as our heart and base station to receive and process sensor data, I have the Raspbian operating system installed. It could even serve as your web server later (if you are familiar with maintaining your own, but I will use a cloud service in this tutorial). (<a href=\"https://www.amazon.com/Raspberry-Pi-RASPBERRYPI3-MODB-1GB-Model-Motherboard/dp/B01CD5VC92/ref=sr_1_3?ie=UTF8&amp;qid=1549882307&amp;sr=8-3&amp;keywords=Raspberry+Pi+3+Model+B\">Amazon link</a>)</li>\n</ul>\nAt first, setup your sensors whereever you like in your appartment and connect your RTL-SDR receiver with the Raspberry Pi. How to receive the raw data out of the nearby area? A little open source software will help us with that: <em>rtl_433</em> is a program (<a href=\"https://github.com/merbanan/rtl_433\">Github link</a>) to decode traffic from devices that are broadcasting on 433.9 MHz. We install it on our Raspberry Pi:\n<div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"># prepare os\nsudo apt-get update\nsudo apt-get upgrade\n \n# install dependencies\nsudo apt-get install libtool libusb-1.0.0-dev librtlsdr-dev rtl-sdr cmake\n \n# clone rtl_433 Git Repository\ngit clone https://github.com/merbanan/rtl_433.git\n \n# change to directory\ncd rtl_433/\n\n# make build folder\nmkdir build\ncd build/\n\n# compile\ncmake ../\n\n# make\nmake\n\n# install\nsudo make install\n\n# test if rtl_433 was properly installed\nrtl_433 -h\n</pre>\nAfter that we test if the program detects our RTL-SDR receiver with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">rtl_433&nbsp;-G</pre>\nI had some trouble with the following error:&nbsp;<em>Kernel driver is active, or device is claimed by second instance of librtlsdr.&nbsp;</em><em>In the first case, please either detach or blacklist the kernel module&nbsp;</em><em>(dvb_usb_rtl28xxu), or enable automatic detaching at compile time.</em>\n\nThe repository owner recommends\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo&nbsp;rmmod&nbsp;dvb_usb_rtl28xxu&nbsp;rtl2832</pre>\nin that case. If everything went well, the receiver is ready to get sensor data and<em> rtl_433</em> helps with processing, so that after a few seconds you should get signals in the nearby area (yes, even temperature sensor data of your neighbor\'s or sensor data of connected cars.)\n\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/7.png\"><img class=\"imagedropshadow alignnone wp-image-47 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/7.png\" alt=\"\" width=\"914\" height=\"261\"></a>\n\n</div>\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/8.png\"><img class=\"imagedropshadow alignnone wp-image-48 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/8.png\" alt=\"\" width=\"963\" height=\"252\"></a>\n\nHurray, hardware is running!\n\n<hr>\n\n<blockquote>Proceed to the second part of the tutorial \"<a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">Get&nbsp;and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a>\".</blockquote>','Choose and setup hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity','','inherit','closed','closed','','41-revision-v1','','','2019-04-10 10:32:27','2019-04-10 08:32:27','',41,'https://rike.dev/2019/04/10/41-revision-v1/',0,'revision','',0),(79,1,'2019-04-10 10:45:25','2019-04-10 08:45:25','<!-- wp:paragraph -->\n<p>Das World Wide Web stellt über unterschiedlichste Kanäle eine Vielzahl von potentiell relevanter Information zu diversen Fragestellungen bereit. Insbesondere Unternehmen sind jedoch darauf angewiesen, stets den Überblick über technologische Neuerungen, Marktdaten und sonstige Trends zu behalten. Neben der Erhebung kann auch die Verarbeitung, Analyse und Präsentation von relevanten Daten aus dem Web heute mit Web-Monitoring- Tools unterstützt werden. Die vorliegende Masterarbeit dokumentiert die Entwicklung eines Web-Monitoring-Tools zur Anwendung und Implemen- tierung für einen Engineering-Dienstleister im Automobilbereich. Zur Voranalyse werden einerseits der aktuelle Forschungsstand sowie wichtige Konzepte im Umfeld von Web-Monitoring-Technologien dargelegt. Andererseits werden als eigene empirische Forschung potentielle Nutzer über ihre Anforderungen und Erwartungen an das System in qualitativen Interviews befragt. Die daraus gewonnenen Erkenntnisse gehen im Sinne des Human-Centered-Design direkt in die Konzeption ein. In einem schlanken Feature-Driven-Development-Prozess wird ein Web-Monitoring-Tool mit Hilfe von modernen Webentwicklungstechnologien wie AngularJS, Flask und MongoDB umgesetzt. Der Prototyp wird abschließend unter Anwendung eines Nutzertests und eines Fragebogens einer summativen Evaluation unterzogen.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>Exner, Ulrike. „Nutzerzentrierte Entwicklung eines prototypischen Web-Monitoring-Tools“, 2017.</em> <a href=\"https://opus4.kobv.de/opus4-fhbrb/frontdoor/index/index/docId/2192\">https://opus4.kobv.de/opus4-fhbrb/frontdoor/index/index/docId/2192</a>.</p>\n<!-- /wp:paragraph -->','Nutzerzentrierte Entwicklung eines prototypischen Web-Monitoring-Tools','','inherit','closed','closed','','10-revision-v1','','','2019-04-10 10:45:25','2019-04-10 08:45:25','',10,'https://rike.dev/2019/04/10/10-revision-v1/',0,'revision','',0),(80,1,'2019-04-10 10:45:38','2019-04-10 08:45:38','<!-- wp:paragraph -->\n<p>Die digitalisierende Bankbranche sehnt ihn förmlich herbei: Den Durchbruch des Mobile Banking auch in Deutschland. Mobile Banking als zusätzlicher Distributionskanal wird für traditionelle Geldinstitute überlebenswichtig, um neue Kunden zu gewinnen und bestehende Kundenbeziehungen zu erhalten. Doch die Realität scheint momentan noch eine andere: Im internationalen Vergleich vertrauen nur wenige Deutsche ihre Bankgeschäfte ihrem Handy an. Unter den älteren Bevölkerungsgruppen zeigt sich eine besonders hohe Skepsis dieser Technologie gegenüber. Um dem Phänomen des Mobile Bankings auf die Spur zu kommen, beginnt das Paper mit einer kurzen Einführung in Begrifflichkeiten zum Thema und die Einbeziehung medienpsychologischer Aspekte zur Akzeptanz innovativer Technologien. Schließlich werden einige internationale Studienergebnisse zusammengefasst, die sich mit dem Einflussfaktor Alter als Einflussfaktor auf die Akzeptanz von Mobile Banking befasst haben.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>Exner, Ulrike: \"Banking via Handy - Akzeptanz altersgruppenspezifisch?\",</em> 2015. <a href=\"http://rike.dev/texts/wp-content/uploads/2018/01/mobile_banking.pdf\">Download</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"linkDestination\":\"custom\"} -->\n<figure class=\"wp-block-image\"><a href=\"http://creativecommons.org/licenses/by-sa/4.0/\"><img src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\" alt=\"Creative Commons Lizenzvertrag\"/></a></figure>\n<!-- /wp:image -->','Banking via Handy - Akzeptanz altersgruppenspezifisch?','','inherit','closed','closed','','5-revision-v1','','','2019-04-10 10:45:38','2019-04-10 08:45:38','',5,'https://rike.dev/2019/04/10/5-revision-v1/',0,'revision','',0),(81,1,'2019-04-10 10:45:55','2019-04-10 08:45:55','<!-- wp:paragraph -->\n<p>Die Sehnsucht nach verlässlichen intelligenten Agenten mit scheinbar eigener Persönlichkeit scheint groß zu sein. Wir lassen&nbsp;uns heute durch Apples \"Siri\" oder Microsofts \"Cortana\" den Weg zeigen oder einen Restauranttisch buchen. Doch die Evolution von intelligenten Agenten ist eine Geschichte mit Höhen und Tiefen. Ein berühmter Vertreter einer einfachen Form von interface agents ist Microsofts \"Clippy the Paperclip\" - eine tragische Figur auf dem Experimentierfeld der Künstlichen Intelligenz, der schon vor Beginn ihres Untergangs mit Häme und Spott begegnet wurde. Neue Entwicklungen versprechen innnovative agents, die sich das Internet zu Nutze machen.&nbsp;Das Paper beinhaltet die&nbsp;jeweiligen Entwicklungslinien.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>Exner, Ulrike: \"Die, Clippy, die!!\" Zur Evolution von User Interface Agents und aktuelle Entwicklungen bei Intelligent Personal Assistants, 2016. </em><a href=\"http://rike.dev/texts/wp-content/uploads/2018/01/die_clippy.pdf\">Download</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"linkDestination\":\"custom\"} -->\n<figure class=\"wp-block-image\"><a href=\"http://creativecommons.org/licenses/by-sa/4.0/\"><img src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\" alt=\"Creative Commons Lizenzvertrag\"/></a></figure>\n<!-- /wp:image -->','\"Die, Clippy, die!!\". Die Evolution von User Interface Agents und aktuelle Entwicklungen bei Intelligent Personal Assistants','','inherit','closed','closed','','7-revision-v1','','','2019-04-10 10:45:55','2019-04-10 08:45:55','',7,'https://rike.dev/2019/04/10/7-revision-v1/',0,'revision','',0),(82,1,'2019-04-10 10:46:11','2019-04-10 08:46:11','<!-- wp:paragraph -->\n<p>Das World Wide Web stellt über unterschiedlichste Kanäle eine Vielzahl von potentiell relevanter Information zu diversen Fragestellungen bereit. Insbesondere Unternehmen sind jedoch darauf angewiesen, stets den Überblick über technologische Neuerungen, Marktdaten und sonstige Trends zu behalten. Neben der Erhebung kann auch die Verarbeitung, Analyse und Präsentation von relevanten Daten aus dem Web heute mit Web-Monitoring- Tools unterstützt werden. Die vorliegende Masterarbeit dokumentiert die Entwicklung eines Web-Monitoring-Tools zur Anwendung und Implemen- tierung für einen Engineering-Dienstleister im Automobilbereich. Zur Voranalyse werden einerseits der aktuelle Forschungsstand sowie wichtige Konzepte im Umfeld von Web-Monitoring-Technologien dargelegt. Andererseits werden als eigene empirische Forschung potentielle Nutzer über ihre Anforderungen und Erwartungen an das System in qualitativen Interviews befragt. Die daraus gewonnenen Erkenntnisse gehen im Sinne des Human-Centered-Design direkt in die Konzeption ein. In einem schlanken Feature-Driven-Development-Prozess wird ein Web-Monitoring-Tool mit Hilfe von modernen Webentwicklungstechnologien wie AngularJS, Flask und MongoDB umgesetzt. Der Prototyp wird abschließend unter Anwendung eines Nutzertests und eines Fragebogens einer summativen Evaluation unterzogen.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>Exner, Ulrike: „Nutzerzentrierte Entwicklung eines prototypischen Web-Monitoring-Tools“, 2017.</em> <a href=\"https://opus4.kobv.de/opus4-fhbrb/frontdoor/index/index/docId/2192\">https://opus4.kobv.de/opus4-fhbrb/frontdoor/index/index/docId/2192</a>.</p>\n<!-- /wp:paragraph -->','Nutzerzentrierte Entwicklung eines prototypischen Web-Monitoring-Tools','','inherit','closed','closed','','10-revision-v1','','','2019-04-10 10:46:11','2019-04-10 08:46:11','',10,'https://rike.dev/2019/04/10/10-revision-v1/',0,'revision','',0),(83,1,'2019-04-10 10:46:19','2019-04-10 08:46:19','<!-- wp:paragraph -->\n<p>Das World Wide Web stellt über unterschiedlichste Kanäle eine Vielzahl von potentiell relevanter Information zu diversen Fragestellungen bereit. Insbesondere Unternehmen sind jedoch darauf angewiesen, stets den Überblick über technologische Neuerungen, Marktdaten und sonstige Trends zu behalten. Neben der Erhebung kann auch die Verarbeitung, Analyse und Präsentation von relevanten Daten aus dem Web heute mit Web-Monitoring- Tools unterstützt werden. Die vorliegende Masterarbeit dokumentiert die Entwicklung eines Web-Monitoring-Tools zur Anwendung und Implemen- tierung für einen Engineering-Dienstleister im Automobilbereich. Zur Voranalyse werden einerseits der aktuelle Forschungsstand sowie wichtige Konzepte im Umfeld von Web-Monitoring-Technologien dargelegt. Andererseits werden als eigene empirische Forschung potentielle Nutzer über ihre Anforderungen und Erwartungen an das System in qualitativen Interviews befragt. Die daraus gewonnenen Erkenntnisse gehen im Sinne des Human-Centered-Design direkt in die Konzeption ein. In einem schlanken Feature-Driven-Development-Prozess wird ein Web-Monitoring-Tool mit Hilfe von modernen Webentwicklungstechnologien wie AngularJS, Flask und MongoDB umgesetzt. Der Prototyp wird abschließend unter Anwendung eines Nutzertests und eines Fragebogens einer summativen Evaluation unterzogen.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>Exner, Ulrike: Nutzerzentrierte Entwicklung eines prototypischen Web-Monitoring-Tools, 2017.</em> <a href=\"https://opus4.kobv.de/opus4-fhbrb/frontdoor/index/index/docId/2192\">https://opus4.kobv.de/opus4-fhbrb/frontdoor/index/index/docId/2192</a>.</p>\n<!-- /wp:paragraph -->','Nutzerzentrierte Entwicklung eines prototypischen Web-Monitoring-Tools','','inherit','closed','closed','','10-revision-v1','','','2019-04-10 10:46:19','2019-04-10 08:46:19','',10,'https://rike.dev/2019/04/10/10-revision-v1/',0,'revision','',0),(84,1,'2019-04-10 10:46:41','2019-04-10 08:46:41','<!-- wp:paragraph -->\n<p>Die digitalisierende Bankbranche sehnt ihn förmlich herbei: Den Durchbruch des Mobile Banking auch in Deutschland. Mobile Banking als zusätzlicher Distributionskanal wird für traditionelle Geldinstitute überlebenswichtig, um neue Kunden zu gewinnen und bestehende Kundenbeziehungen zu erhalten. Doch die Realität scheint momentan noch eine andere: Im internationalen Vergleich vertrauen nur wenige Deutsche ihre Bankgeschäfte ihrem Handy an. Unter den älteren Bevölkerungsgruppen zeigt sich eine besonders hohe Skepsis dieser Technologie gegenüber. Um dem Phänomen des Mobile Bankings auf die Spur zu kommen, beginnt das Paper mit einer kurzen Einführung in Begrifflichkeiten zum Thema und die Einbeziehung medienpsychologischer Aspekte zur Akzeptanz innovativer Technologien. Schließlich werden einige internationale Studienergebnisse zusammengefasst, die sich mit dem Einflussfaktor Alter als Einflussfaktor auf die Akzeptanz von Mobile Banking befasst haben.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>Exner, Ulrike: Banking via Handy - Akzeptanz altersgruppenspezifisch?,</em> 2015. <a href=\"http://rike.dev/texts/wp-content/uploads/2018/01/mobile_banking.pdf\">Download</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"linkDestination\":\"custom\"} -->\n<figure class=\"wp-block-image\"><a href=\"http://creativecommons.org/licenses/by-sa/4.0/\"><img src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\" alt=\"Creative Commons Lizenzvertrag\"/></a></figure>\n<!-- /wp:image -->','Banking via Handy - Akzeptanz altersgruppenspezifisch?','','inherit','closed','closed','','5-revision-v1','','','2019-04-10 10:46:41','2019-04-10 08:46:41','',5,'https://rike.dev/2019/04/10/5-revision-v1/',0,'revision','',0),(93,1,'2019-04-11 10:32:51','2019-04-11 08:32:51','[grey_box] <strong>TLDR;</strong> This three-part tutorial explains how to setup a basic smart home web app tracking sensor data for temperature and humidity with a Raspberry Pi and web technologies like Mosquitto, Node.js, Express.js, Vue.js, Quasar and Chart.js. [/grey_box]\n\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/6.png\"><img class=\" imagedropshadow aligncenter wp-image-45 size-large\" src=\"https://rike.dev/wp-content/uploads/2019/02/6-1024x667.png\" alt=\"Tiny Smart Home\" width=\"650\" height=\"423\" /></a>\n\nSo I went on maternity this January and came up with an idea about a nice little project to do in my free time that went a little further from my usual Javascript front- und backend projects I usually do at work. I have a Raspberry Pi 3 at home I bought over a year ago and never did something useful with so I decided I wanted to track temperatures and humidity in our child\'s room and bedroom to a have an idea about a good indoor climate. In the end I wanted to finalize a cloud-based dashboard web app which provides the incoming sensor data in real time and available everywhere and everytime.\n\n<em>I wrote this three-part tutorial to track my experiences, tech choices and suggestions for you to follow and came up with a solution that comes with an easy hardware setup and some popular (and worth to learn if you are not already familiar with) web development technologies, including Node.js, Mosquitto and Vue.js.</em>\n\nThe basic three parts will allow you to run a web application on your local machine. Nevertheless I added some more features including persistent database storing and the deployment in the cloud with Heroku. You will find these tutorials at the end of this page.\n<blockquote><strong>The code base is stored on <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github</a>!</strong></blockquote>\n<!--more-->\n<h5><a href=\"http://rike.dev/texts/2019/02/11/choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity\">1 . Choose and install hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity</a></h5>\nI did some research on how to build basic weather stations and home automation systems with a Raspberry Pi but they were mostly no wireless solutions or they came up with too much IoT hacking/soldering and especially required a lot of electrical knowledge I do not have. The core problem I figured out was that many tutorials wanted me to build a remote sensor gagdet with radio functionality and sleep mode (e.g. with an Arduino) all on my own. So the question was: Is there a better and easier alternative to such an all self made solution and what about the receiving hardware on the Raspberry Pi?\n\nFortunately, there exists an easier alternative I will show you in this part of the tutorial which deals with slightly more expensive IoT gagdets but which enabled me to set up my smart home hardware in a smooth but nonetheless instructive way.\n<h5><a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2. Get and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a></h5>\nThe main problem in this part was how to set up a stable and endlessly running task on my Raspberry Pi to continuously receive the (correct!) sensor data. Secondly I wanted it to somehow process and transfer it to a backend/microservice/middleware, which then would provide an upcoming frontend with JSON data to display. MQTT is the IoT protocol to go with but how to set it up? How can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5><a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3. Display smart home data in a Quasar, Vue.js and Chart.js powered web application</a></h5>\n<div>This was somehow the easiest part, because I mainly work as a frontend engineer and know how to implement dashboard-like web app solutions in combination with backend REST API services and the like. I challenged myself with an insight into Vue.js, since I mainly used React as a SPA framework before. In search of a nice UI library I discovered Quasar, which provides a very useful CLI and UI components so that there was no need to come up with an own CSS by myself.</div>\n<div></div>\n<div>\n\n<hr />\n\n</div>\n<h5> Add more features?</h5>\nI wrote some more or less standalone tutorials, which will help you to improve your existent application with some more capacities.\n<ol>\n 	<li>Deploy your smart home application up to the cloud on Heroku <em>(coming soon)</em></li>\n 	<li>\n<div>Build a simple session-based authentication with Node.js and Vue.js <em>(coming soon)</em></div></li>\n 	<li>\n<div>Setup PostgreSQL database and API for Node.js <em>(coming soon)</em></div></li>\n 	<li>Get a CSV download out of PostgreSQL database <em>(coming soon)</em></li>\n</ol>\n<div></div>','How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js','','inherit','closed','closed','','43-revision-v1','','','2019-04-11 10:32:51','2019-04-11 08:32:51','',43,'https://rike.dev/2019/04/11/43-revision-v1/',0,'revision','',0),(94,1,'2019-04-11 10:35:00','2019-04-11 08:35:00','[grey_box] <strong>TLDR;</strong>\n<p class=\"intro\">This three-part tutorial&nbsp;explains how to setup a basic smart home web app tracking sensor data for temperature and humidity with a Raspberry Pi and web technologies like Mosquitto, Node.js, Express.js, Vue.js, Quasar and Chart.js.</p>\n [/grey_box]\n\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/6.png\"><img class=\" imagedropshadow aligncenter wp-image-45 size-large\" src=\"https://rike.dev/wp-content/uploads/2019/02/6-1024x667.png\" alt=\"Tiny Smart Home\" width=\"650\" height=\"423\"></a>\n\nSo I went on maternity this January and came up with an idea about a nice little project to do in my free time that went a little further from my usual Javascript front- und backend projects I usually do at work. I have a Raspberry Pi 3 at home I bought over a year ago and never did something useful with so I decided I wanted to track temperatures and humidity in our child\'s room and bedroom to a have an idea about a good indoor climate. In the end I wanted to finalize a cloud-based dashboard web app which provides the incoming sensor data in real time and available everywhere and everytime.\n\n<em>I wrote this three-part tutorial to track my experiences, tech choices and suggestions for you to follow and came up with a solution that comes with an easy&nbsp;hardware setup and some popular (and worth to learn if you are not already familiar with) web development technologies, including Node.js, Mosquitto and Vue.js.</em>\n\nThe basic three parts will allow you to run a web application on your local machine. Nevertheless I added some more features including persistent database storing and the deployment in the cloud with Heroku. You will find these tutorials at the end of this page.\n<blockquote><strong>The code base is stored on <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github</a>!</strong></blockquote>\n<!--more-->\n<h5><a href=\"http://rike.dev/texts/2019/02/11/choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity\">1 . Choose and install hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity</a></h5>\nI did some research on how to build basic&nbsp;weather stations and home automation systems with a Raspberry Pi but they were mostly no wireless solutions or they came up with too much IoT hacking/soldering and especially required a lot of electrical knowledge I do not have. The core problem I figured out was that many tutorials wanted me to build a remote sensor gagdet with radio functionality and sleep mode (e.g. with an Arduino) all on my own.&nbsp;So the question was: Is there a better and easier alternative to such an all self made solution and what about the receiving hardware on the Raspberry Pi?\n\nFortunately, there exists an easier alternative I will show you in&nbsp;this part of the tutorial which deals with slightly more expensive IoT gagdets but which enabled me to set up my smart home hardware in a smooth but nonetheless instructive way.\n<h5><a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2. Get&nbsp;and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a></h5>\nThe main problem in this part was how to set up a stable and endlessly running task on my Raspberry Pi to continuously receive the (correct!) sensor data. Secondly I wanted it to somehow process and transfer it&nbsp;to a backend/microservice/middleware, which then would&nbsp;provide&nbsp;an upcoming frontend with JSON data to display. MQTT is the IoT protocol to go with but how to set it up? How can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5><a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3. Display smart home data&nbsp;in a Quasar, Vue.js and Chart.js powered web application</a></h5>\n<div>This was somehow the easiest part, because I mainly work as a frontend engineer and know how to implement dashboard-like web app solutions in combination with backend REST API services and the like. I challenged myself with an insight into Vue.js, since I mainly used React as a SPA framework before. In search of a nice UI library I discovered Quasar, which provides a very useful CLI and UI components so that there was no need to come up with an own CSS by myself.</div>\n<div></div>\n<div>\n\n<hr>\n\n</div>\n<h5>&nbsp;Add more features?</h5>\nI wrote some more or less standalone tutorials, which will help you to improve your existent application with some more capacities.\n<ol>\n 	<li>Deploy your smart home application up to the cloud on Heroku <em>(coming soon)</em></li>\n 	<li>\n<div>Build a simple session-based authentication with Node.js and Vue.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>\n<div>Setup PostgreSQL database and API for Node.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>Get a CSV download out of PostgreSQL database&nbsp;<em>(coming soon)</em></li>\n</ol>\n<div></div>','How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js','','inherit','closed','closed','','43-revision-v1','','','2019-04-11 10:35:00','2019-04-11 08:35:00','',43,'https://rike.dev/2019/04/11/43-revision-v1/',0,'revision','',0),(95,1,'2019-04-11 10:36:25','2019-04-11 08:36:25','[grey_box] <strong>TLDR;</strong> This three-part tutorial&nbsp;explains how to setup a basic smart home web app tracking sensor data for temperature and humidity with a Raspberry Pi and web technologies like Mosquitto, Node.js, Express.js, Vue.js, Quasar and Chart.js.\n\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/6.png\"><img class=\" imagedropshadow aligncenter wp-image-45 size-large\" src=\"https://rike.dev/wp-content/uploads/2019/02/6-1024x667.png\" alt=\"Tiny Smart Home\" width=\"650\" height=\"423\"></a>\n\nSo I went on maternity this January and came up with an idea about a nice little project to do in my free time that went a little further from my usual Javascript front- und backend projects I usually do at work. I have a Raspberry Pi 3 at home I bought over a year ago and never did something useful with so I decided I wanted to track temperatures and humidity in our child\'s room and bedroom to a have an idea about a good indoor climate. In the end I wanted to finalize a cloud-based dashboard web app which provides the incoming sensor data in real time and available everywhere and everytime.\n\n<em>I wrote this three-part tutorial to track my experiences, tech choices and suggestions for you to follow and came up with a solution that comes with an easy&nbsp;hardware setup and some popular (and worth to learn if you are not already familiar with) web development technologies, including Node.js, Mosquitto and Vue.js.</em>\n\nThe basic three parts will allow you to run a web application on your local machine. Nevertheless I added some more features including persistent database storing and the deployment in the cloud with Heroku. You will find these tutorials at the end of this page.\n<blockquote><strong>The code base is stored on <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github</a>!</strong></blockquote>\n<!--more-->\n<h5><a href=\"http://rike.dev/texts/2019/02/11/choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity\">1 . Choose and install hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity</a></h5>\nI did some research on how to build basic&nbsp;weather stations and home automation systems with a Raspberry Pi but they were mostly no wireless solutions or they came up with too much IoT hacking/soldering and especially required a lot of electrical knowledge I do not have. The core problem I figured out was that many tutorials wanted me to build a remote sensor gagdet with radio functionality and sleep mode (e.g. with an Arduino) all on my own.&nbsp;So the question was: Is there a better and easier alternative to such an all self made solution and what about the receiving hardware on the Raspberry Pi?\n\nFortunately, there exists an easier alternative I will show you in&nbsp;this part of the tutorial which deals with slightly more expensive IoT gagdets but which enabled me to set up my smart home hardware in a smooth but nonetheless instructive way.\n<h5><a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2. Get&nbsp;and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a></h5>\nThe main problem in this part was how to set up a stable and endlessly running task on my Raspberry Pi to continuously receive the (correct!) sensor data. Secondly I wanted it to somehow process and transfer it&nbsp;to a backend/microservice/middleware, which then would&nbsp;provide&nbsp;an upcoming frontend with JSON data to display. MQTT is the IoT protocol to go with but how to set it up? How can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5><a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3. Display smart home data&nbsp;in a Quasar, Vue.js and Chart.js powered web application</a></h5>\n<div>This was somehow the easiest part, because I mainly work as a frontend engineer and know how to implement dashboard-like web app solutions in combination with backend REST API services and the like. I challenged myself with an insight into Vue.js, since I mainly used React as a SPA framework before. In search of a nice UI library I discovered Quasar, which provides a very useful CLI and UI components so that there was no need to come up with an own CSS by myself.</div>\n<div></div>\n<div>\n\n<hr>\n\n</div>\n<h5>&nbsp;Add more features?</h5>\nI wrote some more or less standalone tutorials, which will help you to improve your existent application with some more capacities.\n<ol>\n 	<li>Deploy your smart home application up to the cloud on Heroku <em>(coming soon)</em></li>\n 	<li>\n<div>Build a simple session-based authentication with Node.js and Vue.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>\n<div>Setup PostgreSQL database and API for Node.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>Get a CSV download out of PostgreSQL database&nbsp;<em>(coming soon)</em></li>\n</ol>\n<div></div>','How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js','','inherit','closed','closed','','43-revision-v1','','','2019-04-11 10:36:25','2019-04-11 08:36:25','',43,'https://rike.dev/2019/04/11/43-revision-v1/',0,'revision','',0),(96,1,'2019-04-11 10:37:09','2019-04-11 08:37:09','[grey_box] <strong>TLDR;</strong> This three-part tutorial&nbsp;explains how to setup a basic smart home web app tracking sensor data for temperature and humidity with a Raspberry Pi and web technologies like Mosquitto, Node.js, Express.js, Vue.js, Quasar and Chart.js.[/grey_box]\n\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/6.png\"><img class=\" imagedropshadow aligncenter wp-image-45 size-large\" src=\"https://rike.dev/wp-content/uploads/2019/02/6-1024x667.png\" alt=\"Tiny Smart Home\" width=\"650\" height=\"423\"></a>\n\nSo I went on maternity this January and came up with an idea about a nice little project to do in my free time that went a little further from my usual Javascript front- und backend projects I usually do at work. I have a Raspberry Pi 3 at home I bought over a year ago and never did something useful with so I decided I wanted to track temperatures and humidity in our child\'s room and bedroom to a have an idea about a good indoor climate. In the end I wanted to finalize a cloud-based dashboard web app which provides the incoming sensor data in real time and available everywhere and everytime.\n\n<em>I wrote this three-part tutorial to track my experiences, tech choices and suggestions for you to follow and came up with a solution that comes with an easy&nbsp;hardware setup and some popular (and worth to learn if you are not already familiar with) web development technologies, including Node.js, Mosquitto and Vue.js.</em>\n\nThe basic three parts will allow you to run a web application on your local machine. Nevertheless I added some more features including persistent database storing and the deployment in the cloud with Heroku. You will find these tutorials at the end of this page.\n<blockquote><strong>The code base is stored on <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github</a>!</strong></blockquote>\n<!--more-->\n<h5><a href=\"http://rike.dev/texts/2019/02/11/choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity\">1 . Choose and install hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity</a></h5>\nI did some research on how to build basic&nbsp;weather stations and home automation systems with a Raspberry Pi but they were mostly no wireless solutions or they came up with too much IoT hacking/soldering and especially required a lot of electrical knowledge I do not have. The core problem I figured out was that many tutorials wanted me to build a remote sensor gagdet with radio functionality and sleep mode (e.g. with an Arduino) all on my own.&nbsp;So the question was: Is there a better and easier alternative to such an all self made solution and what about the receiving hardware on the Raspberry Pi?\n\nFortunately, there exists an easier alternative I will show you in&nbsp;this part of the tutorial which deals with slightly more expensive IoT gagdets but which enabled me to set up my smart home hardware in a smooth but nonetheless instructive way.\n<h5><a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2. Get&nbsp;and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a></h5>\nThe main problem in this part was how to set up a stable and endlessly running task on my Raspberry Pi to continuously receive the (correct!) sensor data. Secondly I wanted it to somehow process and transfer it&nbsp;to a backend/microservice/middleware, which then would&nbsp;provide&nbsp;an upcoming frontend with JSON data to display. MQTT is the IoT protocol to go with but how to set it up? How can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5><a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3. Display smart home data&nbsp;in a Quasar, Vue.js and Chart.js powered web application</a></h5>\n<div>This was somehow the easiest part, because I mainly work as a frontend engineer and know how to implement dashboard-like web app solutions in combination with backend REST API services and the like. I challenged myself with an insight into Vue.js, since I mainly used React as a SPA framework before. In search of a nice UI library I discovered Quasar, which provides a very useful CLI and UI components so that there was no need to come up with an own CSS by myself.</div>\n<div></div>\n<div>\n\n<hr>\n\n</div>\n<h5>&nbsp;Add more features?</h5>\nI wrote some more or less standalone tutorials, which will help you to improve your existent application with some more capacities.\n<ol>\n 	<li>Deploy your smart home application up to the cloud on Heroku <em>(coming soon)</em></li>\n 	<li>\n<div>Build a simple session-based authentication with Node.js and Vue.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>\n<div>Setup PostgreSQL database and API for Node.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>Get a CSV download out of PostgreSQL database&nbsp;<em>(coming soon)</em></li>\n</ol>\n<div></div>','How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js','','inherit','closed','closed','','43-revision-v1','','','2019-04-11 10:37:09','2019-04-11 08:37:09','',43,'https://rike.dev/2019/04/11/43-revision-v1/',0,'revision','',0),(97,1,'2019-04-11 10:38:55','2019-04-11 08:38:55','[grey_box] <strong>TLDR;</strong> This three-part tutorial&nbsp;explains how to setup a basic smart home web app tracking sensor data for temperature and humidity with a Raspberry Pi and web technologies like Mosquitto, Node.js, Express.js, Vue.js, Quasar and Chart.js.[/grey_box]\n\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/6.png\"><img class=\" imagedropshadow aligncenter wp-image-45 size-large\" src=\"https://rike.dev/wp-content/uploads/2019/02/6-1024x667.png\" alt=\"Tiny Smart Home\" width=\"650\" height=\"423\"></a>\n\nSo I went on maternity this January and came up with an idea about a nice little project to do in my free time that went a little further from my usual Javascript front- und backend projects I usually do at work. I have a Raspberry Pi 3 at home I bought over a year ago and never did something useful with so I decided I wanted to track temperatures and humidity in our child\'s room and bedroom to a have an idea about a good indoor climate. In the end I wanted to finalize a cloud-based dashboard web app which provides the incoming sensor data in real time and available everywhere and everytime.\n\n<em>I wrote this three-part tutorial to track my experiences, tech choices and suggestions for you to follow and came up with a solution that comes with an easy&nbsp;hardware setup and some popular (and worth to learn if you are not already familiar with) web development technologies, including Node.js, Mosquitto and Vue.js.</em>\n\nThe basic three parts will allow you to run a web application on your local machine. Nevertheless I added some more features including persistent database storing and the deployment in the cloud with Heroku. You will find these tutorials at the end of this page.\n[green_box]<strong>The code base is stored on <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github</a>!</strong>[/green_box]\n\n<!--more-->\n<h5><a href=\"http://rike.dev/texts/2019/02/11/choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity\">1 . Choose and install hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity</a></h5>\nI did some research on how to build basic&nbsp;weather stations and home automation systems with a Raspberry Pi but they were mostly no wireless solutions or they came up with too much IoT hacking/soldering and especially required a lot of electrical knowledge I do not have. The core problem I figured out was that many tutorials wanted me to build a remote sensor gagdet with radio functionality and sleep mode (e.g. with an Arduino) all on my own.&nbsp;So the question was: Is there a better and easier alternative to such an all self made solution and what about the receiving hardware on the Raspberry Pi?\n\nFortunately, there exists an easier alternative I will show you in&nbsp;this part of the tutorial which deals with slightly more expensive IoT gagdets but which enabled me to set up my smart home hardware in a smooth but nonetheless instructive way.\n<h5><a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2. Get&nbsp;and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a></h5>\nThe main problem in this part was how to set up a stable and endlessly running task on my Raspberry Pi to continuously receive the (correct!) sensor data. Secondly I wanted it to somehow process and transfer it&nbsp;to a backend/microservice/middleware, which then would&nbsp;provide&nbsp;an upcoming frontend with JSON data to display. MQTT is the IoT protocol to go with but how to set it up? How can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5><a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3. Display smart home data&nbsp;in a Quasar, Vue.js and Chart.js powered web application</a></h5>\n<div>This was somehow the easiest part, because I mainly work as a frontend engineer and know how to implement dashboard-like web app solutions in combination with backend REST API services and the like. I challenged myself with an insight into Vue.js, since I mainly used React as a SPA framework before. In search of a nice UI library I discovered Quasar, which provides a very useful CLI and UI components so that there was no need to come up with an own CSS by myself.</div>\n<div></div>\n<div>\n\n<hr>\n\n</div>\n<h5>&nbsp;Add more features?</h5>\nI wrote some more or less standalone tutorials, which will help you to improve your existent application with some more capacities.\n<ol>\n 	<li>Deploy your smart home application up to the cloud on Heroku <em>(coming soon)</em></li>\n 	<li>\n<div>Build a simple session-based authentication with Node.js and Vue.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>\n<div>Setup PostgreSQL database and API for Node.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>Get a CSV download out of PostgreSQL database&nbsp;<em>(coming soon)</em></li>\n</ol>\n<div></div>','How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js','','inherit','closed','closed','','43-revision-v1','','','2019-04-11 10:38:55','2019-04-11 08:38:55','',43,'https://rike.dev/2019/04/11/43-revision-v1/',0,'revision','',0),(98,1,'2019-04-11 10:40:41','2019-04-11 08:40:41','[grey_box]This tutorial is part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"&nbsp;(1&nbsp;|&nbsp;<a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2</a>&nbsp;|&nbsp;<a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3</a>)[/grey_box]\n<!--more-->\n<h5>Which (new) IoT hardware do&nbsp;we need for this setup?</h5>\n<ul>\n 	<li><strong>RTL-SDR USB receiver:</strong>&nbsp;a cheap&nbsp;dongle&nbsp;that can be used as a computer based radio scanner for receiving live radio signals in your area (those gagdets receive signals from 500 kHz up to 1.75 GHz) (<a href=\"https://www.amazon.com/dp/B00VZ1AWQA/ref=cm_sw_em_r_mt_dp_U_GkvyCb5A4PD19\">Amazon link</a>)</li>\n 	<li><strong>Temperature / Humidity sensor:</strong> an even cheaper gagdet, that sends sensor data at 433 MHz into the area (e.g. as part of a \"real\" wheather station) (<a href=\"https://www.amazon.de/gp/product/B01MXEBI18/ref=ppx_yo_dt_b_asin_title_o05__o00_s00?ie=UTF8&amp;psc=1\">Amazon link</a>)</li>\n 	<li><strong>Raspberry Pi 3 Model B:</strong> the&nbsp;small&nbsp;single-board computer&nbsp;servers as our heart and base station to receive and process sensor data, I have the Raspbian operating system installed. It could even serve as your web server later (if you are familiar with maintaining your own, but I will use a cloud service in this tutorial). (<a href=\"https://www.amazon.com/Raspberry-Pi-RASPBERRYPI3-MODB-1GB-Model-Motherboard/dp/B01CD5VC92/ref=sr_1_3?ie=UTF8&amp;qid=1549882307&amp;sr=8-3&amp;keywords=Raspberry+Pi+3+Model+B\">Amazon link</a>)</li>\n</ul>\nAt first, setup your sensors whereever you like in your appartment and connect your RTL-SDR receiver with the Raspberry Pi. How to receive the raw data out of the nearby area? A little open source software will help us with that: <em>rtl_433</em> is a program (<a href=\"https://github.com/merbanan/rtl_433\">Github link</a>) to decode traffic from devices that are broadcasting on 433.9 MHz. We install it on our Raspberry Pi:\n<div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"># prepare os\nsudo apt-get update\nsudo apt-get upgrade\n \n# install dependencies\nsudo apt-get install libtool libusb-1.0.0-dev librtlsdr-dev rtl-sdr cmake\n \n# clone rtl_433 Git Repository\ngit clone https://github.com/merbanan/rtl_433.git\n \n# change to directory\ncd rtl_433/\n\n# make build folder\nmkdir build\ncd build/\n\n# compile\ncmake ../\n\n# make\nmake\n\n# install\nsudo make install\n\n# test if rtl_433 was properly installed\nrtl_433 -h\n</pre>\nAfter that we test if the program detects our RTL-SDR receiver with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">rtl_433&nbsp;-G</pre>\nI had some trouble with the following error:&nbsp;<em>Kernel driver is active, or device is claimed by second instance of librtlsdr.&nbsp;</em><em>In the first case, please either detach or blacklist the kernel module&nbsp;</em><em>(dvb_usb_rtl28xxu), or enable automatic detaching at compile time.</em>\n\nThe repository owner recommends\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo&nbsp;rmmod&nbsp;dvb_usb_rtl28xxu&nbsp;rtl2832</pre>\nin that case. If everything went well, the receiver is ready to get sensor data and<em> rtl_433</em> helps with processing, so that after a few seconds you should get signals in the nearby area (yes, even temperature sensor data of your neighbor\'s or sensor data of connected cars.)\n\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/7.png\"><img class=\"imagedropshadow alignnone wp-image-47 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/7.png\" alt=\"\" width=\"914\" height=\"261\"></a>\n\n</div>\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/8.png\"><img class=\"imagedropshadow alignnone wp-image-48 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/8.png\" alt=\"\" width=\"963\" height=\"252\"></a>\n\nHurray, hardware is running!\n\n<hr>\n\n<blockquote>Proceed to the second part of the tutorial \"<a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">Get&nbsp;and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a>\".</blockquote>','Choose and setup hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity','','inherit','closed','closed','','41-revision-v1','','','2019-04-11 10:40:41','2019-04-11 08:40:41','',41,'https://rike.dev/2019/04/11/41-revision-v1/',0,'revision','',0),(99,1,'2019-04-11 10:48:50','2019-04-11 08:48:50','[grey_box]This tutorial is the second part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"&nbsp;(<a href=\"http://rike.dev/texts/2019/02/11/choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1</a>&nbsp;|&nbsp;2&nbsp;|&nbsp;<a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3</a>)[/grey_box]\n<!--more-->\n\nThe main problem&nbsp;in this part is how to setup a stable and endlessly running task on&nbsp;a Raspberry Pi to continuesly receive the (correct!) sensor data. Secondly&nbsp;we want it to somehow process and transfer it&nbsp;to a service that works as our middleware to provide the frontend with JSON data to display. MQTT is the IoT protocol to go with but how can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5>Setup a web server backend with Node.js and Express.js</h5>\nMultiple solutions would be possible here, but I decided for a Javascript Node.js backend which will be run with Express.js. Make sure <em>node</em> and <em>npm</em> are ready on your machine or install them first.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">node -v\nnpm -v</pre>\nSetup a project folder and a make a subfolder \"server\". Create a new file \"server.js\" within and code a basic backend service. We will upgrade its functionality later.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\nconst app = express();\n\n// test\napp.get(\'/\', function (req, res) {\n res.send(\'hello world!\');\n});\n\napp.listen(3000, () =&gt; console.log(\'App listening on port \', 3000));</pre>\nDon\'t forget to install the <em>npm</em> package<em> express</em> in your console and start the application! (Don\'t know&nbsp;how Node.js with Express.js works? Check out e.g.&nbsp;<a href=\"https://www.guru99.com/node-js-express.html\">this tutorial</a>.)\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm init\nnpm install express --save\nnode server.js</pre>\nGo to your browser and check if your&nbsp;web server works on http://localhost:3000.\n<h5>Setup the MQTT broker Mosquitto</h5>\nWhy MQTT? The protocol is a lightweight publish/subscribe messaging transport solution which is very popular in the IoT field. We will use a MQTT broker as the control center to receive raw sensor data from our&nbsp;<em>rtl_433</em> program, we installed in the previous chapter and forward them to our web server. Mosquitto is a common MQTT broker and is installed and tested on or Raspberry Pi with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt install -y mosquitto mosquitto-clients\nmosquitto -v</pre>\nThe broker will be accessable to clients on mqtt://localhost:1883.\n<h5>Setup a bash script that pipes received data to Mosquitto</h5>\nThe Raspberry Pi now gets the important task to not only start <em>rtl_433</em> to decode traffic from devices that are broadcasting on 433.9 MHz manually, but to start this task on every reboot automatically. For that, we create a cronjob with the tool <em>crontab</em>, which should be installed on&nbsp;our&nbsp;system.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">crontab -h</pre>\nOn your Raspberry Pi create a new file \"tsh_raspberry_script.sh\" (or whatever you want) in your <em>pi</em>&nbsp;home folder and make it executable from your terminal:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">chmod +x tsh_raspberry_script.sh</pre>\nAfter that, open the file in a text editor and add the following bash script. It will start<em> rtl_433</em> and pipe the output in JSON format to Mosquitto, where it will be published in the topic \"home/rtl_344\". Don\'t forget to close and safe the file.\n<pre class=\"EnlighterJSRAW\">#!bin/bash\n/usr/local/bin/rtl_433 -F json -M utc | mosquitto_pub -t home/rtl_433 -l</pre>\nNow we can set up a new cronjob which will execute the shell script on every Raspberry Pi reboot. Open up a terminal:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"># edit crontabs of user \"pi\"\ncrontab -e\n\n# a text editor will open and load all existing cronjobs, add\n@reboot sleep 60 &amp;&amp;&nbsp;sh&nbsp;/home/pi/tsh_raspberry_script.sh</pre>\n<h5>Build a simple database with lowdb and Node.js</h5>\nIn development mode a very basic database will suffice our requirements, that\'s why I used <em>lowdb </em><a href=\"https://github.com/typicode/lowdb\">(Github link)</a> to store the sensor data on localhost first. Lowdb is based on a JSON file in&nbsp;our project folder. If you would like to take an eye on performance and persistence later I have built a solution with PostgreSQL too, but this is <a href=\"http://rike.dev/texts/2019/02/11/setup-postgresql-database-and-api-for-node-js\">another story</a>.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm&nbsp;install&nbsp;lowdb&nbsp;--save</pre>\nIn your <em>server.js</em> add some code.&nbsp;Set some defaults first, which are required if your JSON file (mine is \"db.json\") is empty at first.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const low = require(\'lowdb\');\nconst FileSync = require(\'lowdb/adapters/FileSync\')\nconst adapter = new FileSync(\'db.json\');\nconst db = low(adapter);\n\ndb.defaults({ posts: [] })\n .write()</pre>\nThat\'s all. Now we can write into, edit and delete data within our database.\n<h5>Consume MQTT sensor data and save it to the database</h5>\nWe go back to our Node.js application and install the MQTT client <em>MQTT.js</em> (<a href=\"https://github.com/mqttjs/MQTT.js\">Github link</a>) to be able to consume data that is available via Mosquitto.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm&nbsp;install&nbsp;mqtt&nbsp;--save</pre>\nWith the newly installed MQTT client we are able to receive all the messages that the MQTT broker delivers over its API on mqtt://localhost:1883. We now filter them to only process and store \"correct\" data sets (remember: our RTL-SDR receiver found signals from multiple IoT gagdets we are not interested in).\n\nMy setup included some buffer, temperature and date parsing, basic verifying and filtering regarding incoming messages before I stored the correct Javascript Objects into the lowdb. Continue working on your <em>server.js</em>:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const mqtt = require(\'mqtt\');\nconst client = mqtt.connect(mqtt://localhost:1883);\n\nfahrenheitToCelsius = (fahrenheit) =&gt; {\n var fTempVal = parseFloat(fahrenheit);\n var cTempVal = (fTempVal - 32) * (5 / 9);\n return (Math.round(cTempVal * 100) / 100);\n}\n\nclient.on(\'message\', function (topic, message) {\n // message is buffer\n var stringBuf = message &amp;&amp; message.toString(\'utf-8\')\n try {\n   var json = JSON.parse(stringBuf);\n   // console.log(json);\n   if (json.model === \'inFactory sensor\') {\n     if (json.id === 91 || json.id === 32) {\n     // catch my specific sensor model\n       if (json.temperature_F &amp;&amp; json.humidity) {\n       // add data to lowdb\n       const time = moment.utc(json.time).tz(\"Europe/Berlin\");\n       const formattedTime = time.format(\'YYYY-MM-DD HH:mm:ss\');\n       console.log(\'write post\');\n       db.get(\'posts\')\n       .push({ id: uuid.v1(), room: json.id, temp: fahrenheitToCelsius(json.temperature_F), humidity: json.humidity, time: formattedTime }).write()\n       }\n     }\n   }\n } catch (e) {\n   console.error(stringBuf);\n   }\n})</pre>\nThat\'s it. Whenever the MQTT client receives sensor data it will store it in our database accordingly. You can check that in your \"db.json\" file in your project folder, which grows bigger and bigger during runtime. It won\'t delete itself on backend restart!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\n \"posts\": [\n {\n \"id\": \"c107fc70-1f33-11e9-9b95-fbfea27c8046\",\n \"room\": 32,\n \"temp\": 22.89,\n \"humidity\": 30,\n \"time\": \"2019-01-23 18:24:34\"\n },\n {\n \"id\": \"6607f9f0-1f34-11e9-9b95-fbfea27c8046\",\n \"room\": 32,\n \"temp\": 22.89,\n \"humidity\": 30,\n \"time\": \"2019-01-23 18:29:11\"\n },\n {\n \"id\": \"16492190-1f35-11e9-9b95-fbfea27c8046\",\n \"room\": 91,\n \"temp\": 22.72,\n \"humidity\": 35,\n \"time\": \"2019-01-23 18:34:07\"\n }\n]\n}</pre>\n<h5>Provide sensor data via REST API</h5>\nNow that we have clean data in our lowdb we might want to provide them via a REST API to be consumable for a frontend or multiple frontends (smartphone app, web app, ..). We already deployed a local web server running on Node.js and Express.js and can very simply add an endpoint the provides the database data with the following code. Add it to your <em>server.js</em>!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/api\', (req, res) =&gt; {\n res.send(db.get(\'posts\'));\n});</pre>\nYes, that\'s it. Check if it is working on http://localhost:3000/api or with your favourite REST client (e.g. Postman).\n\n<hr>\n\n<blockquote>Proceed to the third part of the tutorial \"<a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">Display smart home data&nbsp;in a Quasar, Vue.js and Chart.js powered web application</a>\".</blockquote>','Get and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend application','','inherit','closed','closed','','33-revision-v1','','','2019-04-11 10:48:50','2019-04-11 08:48:50','',33,'https://rike.dev/2019/04/11/33-revision-v1/',0,'revision','',0),(100,1,'2019-04-11 10:49:06','2019-04-11 08:49:06','[grey_box]This tutorial is the second part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\" (<a href=\"http://rike.dev/texts/2019/02/11/choose-and-setup-hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1</a>&nbsp;|&nbsp;<a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2</a>&nbsp;|&nbsp;3)[/grey_box]\n<!--more-->\n\nIn this part we will build a basic dashboard displaying smart home sensor data with charts.&nbsp;We could go with whatever implementation you would like here: from vanilla HTML/CSS/JS to every framework which is suitable to our needs - which are basically doing an API call to our backend to fetch sensor data and lift them up to work nicely with a chart visualisation.&nbsp; There are also other good solutions to deal with IoT frontends like Pimatic, OpenHAB and FHEM, but let\'s just build this part completely on our own.&nbsp;We will go with the SPA framework Vue.js with Quasar on top: It comes with UI components in the popular Material Design, axios and some other features, that help getting started with Vue.js very fast.\n\nInstall the Vue.js (<a href=\"https://vuejs.org/\">Link</a>) and Quasar CLI (<a href=\"https://github.com/quasarframework/quasar\">Github link</a>) first!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install -g vue-cli\nnpm install -g quasar-cli</pre>\nGo to your project root and init a new sub project for your frontend code with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">quasar init vue-frontend</pre>\nNow start you development server on http://localhost:8080/ with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">quasar dev</pre>\nand you are ready to develop your frontend according to your likes. Quasar comes with a basic starter layout including a side navigation. However we don\'t need to work on this heavily and focus on the the homepage, where we will build the dashboard functionality.\n\nGo to <em>Index.vue</em> and update the basic dashboard layout. You can use static images like in my proposal and put them into the <em>src/assets</em> folder.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;template&gt;\n &lt;q-page padding class=\"docs-input row justify-center\"&gt;\n   &lt;div class=\"row gutter-sm\"&gt;\n     &lt;div class=\"col-6\"&gt;\n       &lt;q-card inline&gt;\n         &lt;q-card-media style=\"max-height: 250px\"&gt;\n            &lt;img src=\"~assets/temperature.jpg\"&gt;\n             &lt;q-card-title slot=\"overlay\"&gt;\n               Temperature\n               &lt;span slot=\"subtitle\"&gt;hot or not&lt;/span&gt;\n             &lt;/q-card-title&gt;\n         &lt;/q-card-media&gt;\n         &lt;q-card-main&gt;lorem ipsum&lt;/q-card-main&gt;\n       &lt;/q-card&gt;\n &lt;/div&gt;\n &lt;div class=\"col-6\"&gt;\n   &lt;q-card inline&gt;\n     &lt;q-card-media style=\"max-height: 250px\"&gt;\n       &lt;img src=\"~assets/humidity.jpg\"&gt;\n       &lt;q-card-title slot=\"overlay\"&gt;\n         Humidity\n         &lt;span slot=\"subtitle\"&gt;some like it wet&lt;/span&gt;\n       &lt;/q-card-title&gt;\n     &lt;/q-card-media&gt;\n     &lt;q-card-main&gt;lorem ipsum&lt;/q-card-main&gt;\n   &lt;/q-card&gt;\n  &lt;/div&gt;\n &lt;/div&gt;\n &lt;/q-page&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\n&lt;/style&gt;\n\n&lt;script&gt;\n  export default {\n  name: \"PageIndex\"\n  };\n&lt;/script&gt;</pre>\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/9.png\"><img class=\"imagedropshadow alignnone wp-image-50 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/9.png\" alt=\"Dashboard\" width=\"989\" height=\"407\"></a>\n<h5>Fetch sensor data from Node.js backend</h5>\nTo fetch necessary data on page load we make use of Vue.js\' created() function in the &lt;script&gt;&lt;/script&gt; section below the template. We insert a new function this.fetchData(); there and implement this new function in the methods\' block.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\"> methods: {\n  fetchData() {\n   this.loaded = false;\n   this.$axios\n    .get(\"http://localhost:3000/api\")\n    .then(response =&gt; {\n       return response.data;\n    })\n    .then(response =&gt; {\n      console.log(response);\n      this.loaded = true;\n\n    })\n    .catch(e =&gt; {\n      console.log(e);\n      this.$q.notify({\n       color: \"negative\",\n       position: \"top\",\n       message: \"Could not fetch.\",\n       icon: \"report_problem\"\n    });\n  });\n }\n}</pre>\nWe simply use the <em>axios</em> library (<a href=\"https://github.com/axios/axios\">Github link</a>) which Quasar included right from the setup, so we can use it globally without importing it explicitly. If this works properly you should be able to log the array of sensor data in your browser\'s developer tools. If there is any problem, we trigger&nbsp;the Quasar component notification and include the error message.\n\n<strong>Hint:</strong> If you encounter <em>CORS</em> problems in the communication between front- and backend (e. g. \"No Access-Control-Allow-Origin header is present on the requested resource.\") edit your<em> server.js</em> and restart it as follows:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.use(function (req, res, next) {\n res.header(\"Access-Control-Allow-Origin\", \"*\");\n res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n next();\n});</pre>\n<h5>Build a line chart with Chart.js</h5>\nIn this part I will focus on displaying only the temperature chart to make the tutorial more comprehensable. At first we will install the npm package <em>vue-chartjs </em><a href=\"https://github.com/apertureless/vue-chartjs\">(Github link)&nbsp;</a>which works as a practical Vue.js wrapper for Chart.js (<a href=\"https://www.chartjs.org/\">Link</a>).\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install vue-chartsjs --save</pre>\nNow we build a generic, reusable line chart component to use in the web application. Create a new file \"LineChart.js\" in the <em>src/components</em> folder and import the <em>vue-chartsjs</em> package. Furthermore, we will follow the basic tutorial for the package and specify a data collection prop and an options prop that will prettify our line chart later.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">import { Line } from \'vue-chartjs\';\n\nexport default {\n extends: Line,\n props: {\n   datacollection: {\n    type: Object,\n    default: null\n   },\n   options: {\n    type: Object,\n    default: null\n   }\n  },\n mounted() {\n   this.renderChart(this.datacollection, this.options, {responsive: true})\n }\n}</pre>\nSwitch to the<em> Index.vue</em> again and include a new line chart component (html tag) in your template.&nbsp;We want to display it within the card component. Additionally we specify some properties: <em>v-if=\"loaded\"</em> will tell the component that it should only mount, if the according data prop is true. Also, we transfer the <em>fetched datacollection_humidity</em> and <em>options_humidity</em> as our generic datacollection and options into the line chart.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;q-card-main&gt;\n &lt;line-chart\n   v-if=\"loaded\"\n   :datacollection=\"datacollection_humidity\"\n   :options=\"options_humidity\"\n &gt;&lt;/line-chart&gt;\n&lt;/q-card-main&gt;</pre>\nWe also have to edit our fetchData(); function and transfer the fetched data as a processible JSON to the data collection prop.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// process the backend response and add labels and some styling for the Chart.js api  \nconst datacollection_humidity = {\n   labels: response.map(obj =&gt; obj.time),\n   datasets: [\n     {\n       label: \"Humidity\",\n       backgroundColor: \"#000\",\n       data: response.map(obj =&gt; obj.humidity)\n     }\n   ]\n};\n\nthis.datacollection_humidity = datacollection_humidity;\n\n// set some optional properties regarding axes and ticks\nthis.options_humidity = {\n   scales: {\n   xAxes: [\n     {\n       type: \"time\",\n       distribution: \"linear\"\n     }\n   ],\n   yAxes: [\n     {\n       scaleLabel: {\n       display: true\n     },\n   ticks: {\n     callback: function(value, index, values) {\n       return value + \"%\";\n       }\n     }\n    }\n   ]\n  }\n};</pre>\nDon\'t forget to add the LineChart component and the necessary \"loaded\" data prop in your Vue.js &lt;script&gt;&lt;/script&gt; section.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">export default {\n name: \"PageIndex\",\n components: {\n   LineChart\n   },\n data() {\n   return {\n     loaded: false,\n     };\n   }\n}</pre>\nThat\'s it! On every page reload, the web application fetches available sensor data from our backend service and will display it as a line chart. You would like to add more functionality? You can find all features we built and more (filtering, reloading, deploying, saving persistently, ..) in my <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github repository</a> for this project.','Display smart home data in a Quasar, Vue.js and Chart.js powered web application','','inherit','closed','closed','','39-revision-v1','','','2019-04-11 10:49:06','2019-04-11 08:49:06','',39,'https://rike.dev/2019/04/11/39-revision-v1/',0,'revision','',0),(101,1,'2019-04-12 10:07:13','2019-04-12 08:07:13','[grey_box] <strong>TLDR;</strong> This three-part tutorial&nbsp;explains how to setup a basic smart home web app tracking sensor data for temperature and humidity with a Raspberry Pi and web technologies like Mosquitto, Node.js, Express.js, Vue.js, Quasar and Chart.js.[/grey_box]\n\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/6.png\"><img class=\" imagedropshadow aligncenter wp-image-45 size-large\" src=\"https://rike.dev/wp-content/uploads/2019/02/6-1024x667.png\" alt=\"Tiny Smart Home\" width=\"650\" height=\"423\"></a>\n\nSo I went on maternity this January and came up with an idea about a nice little project to do in my free time that went a little further from my usual Javascript front- und backend projects I usually do at work. I have a Raspberry Pi 3 at home I bought over a year ago and never did something useful with so I decided I wanted to track temperatures and humidity in our child\'s room and bedroom to a have an idea about a good indoor climate. In the end I wanted to finalize a cloud-based dashboard web app which provides the incoming sensor data in real time and available everywhere and everytime.\n\n<em>I wrote this three-part tutorial to track my experiences, tech choices and suggestions for you to follow and came up with a solution that comes with an easy&nbsp;hardware setup and some popular (and worth to learn if you are not already familiar with) web development technologies, including Node.js, Mosquitto and Vue.js.</em>\n\nThe basic three parts will allow you to run a web application on your local machine. Nevertheless I added some more features including persistent database storing and the deployment in the cloud with Heroku. You will find these tutorials at the end of this page.\n[green_box]<strong>The code base is stored on <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github</a>!</strong>[/green_box]\n\n<!--more-->\n<h5><a href=\"https://rike.dev/2019/02/11/hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1 . Choose and install hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity</a></h5>\nI did some research on how to build basic&nbsp;weather stations and home automation systems with a Raspberry Pi but they were mostly no wireless solutions or they came up with too much IoT hacking/soldering and especially required a lot of electrical knowledge I do not have. The core problem I figured out was that many tutorials wanted me to build a remote sensor gagdet with radio functionality and sleep mode (e.g. with an Arduino) all on my own.&nbsp;So the question was: Is there a better and easier alternative to such an all self made solution and what about the receiving hardware on the Raspberry Pi?\n\nFortunately, there exists an easier alternative I will show you in&nbsp;this part of the tutorial which deals with slightly more expensive IoT gagdets but which enabled me to set up my smart home hardware in a smooth but nonetheless instructive way.\n<h5><a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2. Get&nbsp;and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a></h5>\nThe main problem in this part was how to set up a stable and endlessly running task on my Raspberry Pi to continuously receive the (correct!) sensor data. Secondly I wanted it to somehow process and transfer it&nbsp;to a backend/microservice/middleware, which then would&nbsp;provide&nbsp;an upcoming frontend with JSON data to display. MQTT is the IoT protocol to go with but how to set it up? How can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5><a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3. Display smart home data&nbsp;in a Quasar, Vue.js and Chart.js powered web application</a></h5>\n<div>This was somehow the easiest part, because I mainly work as a frontend engineer and know how to implement dashboard-like web app solutions in combination with backend REST API services and the like. I challenged myself with an insight into Vue.js, since I mainly used React as a SPA framework before. In search of a nice UI library I discovered Quasar, which provides a very useful CLI and UI components so that there was no need to come up with an own CSS by myself.</div>\n<div></div>\n<div>\n\n<hr>\n\n</div>\n<h5>&nbsp;Add more features?</h5>\nI wrote some more or less standalone tutorials, which will help you to improve your existent application with some more capacities.\n<ol>\n 	<li>Deploy your smart home application up to the cloud on Heroku <em>(coming soon)</em></li>\n 	<li>\n<div>Build a simple session-based authentication with Node.js and Vue.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>\n<div>Setup PostgreSQL database and API for Node.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>Get a CSV download out of PostgreSQL database&nbsp;<em>(coming soon)</em></li>\n</ol>\n<div></div>','How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js','','inherit','closed','closed','','43-revision-v1','','','2019-04-12 10:07:13','2019-04-12 08:07:13','',43,'https://rike.dev/2019/04/12/43-revision-v1/',0,'revision','',0),(102,1,'2019-04-12 10:07:27','2019-04-12 08:07:27','[grey_box]This tutorial is the second part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\" (<a href=\"https://rike.dev/2019/02/11/hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1</a>&nbsp;|&nbsp;<a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2</a>&nbsp;|&nbsp;3)[/grey_box]\n<!--more-->\n\nIn this part we will build a basic dashboard displaying smart home sensor data with charts.&nbsp;We could go with whatever implementation you would like here: from vanilla HTML/CSS/JS to every framework which is suitable to our needs - which are basically doing an API call to our backend to fetch sensor data and lift them up to work nicely with a chart visualisation.&nbsp; There are also other good solutions to deal with IoT frontends like Pimatic, OpenHAB and FHEM, but let\'s just build this part completely on our own.&nbsp;We will go with the SPA framework Vue.js with Quasar on top: It comes with UI components in the popular Material Design, axios and some other features, that help getting started with Vue.js very fast.\n\nInstall the Vue.js (<a href=\"https://vuejs.org/\">Link</a>) and Quasar CLI (<a href=\"https://github.com/quasarframework/quasar\">Github link</a>) first!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install -g vue-cli\nnpm install -g quasar-cli</pre>\nGo to your project root and init a new sub project for your frontend code with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">quasar init vue-frontend</pre>\nNow start you development server on http://localhost:8080/ with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">quasar dev</pre>\nand you are ready to develop your frontend according to your likes. Quasar comes with a basic starter layout including a side navigation. However we don\'t need to work on this heavily and focus on the the homepage, where we will build the dashboard functionality.\n\nGo to <em>Index.vue</em> and update the basic dashboard layout. You can use static images like in my proposal and put them into the <em>src/assets</em> folder.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;template&gt;\n &lt;q-page padding class=\"docs-input row justify-center\"&gt;\n   &lt;div class=\"row gutter-sm\"&gt;\n     &lt;div class=\"col-6\"&gt;\n       &lt;q-card inline&gt;\n         &lt;q-card-media style=\"max-height: 250px\"&gt;\n            &lt;img src=\"~assets/temperature.jpg\"&gt;\n             &lt;q-card-title slot=\"overlay\"&gt;\n               Temperature\n               &lt;span slot=\"subtitle\"&gt;hot or not&lt;/span&gt;\n             &lt;/q-card-title&gt;\n         &lt;/q-card-media&gt;\n         &lt;q-card-main&gt;lorem ipsum&lt;/q-card-main&gt;\n       &lt;/q-card&gt;\n &lt;/div&gt;\n &lt;div class=\"col-6\"&gt;\n   &lt;q-card inline&gt;\n     &lt;q-card-media style=\"max-height: 250px\"&gt;\n       &lt;img src=\"~assets/humidity.jpg\"&gt;\n       &lt;q-card-title slot=\"overlay\"&gt;\n         Humidity\n         &lt;span slot=\"subtitle\"&gt;some like it wet&lt;/span&gt;\n       &lt;/q-card-title&gt;\n     &lt;/q-card-media&gt;\n     &lt;q-card-main&gt;lorem ipsum&lt;/q-card-main&gt;\n   &lt;/q-card&gt;\n  &lt;/div&gt;\n &lt;/div&gt;\n &lt;/q-page&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\n&lt;/style&gt;\n\n&lt;script&gt;\n  export default {\n  name: \"PageIndex\"\n  };\n&lt;/script&gt;</pre>\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/9.png\"><img class=\"imagedropshadow alignnone wp-image-50 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/9.png\" alt=\"Dashboard\" width=\"989\" height=\"407\"></a>\n<h5>Fetch sensor data from Node.js backend</h5>\nTo fetch necessary data on page load we make use of Vue.js\' created() function in the &lt;script&gt;&lt;/script&gt; section below the template. We insert a new function this.fetchData(); there and implement this new function in the methods\' block.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\"> methods: {\n  fetchData() {\n   this.loaded = false;\n   this.$axios\n    .get(\"http://localhost:3000/api\")\n    .then(response =&gt; {\n       return response.data;\n    })\n    .then(response =&gt; {\n      console.log(response);\n      this.loaded = true;\n\n    })\n    .catch(e =&gt; {\n      console.log(e);\n      this.$q.notify({\n       color: \"negative\",\n       position: \"top\",\n       message: \"Could not fetch.\",\n       icon: \"report_problem\"\n    });\n  });\n }\n}</pre>\nWe simply use the <em>axios</em> library (<a href=\"https://github.com/axios/axios\">Github link</a>) which Quasar included right from the setup, so we can use it globally without importing it explicitly. If this works properly you should be able to log the array of sensor data in your browser\'s developer tools. If there is any problem, we trigger&nbsp;the Quasar component notification and include the error message.\n\n<strong>Hint:</strong> If you encounter <em>CORS</em> problems in the communication between front- and backend (e. g. \"No Access-Control-Allow-Origin header is present on the requested resource.\") edit your<em> server.js</em> and restart it as follows:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.use(function (req, res, next) {\n res.header(\"Access-Control-Allow-Origin\", \"*\");\n res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n next();\n});</pre>\n<h5>Build a line chart with Chart.js</h5>\nIn this part I will focus on displaying only the temperature chart to make the tutorial more comprehensable. At first we will install the npm package <em>vue-chartjs </em><a href=\"https://github.com/apertureless/vue-chartjs\">(Github link)&nbsp;</a>which works as a practical Vue.js wrapper for Chart.js (<a href=\"https://www.chartjs.org/\">Link</a>).\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install vue-chartsjs --save</pre>\nNow we build a generic, reusable line chart component to use in the web application. Create a new file \"LineChart.js\" in the <em>src/components</em> folder and import the <em>vue-chartsjs</em> package. Furthermore, we will follow the basic tutorial for the package and specify a data collection prop and an options prop that will prettify our line chart later.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">import { Line } from \'vue-chartjs\';\n\nexport default {\n extends: Line,\n props: {\n   datacollection: {\n    type: Object,\n    default: null\n   },\n   options: {\n    type: Object,\n    default: null\n   }\n  },\n mounted() {\n   this.renderChart(this.datacollection, this.options, {responsive: true})\n }\n}</pre>\nSwitch to the<em> Index.vue</em> again and include a new line chart component (html tag) in your template.&nbsp;We want to display it within the card component. Additionally we specify some properties: <em>v-if=\"loaded\"</em> will tell the component that it should only mount, if the according data prop is true. Also, we transfer the <em>fetched datacollection_humidity</em> and <em>options_humidity</em> as our generic datacollection and options into the line chart.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;q-card-main&gt;\n &lt;line-chart\n   v-if=\"loaded\"\n   :datacollection=\"datacollection_humidity\"\n   :options=\"options_humidity\"\n &gt;&lt;/line-chart&gt;\n&lt;/q-card-main&gt;</pre>\nWe also have to edit our fetchData(); function and transfer the fetched data as a processible JSON to the data collection prop.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// process the backend response and add labels and some styling for the Chart.js api  \nconst datacollection_humidity = {\n   labels: response.map(obj =&gt; obj.time),\n   datasets: [\n     {\n       label: \"Humidity\",\n       backgroundColor: \"#000\",\n       data: response.map(obj =&gt; obj.humidity)\n     }\n   ]\n};\n\nthis.datacollection_humidity = datacollection_humidity;\n\n// set some optional properties regarding axes and ticks\nthis.options_humidity = {\n   scales: {\n   xAxes: [\n     {\n       type: \"time\",\n       distribution: \"linear\"\n     }\n   ],\n   yAxes: [\n     {\n       scaleLabel: {\n       display: true\n     },\n   ticks: {\n     callback: function(value, index, values) {\n       return value + \"%\";\n       }\n     }\n    }\n   ]\n  }\n};</pre>\nDon\'t forget to add the LineChart component and the necessary \"loaded\" data prop in your Vue.js &lt;script&gt;&lt;/script&gt; section.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">export default {\n name: \"PageIndex\",\n components: {\n   LineChart\n   },\n data() {\n   return {\n     loaded: false,\n     };\n   }\n}</pre>\nThat\'s it! On every page reload, the web application fetches available sensor data from our backend service and will display it as a line chart. You would like to add more functionality? You can find all features we built and more (filtering, reloading, deploying, saving persistently, ..) in my <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github repository</a> for this project.','Display smart home data in a Quasar, Vue.js and Chart.js powered web application','','inherit','closed','closed','','39-revision-v1','','','2019-04-12 10:07:27','2019-04-12 08:07:27','',39,'https://rike.dev/2019/04/12/39-revision-v1/',0,'revision','',0),(103,1,'2019-04-12 10:07:45','2019-04-12 08:07:45','[grey_box]This tutorial is the second part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"&nbsp;(<a href=\"https://rike.dev/2019/02/11/hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1</a>&nbsp;|&nbsp;2&nbsp;|&nbsp;<a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">3</a>)[/grey_box]\n<!--more-->\n\nThe main problem&nbsp;in this part is how to setup a stable and endlessly running task on&nbsp;a Raspberry Pi to continuesly receive the (correct!) sensor data. Secondly&nbsp;we want it to somehow process and transfer it&nbsp;to a service that works as our middleware to provide the frontend with JSON data to display. MQTT is the IoT protocol to go with but how can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5>Setup a web server backend with Node.js and Express.js</h5>\nMultiple solutions would be possible here, but I decided for a Javascript Node.js backend which will be run with Express.js. Make sure <em>node</em> and <em>npm</em> are ready on your machine or install them first.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">node -v\nnpm -v</pre>\nSetup a project folder and a make a subfolder \"server\". Create a new file \"server.js\" within and code a basic backend service. We will upgrade its functionality later.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\nconst app = express();\n\n// test\napp.get(\'/\', function (req, res) {\n res.send(\'hello world!\');\n});\n\napp.listen(3000, () =&gt; console.log(\'App listening on port \', 3000));</pre>\nDon\'t forget to install the <em>npm</em> package<em> express</em> in your console and start the application! (Don\'t know&nbsp;how Node.js with Express.js works? Check out e.g.&nbsp;<a href=\"https://www.guru99.com/node-js-express.html\">this tutorial</a>.)\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm init\nnpm install express --save\nnode server.js</pre>\nGo to your browser and check if your&nbsp;web server works on http://localhost:3000.\n<h5>Setup the MQTT broker Mosquitto</h5>\nWhy MQTT? The protocol is a lightweight publish/subscribe messaging transport solution which is very popular in the IoT field. We will use a MQTT broker as the control center to receive raw sensor data from our&nbsp;<em>rtl_433</em> program, we installed in the previous chapter and forward them to our web server. Mosquitto is a common MQTT broker and is installed and tested on or Raspberry Pi with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt install -y mosquitto mosquitto-clients\nmosquitto -v</pre>\nThe broker will be accessable to clients on mqtt://localhost:1883.\n<h5>Setup a bash script that pipes received data to Mosquitto</h5>\nThe Raspberry Pi now gets the important task to not only start <em>rtl_433</em> to decode traffic from devices that are broadcasting on 433.9 MHz manually, but to start this task on every reboot automatically. For that, we create a cronjob with the tool <em>crontab</em>, which should be installed on&nbsp;our&nbsp;system.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">crontab -h</pre>\nOn your Raspberry Pi create a new file \"tsh_raspberry_script.sh\" (or whatever you want) in your <em>pi</em>&nbsp;home folder and make it executable from your terminal:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">chmod +x tsh_raspberry_script.sh</pre>\nAfter that, open the file in a text editor and add the following bash script. It will start<em> rtl_433</em> and pipe the output in JSON format to Mosquitto, where it will be published in the topic \"home/rtl_344\". Don\'t forget to close and safe the file.\n<pre class=\"EnlighterJSRAW\">#!bin/bash\n/usr/local/bin/rtl_433 -F json -M utc | mosquitto_pub -t home/rtl_433 -l</pre>\nNow we can set up a new cronjob which will execute the shell script on every Raspberry Pi reboot. Open up a terminal:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"># edit crontabs of user \"pi\"\ncrontab -e\n\n# a text editor will open and load all existing cronjobs, add\n@reboot sleep 60 &amp;&amp;&nbsp;sh&nbsp;/home/pi/tsh_raspberry_script.sh</pre>\n<h5>Build a simple database with lowdb and Node.js</h5>\nIn development mode a very basic database will suffice our requirements, that\'s why I used <em>lowdb </em><a href=\"https://github.com/typicode/lowdb\">(Github link)</a> to store the sensor data on localhost first. Lowdb is based on a JSON file in&nbsp;our project folder. If you would like to take an eye on performance and persistence later I have built a solution with PostgreSQL too, but this is <a href=\"http://rike.dev/texts/2019/02/11/setup-postgresql-database-and-api-for-node-js\">another story</a>.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm&nbsp;install&nbsp;lowdb&nbsp;--save</pre>\nIn your <em>server.js</em> add some code.&nbsp;Set some defaults first, which are required if your JSON file (mine is \"db.json\") is empty at first.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const low = require(\'lowdb\');\nconst FileSync = require(\'lowdb/adapters/FileSync\')\nconst adapter = new FileSync(\'db.json\');\nconst db = low(adapter);\n\ndb.defaults({ posts: [] })\n .write()</pre>\nThat\'s all. Now we can write into, edit and delete data within our database.\n<h5>Consume MQTT sensor data and save it to the database</h5>\nWe go back to our Node.js application and install the MQTT client <em>MQTT.js</em> (<a href=\"https://github.com/mqttjs/MQTT.js\">Github link</a>) to be able to consume data that is available via Mosquitto.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm&nbsp;install&nbsp;mqtt&nbsp;--save</pre>\nWith the newly installed MQTT client we are able to receive all the messages that the MQTT broker delivers over its API on mqtt://localhost:1883. We now filter them to only process and store \"correct\" data sets (remember: our RTL-SDR receiver found signals from multiple IoT gagdets we are not interested in).\n\nMy setup included some buffer, temperature and date parsing, basic verifying and filtering regarding incoming messages before I stored the correct Javascript Objects into the lowdb. Continue working on your <em>server.js</em>:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const mqtt = require(\'mqtt\');\nconst client = mqtt.connect(mqtt://localhost:1883);\n\nfahrenheitToCelsius = (fahrenheit) =&gt; {\n var fTempVal = parseFloat(fahrenheit);\n var cTempVal = (fTempVal - 32) * (5 / 9);\n return (Math.round(cTempVal * 100) / 100);\n}\n\nclient.on(\'message\', function (topic, message) {\n // message is buffer\n var stringBuf = message &amp;&amp; message.toString(\'utf-8\')\n try {\n   var json = JSON.parse(stringBuf);\n   // console.log(json);\n   if (json.model === \'inFactory sensor\') {\n     if (json.id === 91 || json.id === 32) {\n     // catch my specific sensor model\n       if (json.temperature_F &amp;&amp; json.humidity) {\n       // add data to lowdb\n       const time = moment.utc(json.time).tz(\"Europe/Berlin\");\n       const formattedTime = time.format(\'YYYY-MM-DD HH:mm:ss\');\n       console.log(\'write post\');\n       db.get(\'posts\')\n       .push({ id: uuid.v1(), room: json.id, temp: fahrenheitToCelsius(json.temperature_F), humidity: json.humidity, time: formattedTime }).write()\n       }\n     }\n   }\n } catch (e) {\n   console.error(stringBuf);\n   }\n})</pre>\nThat\'s it. Whenever the MQTT client receives sensor data it will store it in our database accordingly. You can check that in your \"db.json\" file in your project folder, which grows bigger and bigger during runtime. It won\'t delete itself on backend restart!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\n \"posts\": [\n {\n \"id\": \"c107fc70-1f33-11e9-9b95-fbfea27c8046\",\n \"room\": 32,\n \"temp\": 22.89,\n \"humidity\": 30,\n \"time\": \"2019-01-23 18:24:34\"\n },\n {\n \"id\": \"6607f9f0-1f34-11e9-9b95-fbfea27c8046\",\n \"room\": 32,\n \"temp\": 22.89,\n \"humidity\": 30,\n \"time\": \"2019-01-23 18:29:11\"\n },\n {\n \"id\": \"16492190-1f35-11e9-9b95-fbfea27c8046\",\n \"room\": 91,\n \"temp\": 22.72,\n \"humidity\": 35,\n \"time\": \"2019-01-23 18:34:07\"\n }\n]\n}</pre>\n<h5>Provide sensor data via REST API</h5>\nNow that we have clean data in our lowdb we might want to provide them via a REST API to be consumable for a frontend or multiple frontends (smartphone app, web app, ..). We already deployed a local web server running on Node.js and Express.js and can very simply add an endpoint the provides the database data with the following code. Add it to your <em>server.js</em>!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/api\', (req, res) =&gt; {\n res.send(db.get(\'posts\'));\n});</pre>\nYes, that\'s it. Check if it is working on http://localhost:3000/api or with your favourite REST client (e.g. Postman).\n\n<hr>\n\n<blockquote>Proceed to the third part of the tutorial \"<a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">Display smart home data&nbsp;in a Quasar, Vue.js and Chart.js powered web application</a>\".</blockquote>','Get and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend application','','inherit','closed','closed','','33-revision-v1','','','2019-04-12 10:07:45','2019-04-12 08:07:45','',33,'https://rike.dev/2019/04/12/33-revision-v1/',0,'revision','',0),(104,1,'2019-04-12 10:08:26','2019-04-12 08:08:26','[grey_box]This tutorial is part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"&nbsp;(1&nbsp;|&nbsp;<a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2</a>&nbsp;|&nbsp;<a href=\"https://rike.dev/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application/\">3</a>)[/grey_box]\n<!--more-->\n<h5>Which (new) IoT hardware do&nbsp;we need for this setup?</h5>\n<ul>\n 	<li><strong>RTL-SDR USB receiver:</strong>&nbsp;a cheap&nbsp;dongle&nbsp;that can be used as a computer based radio scanner for receiving live radio signals in your area (those gagdets receive signals from 500 kHz up to 1.75 GHz) (<a href=\"https://www.amazon.com/dp/B00VZ1AWQA/ref=cm_sw_em_r_mt_dp_U_GkvyCb5A4PD19\">Amazon link</a>)</li>\n 	<li><strong>Temperature / Humidity sensor:</strong> an even cheaper gagdet, that sends sensor data at 433 MHz into the area (e.g. as part of a \"real\" wheather station) (<a href=\"https://www.amazon.de/gp/product/B01MXEBI18/ref=ppx_yo_dt_b_asin_title_o05__o00_s00?ie=UTF8&amp;psc=1\">Amazon link</a>)</li>\n 	<li><strong>Raspberry Pi 3 Model B:</strong> the&nbsp;small&nbsp;single-board computer&nbsp;servers as our heart and base station to receive and process sensor data, I have the Raspbian operating system installed. It could even serve as your web server later (if you are familiar with maintaining your own, but I will use a cloud service in this tutorial). (<a href=\"https://www.amazon.com/Raspberry-Pi-RASPBERRYPI3-MODB-1GB-Model-Motherboard/dp/B01CD5VC92/ref=sr_1_3?ie=UTF8&amp;qid=1549882307&amp;sr=8-3&amp;keywords=Raspberry+Pi+3+Model+B\">Amazon link</a>)</li>\n</ul>\nAt first, setup your sensors whereever you like in your appartment and connect your RTL-SDR receiver with the Raspberry Pi. How to receive the raw data out of the nearby area? A little open source software will help us with that: <em>rtl_433</em> is a program (<a href=\"https://github.com/merbanan/rtl_433\">Github link</a>) to decode traffic from devices that are broadcasting on 433.9 MHz. We install it on our Raspberry Pi:\n<div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"># prepare os\nsudo apt-get update\nsudo apt-get upgrade\n \n# install dependencies\nsudo apt-get install libtool libusb-1.0.0-dev librtlsdr-dev rtl-sdr cmake\n \n# clone rtl_433 Git Repository\ngit clone https://github.com/merbanan/rtl_433.git\n \n# change to directory\ncd rtl_433/\n\n# make build folder\nmkdir build\ncd build/\n\n# compile\ncmake ../\n\n# make\nmake\n\n# install\nsudo make install\n\n# test if rtl_433 was properly installed\nrtl_433 -h\n</pre>\nAfter that we test if the program detects our RTL-SDR receiver with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">rtl_433&nbsp;-G</pre>\nI had some trouble with the following error:&nbsp;<em>Kernel driver is active, or device is claimed by second instance of librtlsdr.&nbsp;</em><em>In the first case, please either detach or blacklist the kernel module&nbsp;</em><em>(dvb_usb_rtl28xxu), or enable automatic detaching at compile time.</em>\n\nThe repository owner recommends\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo&nbsp;rmmod&nbsp;dvb_usb_rtl28xxu&nbsp;rtl2832</pre>\nin that case. If everything went well, the receiver is ready to get sensor data and<em> rtl_433</em> helps with processing, so that after a few seconds you should get signals in the nearby area (yes, even temperature sensor data of your neighbor\'s or sensor data of connected cars.)\n\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/7.png\"><img class=\"imagedropshadow alignnone wp-image-47 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/7.png\" alt=\"\" width=\"914\" height=\"261\"></a>\n\n</div>\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/8.png\"><img class=\"imagedropshadow alignnone wp-image-48 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/8.png\" alt=\"\" width=\"963\" height=\"252\"></a>\n\nHurray, hardware is running!\n\n<hr>\n\n<blockquote>Proceed to the second part of the tutorial \"<a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">Get&nbsp;and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a>\".</blockquote>','Choose and setup hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity','','inherit','closed','closed','','41-revision-v1','','','2019-04-12 10:08:26','2019-04-12 08:08:26','',41,'https://rike.dev/2019/04/12/41-revision-v1/',0,'revision','',0),(105,1,'2019-04-12 10:08:42','2019-04-12 08:08:42','[grey_box]This tutorial is the second part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"&nbsp;(<a href=\"https://rike.dev/2019/02/11/hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1</a>&nbsp;|&nbsp;2&nbsp;|&nbsp;<a href=\"https://rike.dev/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application/\">3</a>)[/grey_box]\n<!--more-->\n\nThe main problem&nbsp;in this part is how to setup a stable and endlessly running task on&nbsp;a Raspberry Pi to continuesly receive the (correct!) sensor data. Secondly&nbsp;we want it to somehow process and transfer it&nbsp;to a service that works as our middleware to provide the frontend with JSON data to display. MQTT is the IoT protocol to go with but how can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5>Setup a web server backend with Node.js and Express.js</h5>\nMultiple solutions would be possible here, but I decided for a Javascript Node.js backend which will be run with Express.js. Make sure <em>node</em> and <em>npm</em> are ready on your machine or install them first.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">node -v\nnpm -v</pre>\nSetup a project folder and a make a subfolder \"server\". Create a new file \"server.js\" within and code a basic backend service. We will upgrade its functionality later.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\nconst app = express();\n\n// test\napp.get(\'/\', function (req, res) {\n res.send(\'hello world!\');\n});\n\napp.listen(3000, () =&gt; console.log(\'App listening on port \', 3000));</pre>\nDon\'t forget to install the <em>npm</em> package<em> express</em> in your console and start the application! (Don\'t know&nbsp;how Node.js with Express.js works? Check out e.g.&nbsp;<a href=\"https://www.guru99.com/node-js-express.html\">this tutorial</a>.)\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm init\nnpm install express --save\nnode server.js</pre>\nGo to your browser and check if your&nbsp;web server works on http://localhost:3000.\n<h5>Setup the MQTT broker Mosquitto</h5>\nWhy MQTT? The protocol is a lightweight publish/subscribe messaging transport solution which is very popular in the IoT field. We will use a MQTT broker as the control center to receive raw sensor data from our&nbsp;<em>rtl_433</em> program, we installed in the previous chapter and forward them to our web server. Mosquitto is a common MQTT broker and is installed and tested on or Raspberry Pi with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt install -y mosquitto mosquitto-clients\nmosquitto -v</pre>\nThe broker will be accessable to clients on mqtt://localhost:1883.\n<h5>Setup a bash script that pipes received data to Mosquitto</h5>\nThe Raspberry Pi now gets the important task to not only start <em>rtl_433</em> to decode traffic from devices that are broadcasting on 433.9 MHz manually, but to start this task on every reboot automatically. For that, we create a cronjob with the tool <em>crontab</em>, which should be installed on&nbsp;our&nbsp;system.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">crontab -h</pre>\nOn your Raspberry Pi create a new file \"tsh_raspberry_script.sh\" (or whatever you want) in your <em>pi</em>&nbsp;home folder and make it executable from your terminal:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">chmod +x tsh_raspberry_script.sh</pre>\nAfter that, open the file in a text editor and add the following bash script. It will start<em> rtl_433</em> and pipe the output in JSON format to Mosquitto, where it will be published in the topic \"home/rtl_344\". Don\'t forget to close and safe the file.\n<pre class=\"EnlighterJSRAW\">#!bin/bash\n/usr/local/bin/rtl_433 -F json -M utc | mosquitto_pub -t home/rtl_433 -l</pre>\nNow we can set up a new cronjob which will execute the shell script on every Raspberry Pi reboot. Open up a terminal:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"># edit crontabs of user \"pi\"\ncrontab -e\n\n# a text editor will open and load all existing cronjobs, add\n@reboot sleep 60 &amp;&amp;&nbsp;sh&nbsp;/home/pi/tsh_raspberry_script.sh</pre>\n<h5>Build a simple database with lowdb and Node.js</h5>\nIn development mode a very basic database will suffice our requirements, that\'s why I used <em>lowdb </em><a href=\"https://github.com/typicode/lowdb\">(Github link)</a> to store the sensor data on localhost first. Lowdb is based on a JSON file in&nbsp;our project folder. If you would like to take an eye on performance and persistence later I have built a solution with PostgreSQL too, but this is <a href=\"http://rike.dev/texts/2019/02/11/setup-postgresql-database-and-api-for-node-js\">another story</a>.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm&nbsp;install&nbsp;lowdb&nbsp;--save</pre>\nIn your <em>server.js</em> add some code.&nbsp;Set some defaults first, which are required if your JSON file (mine is \"db.json\") is empty at first.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const low = require(\'lowdb\');\nconst FileSync = require(\'lowdb/adapters/FileSync\')\nconst adapter = new FileSync(\'db.json\');\nconst db = low(adapter);\n\ndb.defaults({ posts: [] })\n .write()</pre>\nThat\'s all. Now we can write into, edit and delete data within our database.\n<h5>Consume MQTT sensor data and save it to the database</h5>\nWe go back to our Node.js application and install the MQTT client <em>MQTT.js</em> (<a href=\"https://github.com/mqttjs/MQTT.js\">Github link</a>) to be able to consume data that is available via Mosquitto.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm&nbsp;install&nbsp;mqtt&nbsp;--save</pre>\nWith the newly installed MQTT client we are able to receive all the messages that the MQTT broker delivers over its API on mqtt://localhost:1883. We now filter them to only process and store \"correct\" data sets (remember: our RTL-SDR receiver found signals from multiple IoT gagdets we are not interested in).\n\nMy setup included some buffer, temperature and date parsing, basic verifying and filtering regarding incoming messages before I stored the correct Javascript Objects into the lowdb. Continue working on your <em>server.js</em>:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const mqtt = require(\'mqtt\');\nconst client = mqtt.connect(mqtt://localhost:1883);\n\nfahrenheitToCelsius = (fahrenheit) =&gt; {\n var fTempVal = parseFloat(fahrenheit);\n var cTempVal = (fTempVal - 32) * (5 / 9);\n return (Math.round(cTempVal * 100) / 100);\n}\n\nclient.on(\'message\', function (topic, message) {\n // message is buffer\n var stringBuf = message &amp;&amp; message.toString(\'utf-8\')\n try {\n   var json = JSON.parse(stringBuf);\n   // console.log(json);\n   if (json.model === \'inFactory sensor\') {\n     if (json.id === 91 || json.id === 32) {\n     // catch my specific sensor model\n       if (json.temperature_F &amp;&amp; json.humidity) {\n       // add data to lowdb\n       const time = moment.utc(json.time).tz(\"Europe/Berlin\");\n       const formattedTime = time.format(\'YYYY-MM-DD HH:mm:ss\');\n       console.log(\'write post\');\n       db.get(\'posts\')\n       .push({ id: uuid.v1(), room: json.id, temp: fahrenheitToCelsius(json.temperature_F), humidity: json.humidity, time: formattedTime }).write()\n       }\n     }\n   }\n } catch (e) {\n   console.error(stringBuf);\n   }\n})</pre>\nThat\'s it. Whenever the MQTT client receives sensor data it will store it in our database accordingly. You can check that in your \"db.json\" file in your project folder, which grows bigger and bigger during runtime. It won\'t delete itself on backend restart!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\n \"posts\": [\n {\n \"id\": \"c107fc70-1f33-11e9-9b95-fbfea27c8046\",\n \"room\": 32,\n \"temp\": 22.89,\n \"humidity\": 30,\n \"time\": \"2019-01-23 18:24:34\"\n },\n {\n \"id\": \"6607f9f0-1f34-11e9-9b95-fbfea27c8046\",\n \"room\": 32,\n \"temp\": 22.89,\n \"humidity\": 30,\n \"time\": \"2019-01-23 18:29:11\"\n },\n {\n \"id\": \"16492190-1f35-11e9-9b95-fbfea27c8046\",\n \"room\": 91,\n \"temp\": 22.72,\n \"humidity\": 35,\n \"time\": \"2019-01-23 18:34:07\"\n }\n]\n}</pre>\n<h5>Provide sensor data via REST API</h5>\nNow that we have clean data in our lowdb we might want to provide them via a REST API to be consumable for a frontend or multiple frontends (smartphone app, web app, ..). We already deployed a local web server running on Node.js and Express.js and can very simply add an endpoint the provides the database data with the following code. Add it to your <em>server.js</em>!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/api\', (req, res) =&gt; {\n res.send(db.get(\'posts\'));\n});</pre>\nYes, that\'s it. Check if it is working on http://localhost:3000/api or with your favourite REST client (e.g. Postman).\n\n<hr>\n\n<blockquote>Proceed to the third part of the tutorial \"<a href=\"http://rike.dev/texts/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application\">Display smart home data&nbsp;in a Quasar, Vue.js and Chart.js powered web application</a>\".</blockquote>','Get and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend application','','inherit','closed','closed','','33-revision-v1','','','2019-04-12 10:08:42','2019-04-12 08:08:42','',33,'https://rike.dev/2019/04/12/33-revision-v1/',0,'revision','',0),(106,1,'2019-04-12 10:08:59','2019-04-12 08:08:59','[grey_box] <strong>TLDR;</strong> This three-part tutorial&nbsp;explains how to setup a basic smart home web app tracking sensor data for temperature and humidity with a Raspberry Pi and web technologies like Mosquitto, Node.js, Express.js, Vue.js, Quasar and Chart.js.[/grey_box]\n\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/6.png\"><img class=\" imagedropshadow aligncenter wp-image-45 size-large\" src=\"https://rike.dev/wp-content/uploads/2019/02/6-1024x667.png\" alt=\"Tiny Smart Home\" width=\"650\" height=\"423\"></a>\n\nSo I went on maternity this January and came up with an idea about a nice little project to do in my free time that went a little further from my usual Javascript front- und backend projects I usually do at work. I have a Raspberry Pi 3 at home I bought over a year ago and never did something useful with so I decided I wanted to track temperatures and humidity in our child\'s room and bedroom to a have an idea about a good indoor climate. In the end I wanted to finalize a cloud-based dashboard web app which provides the incoming sensor data in real time and available everywhere and everytime.\n\n<em>I wrote this three-part tutorial to track my experiences, tech choices and suggestions for you to follow and came up with a solution that comes with an easy&nbsp;hardware setup and some popular (and worth to learn if you are not already familiar with) web development technologies, including Node.js, Mosquitto and Vue.js.</em>\n\nThe basic three parts will allow you to run a web application on your local machine. Nevertheless I added some more features including persistent database storing and the deployment in the cloud with Heroku. You will find these tutorials at the end of this page.\n[green_box]<strong>The code base is stored on <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github</a>!</strong>[/green_box]\n\n<!--more-->\n<h5><a href=\"https://rike.dev/2019/02/11/hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1 . Choose and install hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity</a></h5>\nI did some research on how to build basic&nbsp;weather stations and home automation systems with a Raspberry Pi but they were mostly no wireless solutions or they came up with too much IoT hacking/soldering and especially required a lot of electrical knowledge I do not have. The core problem I figured out was that many tutorials wanted me to build a remote sensor gagdet with radio functionality and sleep mode (e.g. with an Arduino) all on my own.&nbsp;So the question was: Is there a better and easier alternative to such an all self made solution and what about the receiving hardware on the Raspberry Pi?\n\nFortunately, there exists an easier alternative I will show you in&nbsp;this part of the tutorial which deals with slightly more expensive IoT gagdets but which enabled me to set up my smart home hardware in a smooth but nonetheless instructive way.\n<h5><a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">2. Get&nbsp;and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a></h5>\nThe main problem in this part was how to set up a stable and endlessly running task on my Raspberry Pi to continuously receive the (correct!) sensor data. Secondly I wanted it to somehow process and transfer it&nbsp;to a backend/microservice/middleware, which then would&nbsp;provide&nbsp;an upcoming frontend with JSON data to display. MQTT is the IoT protocol to go with but how to set it up? How can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5><a href=\"https://rike.dev/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application/\">3. Display smart home data&nbsp;in a Quasar, Vue.js and Chart.js powered web application</a></h5>\n<div>This was somehow the easiest part, because I mainly work as a frontend engineer and know how to implement dashboard-like web app solutions in combination with backend REST API services and the like. I challenged myself with an insight into Vue.js, since I mainly used React as a SPA framework before. In search of a nice UI library I discovered Quasar, which provides a very useful CLI and UI components so that there was no need to come up with an own CSS by myself.</div>\n<div></div>\n<div>\n\n<hr>\n\n</div>\n<h5>&nbsp;Add more features?</h5>\nI wrote some more or less standalone tutorials, which will help you to improve your existent application with some more capacities.\n<ol>\n 	<li>Deploy your smart home application up to the cloud on Heroku <em>(coming soon)</em></li>\n 	<li>\n<div>Build a simple session-based authentication with Node.js and Vue.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>\n<div>Setup PostgreSQL database and API for Node.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>Get a CSV download out of PostgreSQL database&nbsp;<em>(coming soon)</em></li>\n</ol>\n<div></div>','How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js','','inherit','closed','closed','','43-revision-v1','','','2019-04-12 10:08:59','2019-04-12 08:08:59','',43,'https://rike.dev/2019/04/12/43-revision-v1/',0,'revision','',0),(107,1,'2019-04-12 10:10:07','2019-04-12 08:10:07','[grey_box] <strong>TLDR;</strong> This three-part tutorial&nbsp;explains how to setup a basic smart home web app tracking sensor data for temperature and humidity with a Raspberry Pi and web technologies like Mosquitto, Node.js, Express.js, Vue.js, Quasar and Chart.js.[/grey_box]\n\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/6.png\"><img class=\" imagedropshadow aligncenter wp-image-45 size-large\" src=\"https://rike.dev/wp-content/uploads/2019/02/6-1024x667.png\" alt=\"Tiny Smart Home\" width=\"650\" height=\"423\"></a>\n\nSo I went on maternity this January and came up with an idea about a nice little project to do in my free time that went a little further from my usual Javascript front- und backend projects I usually do at work. I have a Raspberry Pi 3 at home I bought over a year ago and never did something useful with so I decided I wanted to track temperatures and humidity in our child\'s room and bedroom to a have an idea about a good indoor climate. In the end I wanted to finalize a cloud-based dashboard web app which provides the incoming sensor data in real time and available everywhere and everytime.\n\n<em>I wrote this three-part tutorial to track my experiences, tech choices and suggestions for you to follow and came up with a solution that comes with an easy&nbsp;hardware setup and some popular (and worth to learn if you are not already familiar with) web development technologies, including Node.js, Mosquitto and Vue.js.</em>\n\nThe basic three parts will allow you to run a web application on your local machine. Nevertheless I added some more features including persistent database storing and the deployment in the cloud with Heroku. You will find these tutorials at the end of this page.\n[green_box]<strong>The code base is stored on <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github</a>!</strong>[/green_box]\n\n<!--more-->\n<h5><a href=\"https://rike.dev/2019/02/11/hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1 . Choose and install hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity</a></h5>\nI did some research on how to build basic&nbsp;weather stations and home automation systems with a Raspberry Pi but they were mostly no wireless solutions or they came up with too much IoT hacking/soldering and especially required a lot of electrical knowledge I do not have. The core problem I figured out was that many tutorials wanted me to build a remote sensor gagdet with radio functionality and sleep mode (e.g. with an Arduino) all on my own.&nbsp;So the question was: Is there a better and easier alternative to such an all self made solution and what about the receiving hardware on the Raspberry Pi?\n\nFortunately, there exists an easier alternative I will show you in&nbsp;this part of the tutorial which deals with slightly more expensive IoT gagdets but which enabled me to set up my smart home hardware in a smooth but nonetheless instructive way.\n<h5><a href=\"https://rike.dev/2019/02/07/smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application/\">2. Get&nbsp;and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a></h5>\nThe main problem in this part was how to set up a stable and endlessly running task on my Raspberry Pi to continuously receive the (correct!) sensor data. Secondly I wanted it to somehow process and transfer it&nbsp;to a backend/microservice/middleware, which then would&nbsp;provide&nbsp;an upcoming frontend with JSON data to display. MQTT is the IoT protocol to go with but how to set it up? How can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5><a href=\"https://rike.dev/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application/\">3. Display smart home data&nbsp;in a Quasar, Vue.js and Chart.js powered web application</a></h5>\n<div>This was somehow the easiest part, because I mainly work as a frontend engineer and know how to implement dashboard-like web app solutions in combination with backend REST API services and the like. I challenged myself with an insight into Vue.js, since I mainly used React as a SPA framework before. In search of a nice UI library I discovered Quasar, which provides a very useful CLI and UI components so that there was no need to come up with an own CSS by myself.</div>\n<div></div>\n<div>\n\n<hr>\n\n</div>\n<h5>&nbsp;Add more features?</h5>\nI wrote some more or less standalone tutorials, which will help you to improve your existent application with some more capacities.\n<ol>\n 	<li>Deploy your smart home application up to the cloud on Heroku <em>(coming soon)</em></li>\n 	<li>\n<div>Build a simple session-based authentication with Node.js and Vue.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>\n<div>Setup PostgreSQL database and API for Node.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>Get a CSV download out of PostgreSQL database&nbsp;<em>(coming soon)</em></li>\n</ol>\n<div></div>','How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js','','inherit','closed','closed','','43-revision-v1','','','2019-04-12 10:10:07','2019-04-12 08:10:07','',43,'https://rike.dev/2019/04/12/43-revision-v1/',0,'revision','',0),(108,1,'2019-04-12 10:10:25','2019-04-12 08:10:25','[grey_box]This tutorial is part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"&nbsp;(1&nbsp;|&nbsp;<a href=\"https://rike.dev/2019/02/07/smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application/\">2</a>&nbsp;|&nbsp;<a href=\"https://rike.dev/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application/\">3</a>)[/grey_box]\n<!--more-->\n<h5>Which (new) IoT hardware do&nbsp;we need for this setup?</h5>\n<ul>\n 	<li><strong>RTL-SDR USB receiver:</strong>&nbsp;a cheap&nbsp;dongle&nbsp;that can be used as a computer based radio scanner for receiving live radio signals in your area (those gagdets receive signals from 500 kHz up to 1.75 GHz) (<a href=\"https://www.amazon.com/dp/B00VZ1AWQA/ref=cm_sw_em_r_mt_dp_U_GkvyCb5A4PD19\">Amazon link</a>)</li>\n 	<li><strong>Temperature / Humidity sensor:</strong> an even cheaper gagdet, that sends sensor data at 433 MHz into the area (e.g. as part of a \"real\" wheather station) (<a href=\"https://www.amazon.de/gp/product/B01MXEBI18/ref=ppx_yo_dt_b_asin_title_o05__o00_s00?ie=UTF8&amp;psc=1\">Amazon link</a>)</li>\n 	<li><strong>Raspberry Pi 3 Model B:</strong> the&nbsp;small&nbsp;single-board computer&nbsp;servers as our heart and base station to receive and process sensor data, I have the Raspbian operating system installed. It could even serve as your web server later (if you are familiar with maintaining your own, but I will use a cloud service in this tutorial). (<a href=\"https://www.amazon.com/Raspberry-Pi-RASPBERRYPI3-MODB-1GB-Model-Motherboard/dp/B01CD5VC92/ref=sr_1_3?ie=UTF8&amp;qid=1549882307&amp;sr=8-3&amp;keywords=Raspberry+Pi+3+Model+B\">Amazon link</a>)</li>\n</ul>\nAt first, setup your sensors whereever you like in your appartment and connect your RTL-SDR receiver with the Raspberry Pi. How to receive the raw data out of the nearby area? A little open source software will help us with that: <em>rtl_433</em> is a program (<a href=\"https://github.com/merbanan/rtl_433\">Github link</a>) to decode traffic from devices that are broadcasting on 433.9 MHz. We install it on our Raspberry Pi:\n<div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"># prepare os\nsudo apt-get update\nsudo apt-get upgrade\n \n# install dependencies\nsudo apt-get install libtool libusb-1.0.0-dev librtlsdr-dev rtl-sdr cmake\n \n# clone rtl_433 Git Repository\ngit clone https://github.com/merbanan/rtl_433.git\n \n# change to directory\ncd rtl_433/\n\n# make build folder\nmkdir build\ncd build/\n\n# compile\ncmake ../\n\n# make\nmake\n\n# install\nsudo make install\n\n# test if rtl_433 was properly installed\nrtl_433 -h\n</pre>\nAfter that we test if the program detects our RTL-SDR receiver with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">rtl_433&nbsp;-G</pre>\nI had some trouble with the following error:&nbsp;<em>Kernel driver is active, or device is claimed by second instance of librtlsdr.&nbsp;</em><em>In the first case, please either detach or blacklist the kernel module&nbsp;</em><em>(dvb_usb_rtl28xxu), or enable automatic detaching at compile time.</em>\n\nThe repository owner recommends\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo&nbsp;rmmod&nbsp;dvb_usb_rtl28xxu&nbsp;rtl2832</pre>\nin that case. If everything went well, the receiver is ready to get sensor data and<em> rtl_433</em> helps with processing, so that after a few seconds you should get signals in the nearby area (yes, even temperature sensor data of your neighbor\'s or sensor data of connected cars.)\n\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/7.png\"><img class=\"imagedropshadow alignnone wp-image-47 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/7.png\" alt=\"\" width=\"914\" height=\"261\"></a>\n\n</div>\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/8.png\"><img class=\"imagedropshadow alignnone wp-image-48 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/8.png\" alt=\"\" width=\"963\" height=\"252\"></a>\n\nHurray, hardware is running!\n\n<hr>\n\n<blockquote>Proceed to the second part of the tutorial \"<a href=\"http://rike.dev/texts/2019/02/07/get-and-process-your-smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application\">Get&nbsp;and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a>\".</blockquote>','Choose and setup hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity','','inherit','closed','closed','','41-revision-v1','','','2019-04-12 10:10:25','2019-04-12 08:10:25','',41,'https://rike.dev/2019/04/12/41-revision-v1/',0,'revision','',0),(109,1,'2019-04-12 10:10:58','2019-04-12 08:10:58','[grey_box]This tutorial is the second part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\" (<a href=\"https://rike.dev/2019/02/11/hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1</a>&nbsp;|&nbsp;<a href=\"https://rike.dev/2019/02/07/smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application/\">2</a>&nbsp;|&nbsp;3)[/grey_box]\n<!--more-->\n\nIn this part we will build a basic dashboard displaying smart home sensor data with charts.&nbsp;We could go with whatever implementation you would like here: from vanilla HTML/CSS/JS to every framework which is suitable to our needs - which are basically doing an API call to our backend to fetch sensor data and lift them up to work nicely with a chart visualisation.&nbsp; There are also other good solutions to deal with IoT frontends like Pimatic, OpenHAB and FHEM, but let\'s just build this part completely on our own.&nbsp;We will go with the SPA framework Vue.js with Quasar on top: It comes with UI components in the popular Material Design, axios and some other features, that help getting started with Vue.js very fast.\n\nInstall the Vue.js (<a href=\"https://vuejs.org/\">Link</a>) and Quasar CLI (<a href=\"https://github.com/quasarframework/quasar\">Github link</a>) first!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install -g vue-cli\nnpm install -g quasar-cli</pre>\nGo to your project root and init a new sub project for your frontend code with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">quasar init vue-frontend</pre>\nNow start you development server on http://localhost:8080/ with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">quasar dev</pre>\nand you are ready to develop your frontend according to your likes. Quasar comes with a basic starter layout including a side navigation. However we don\'t need to work on this heavily and focus on the the homepage, where we will build the dashboard functionality.\n\nGo to <em>Index.vue</em> and update the basic dashboard layout. You can use static images like in my proposal and put them into the <em>src/assets</em> folder.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;template&gt;\n &lt;q-page padding class=\"docs-input row justify-center\"&gt;\n   &lt;div class=\"row gutter-sm\"&gt;\n     &lt;div class=\"col-6\"&gt;\n       &lt;q-card inline&gt;\n         &lt;q-card-media style=\"max-height: 250px\"&gt;\n            &lt;img src=\"~assets/temperature.jpg\"&gt;\n             &lt;q-card-title slot=\"overlay\"&gt;\n               Temperature\n               &lt;span slot=\"subtitle\"&gt;hot or not&lt;/span&gt;\n             &lt;/q-card-title&gt;\n         &lt;/q-card-media&gt;\n         &lt;q-card-main&gt;lorem ipsum&lt;/q-card-main&gt;\n       &lt;/q-card&gt;\n &lt;/div&gt;\n &lt;div class=\"col-6\"&gt;\n   &lt;q-card inline&gt;\n     &lt;q-card-media style=\"max-height: 250px\"&gt;\n       &lt;img src=\"~assets/humidity.jpg\"&gt;\n       &lt;q-card-title slot=\"overlay\"&gt;\n         Humidity\n         &lt;span slot=\"subtitle\"&gt;some like it wet&lt;/span&gt;\n       &lt;/q-card-title&gt;\n     &lt;/q-card-media&gt;\n     &lt;q-card-main&gt;lorem ipsum&lt;/q-card-main&gt;\n   &lt;/q-card&gt;\n  &lt;/div&gt;\n &lt;/div&gt;\n &lt;/q-page&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\n&lt;/style&gt;\n\n&lt;script&gt;\n  export default {\n  name: \"PageIndex\"\n  };\n&lt;/script&gt;</pre>\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/9.png\"><img class=\"imagedropshadow alignnone wp-image-50 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/9.png\" alt=\"Dashboard\" width=\"989\" height=\"407\"></a>\n<h5>Fetch sensor data from Node.js backend</h5>\nTo fetch necessary data on page load we make use of Vue.js\' created() function in the &lt;script&gt;&lt;/script&gt; section below the template. We insert a new function this.fetchData(); there and implement this new function in the methods\' block.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\"> methods: {\n  fetchData() {\n   this.loaded = false;\n   this.$axios\n    .get(\"http://localhost:3000/api\")\n    .then(response =&gt; {\n       return response.data;\n    })\n    .then(response =&gt; {\n      console.log(response);\n      this.loaded = true;\n\n    })\n    .catch(e =&gt; {\n      console.log(e);\n      this.$q.notify({\n       color: \"negative\",\n       position: \"top\",\n       message: \"Could not fetch.\",\n       icon: \"report_problem\"\n    });\n  });\n }\n}</pre>\nWe simply use the <em>axios</em> library (<a href=\"https://github.com/axios/axios\">Github link</a>) which Quasar included right from the setup, so we can use it globally without importing it explicitly. If this works properly you should be able to log the array of sensor data in your browser\'s developer tools. If there is any problem, we trigger&nbsp;the Quasar component notification and include the error message.\n\n<strong>Hint:</strong> If you encounter <em>CORS</em> problems in the communication between front- and backend (e. g. \"No Access-Control-Allow-Origin header is present on the requested resource.\") edit your<em> server.js</em> and restart it as follows:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.use(function (req, res, next) {\n res.header(\"Access-Control-Allow-Origin\", \"*\");\n res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n next();\n});</pre>\n<h5>Build a line chart with Chart.js</h5>\nIn this part I will focus on displaying only the temperature chart to make the tutorial more comprehensable. At first we will install the npm package <em>vue-chartjs </em><a href=\"https://github.com/apertureless/vue-chartjs\">(Github link)&nbsp;</a>which works as a practical Vue.js wrapper for Chart.js (<a href=\"https://www.chartjs.org/\">Link</a>).\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install vue-chartsjs --save</pre>\nNow we build a generic, reusable line chart component to use in the web application. Create a new file \"LineChart.js\" in the <em>src/components</em> folder and import the <em>vue-chartsjs</em> package. Furthermore, we will follow the basic tutorial for the package and specify a data collection prop and an options prop that will prettify our line chart later.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">import { Line } from \'vue-chartjs\';\n\nexport default {\n extends: Line,\n props: {\n   datacollection: {\n    type: Object,\n    default: null\n   },\n   options: {\n    type: Object,\n    default: null\n   }\n  },\n mounted() {\n   this.renderChart(this.datacollection, this.options, {responsive: true})\n }\n}</pre>\nSwitch to the<em> Index.vue</em> again and include a new line chart component (html tag) in your template.&nbsp;We want to display it within the card component. Additionally we specify some properties: <em>v-if=\"loaded\"</em> will tell the component that it should only mount, if the according data prop is true. Also, we transfer the <em>fetched datacollection_humidity</em> and <em>options_humidity</em> as our generic datacollection and options into the line chart.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;q-card-main&gt;\n &lt;line-chart\n   v-if=\"loaded\"\n   :datacollection=\"datacollection_humidity\"\n   :options=\"options_humidity\"\n &gt;&lt;/line-chart&gt;\n&lt;/q-card-main&gt;</pre>\nWe also have to edit our fetchData(); function and transfer the fetched data as a processible JSON to the data collection prop.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// process the backend response and add labels and some styling for the Chart.js api  \nconst datacollection_humidity = {\n   labels: response.map(obj =&gt; obj.time),\n   datasets: [\n     {\n       label: \"Humidity\",\n       backgroundColor: \"#000\",\n       data: response.map(obj =&gt; obj.humidity)\n     }\n   ]\n};\n\nthis.datacollection_humidity = datacollection_humidity;\n\n// set some optional properties regarding axes and ticks\nthis.options_humidity = {\n   scales: {\n   xAxes: [\n     {\n       type: \"time\",\n       distribution: \"linear\"\n     }\n   ],\n   yAxes: [\n     {\n       scaleLabel: {\n       display: true\n     },\n   ticks: {\n     callback: function(value, index, values) {\n       return value + \"%\";\n       }\n     }\n    }\n   ]\n  }\n};</pre>\nDon\'t forget to add the LineChart component and the necessary \"loaded\" data prop in your Vue.js &lt;script&gt;&lt;/script&gt; section.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">export default {\n name: \"PageIndex\",\n components: {\n   LineChart\n   },\n data() {\n   return {\n     loaded: false,\n     };\n   }\n}</pre>\nThat\'s it! On every page reload, the web application fetches available sensor data from our backend service and will display it as a line chart. You would like to add more functionality? You can find all features we built and more (filtering, reloading, deploying, saving persistently, ..) in my <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github repository</a> for this project.','Display smart home data in a Quasar, Vue.js and Chart.js powered web application','','inherit','closed','closed','','39-revision-v1','','','2019-04-12 10:10:58','2019-04-12 08:10:58','',39,'https://rike.dev/2019/04/12/39-revision-v1/',0,'revision','',0),(110,1,'2019-04-12 10:12:43','2019-04-12 08:12:43','[grey_box] <strong>TLDR;</strong> This three-part tutorial&nbsp;explains how to setup a basic smart home web app tracking sensor data for temperature and humidity with a Raspberry Pi and web technologies like Mosquitto, Node.js, Express.js, Vue.js, Quasar and Chart.js.[/grey_box]\n\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/6.png\"><img class=\" imagedropshadow aligncenter wp-image-45 size-large\" src=\"https://rike.dev/wp-content/uploads/2019/02/6-1024x667.png\" alt=\"Tiny Smart Home\" width=\"650\" height=\"423\"></a>\n\nSo I went on maternity this January and came up with an idea about a nice little project to do in my free time that went a little further from my usual Javascript front- und backend projects I usually do at work. I have a Raspberry Pi 3 at home I bought over a year ago and never did something useful with so I decided I wanted to track temperatures and humidity in our child\'s room and bedroom to a have an idea about a good indoor climate. In the end I wanted to finalize a cloud-based dashboard web app which provides the incoming sensor data in real time and available everywhere and everytime.\n\n<em>I wrote this three-part tutorial to track my experiences, tech choices and suggestions for you to follow and came up with a solution that comes with an easy&nbsp;hardware setup and some popular (and worth to learn if you are not already familiar with) web development technologies, including Node.js, Mosquitto and Vue.js.</em>\n\nThe basic three parts will allow you to run a web application on your local machine. Nevertheless I added some more features including persistent database storing and the deployment in the cloud with Heroku. You will find these tutorials at the end of this page.\n[green_box]<strong>The code base is stored on <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github</a>!</strong>[/green_box]\n\n<!--more-->\n<h5><a href=\"https://rike.dev/2019/02/11/hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1 . Choose and install hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity</a></h5>\nI did some research on how to build basic&nbsp;weather stations and home automation systems with a Raspberry Pi but they were mostly no wireless solutions or they came up with too much IoT hacking/soldering and especially required a lot of electrical knowledge I do not have. The core problem I figured out was that many tutorials wanted me to build a remote sensor gagdet with radio functionality and sleep mode (e.g. with an Arduino) all on my own.&nbsp;So the question was: Is there a better and easier alternative to such an all self made solution and what about the receiving hardware on the Raspberry Pi?\n\nFortunately, there exists an easier alternative I will show you in&nbsp;this part of the tutorial which deals with slightly more expensive IoT gagdets but which enabled me to set up my smart home hardware in a smooth but nonetheless instructive way.\n<h5><a href=\"https://rike.dev/2019/02/07/smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application/\">2. Get&nbsp;and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a></h5>\nThe main problem in this part was how to set up a stable and endlessly running task on my Raspberry Pi to continuously receive the (correct!) sensor data. Secondly I wanted it to somehow process and transfer it&nbsp;to a backend/microservice/middleware, which then would&nbsp;provide&nbsp;an upcoming frontend with JSON data to display. MQTT is the IoT protocol to go with but how to set it up? How can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5><a href=\"https://rike.dev/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application/\">3. Display smart home data&nbsp;in a Quasar, Vue.js and Chart.js powered web application</a></h5>\nThis was somehow the easiest part, because I mainly work as a frontend engineer and know how to implement dashboard-like web app solutions in combination with backend REST API services and the like. I challenged myself with an insight into Vue.js, since I mainly used React as a SPA framework before. In search of a nice UI library I discovered Quasar, which provides a very useful CLI and UI components so that there was no need to come up with an own CSS by myself.\n\n<hr>\n\n<h5>&nbsp;Add more features?</h5>\nI wrote some more or less standalone tutorials, which will help you to improve your existent application with some more capacities.\n<ol>\n 	<li>Deploy your smart home application up to the cloud on Heroku <em>(coming soon)</em></li>\n 	<li>\n<div>Build a simple session-based authentication with Node.js and Vue.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>\n<div>Setup PostgreSQL database and API for Node.js&nbsp;<em>(coming soon)</em></div></li>\n 	<li>Get a CSV download out of PostgreSQL database&nbsp;<em>(coming soon)</em></li>\n</ol>','How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js','','inherit','closed','closed','','43-revision-v1','','','2019-04-12 10:12:43','2019-04-12 08:12:43','',43,'https://rike.dev/2019/04/12/43-revision-v1/',0,'revision','',0),(111,1,'2019-04-12 10:14:14','2019-04-12 08:14:14','[grey_box]This tutorial is part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"&nbsp;(1&nbsp;|&nbsp;<a href=\"https://rike.dev/2019/02/07/smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application/\">2</a>&nbsp;|&nbsp;<a href=\"https://rike.dev/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application/\">3</a>)[/grey_box]\n<!--more-->\n<h5>Which (new) IoT hardware do&nbsp;we need for this setup?</h5>\n<ul>\n 	<li><strong>RTL-SDR USB receiver:</strong>&nbsp;a cheap&nbsp;dongle&nbsp;that can be used as a computer based radio scanner for receiving live radio signals in your area (those gagdets receive signals from 500 kHz up to 1.75 GHz) (<a href=\"https://www.amazon.com/dp/B00VZ1AWQA/ref=cm_sw_em_r_mt_dp_U_GkvyCb5A4PD19\">Amazon link</a>)</li>\n 	<li><strong>Temperature / Humidity sensor:</strong> an even cheaper gagdet, that sends sensor data at 433 MHz into the area (e.g. as part of a \"real\" wheather station) (<a href=\"https://www.amazon.de/gp/product/B01MXEBI18/ref=ppx_yo_dt_b_asin_title_o05__o00_s00?ie=UTF8&amp;psc=1\">Amazon link</a>)</li>\n 	<li><strong>Raspberry Pi 3 Model B:</strong> the&nbsp;small&nbsp;single-board computer&nbsp;servers as our heart and base station to receive and process sensor data, I have the Raspbian operating system installed. It could even serve as your web server later (if you are familiar with maintaining your own, but I will use a cloud service in this tutorial). (<a href=\"https://www.amazon.com/Raspberry-Pi-RASPBERRYPI3-MODB-1GB-Model-Motherboard/dp/B01CD5VC92/ref=sr_1_3?ie=UTF8&amp;qid=1549882307&amp;sr=8-3&amp;keywords=Raspberry+Pi+3+Model+B\">Amazon link</a>)</li>\n</ul>\nAt first, setup your sensors whereever you like in your appartment and connect your RTL-SDR receiver with the Raspberry Pi. How to receive the raw data out of the nearby area? A little open source software will help us with that: <em>rtl_433</em> is a program (<a href=\"https://github.com/merbanan/rtl_433\">Github link</a>) to decode traffic from devices that are broadcasting on 433.9 MHz. We install it on our Raspberry Pi:\n<div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"># prepare os\nsudo apt-get update\nsudo apt-get upgrade\n \n# install dependencies\nsudo apt-get install libtool libusb-1.0.0-dev librtlsdr-dev rtl-sdr cmake\n \n# clone rtl_433 Git Repository\ngit clone https://github.com/merbanan/rtl_433.git\n \n# change to directory\ncd rtl_433/\n\n# make build folder\nmkdir build\ncd build/\n\n# compile\ncmake ../\n\n# make\nmake\n\n# install\nsudo make install\n\n# test if rtl_433 was properly installed\nrtl_433 -h\n</pre>\nAfter that we test if the program detects our RTL-SDR receiver with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">rtl_433&nbsp;-G</pre>\nI had some trouble with the following error:&nbsp;<em>Kernel driver is active, or device is claimed by second instance of librtlsdr.&nbsp;</em><em>In the first case, please either detach or blacklist the kernel module&nbsp;</em><em>(dvb_usb_rtl28xxu), or enable automatic detaching at compile time.</em>\n\nThe repository owner recommends\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo&nbsp;rmmod&nbsp;dvb_usb_rtl28xxu&nbsp;rtl2832</pre>\nin that case. If everything went well, the receiver is ready to get sensor data and<em> rtl_433</em> helps with processing, so that after a few seconds you should get signals in the nearby area (yes, even temperature sensor data of your neighbor\'s or sensor data of connected cars.)\n\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/7.png\"><img class=\"imagedropshadow alignnone wp-image-47 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/7.png\" alt=\"\" width=\"914\" height=\"261\"></a>\n\n</div>\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/8.png\"><img class=\"imagedropshadow alignnone wp-image-48 size-full\" src=\"https://rike.dev/wp-content/uploads/2019/02/8.png\" alt=\"\" width=\"963\" height=\"252\"></a>\n\nHurray, hardware is running!\n\n<hr>\n\n[blue_box]Proceed to the second part of the tutorial \"<a href=\"https://rike.dev/2019/02/07/smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application/\">Get&nbsp;and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a>\".[/blue_box]','Choose and setup hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity','','inherit','closed','closed','','41-revision-v1','','','2019-04-12 10:14:14','2019-04-12 08:14:14','',41,'https://rike.dev/2019/04/12/41-revision-v1/',0,'revision','',0),(112,1,'2019-04-12 10:14:41','2019-04-12 08:14:41','[grey_box]This tutorial is the second part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"&nbsp;(<a href=\"https://rike.dev/2019/02/11/hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1</a>&nbsp;|&nbsp;2&nbsp;|&nbsp;<a href=\"https://rike.dev/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application/\">3</a>)[/grey_box]\n<!--more-->\n\nThe main problem&nbsp;in this part is how to setup a stable and endlessly running task on&nbsp;a Raspberry Pi to continuesly receive the (correct!) sensor data. Secondly&nbsp;we want it to somehow process and transfer it&nbsp;to a service that works as our middleware to provide the frontend with JSON data to display. MQTT is the IoT protocol to go with but how can a MQTT broker like Mosquitto work with a Node.js backend properly?\n<h5>Setup a web server backend with Node.js and Express.js</h5>\nMultiple solutions would be possible here, but I decided for a Javascript Node.js backend which will be run with Express.js. Make sure <em>node</em> and <em>npm</em> are ready on your machine or install them first.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">node -v\nnpm -v</pre>\nSetup a project folder and a make a subfolder \"server\". Create a new file \"server.js\" within and code a basic backend service. We will upgrade its functionality later.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\nconst app = express();\n\n// test\napp.get(\'/\', function (req, res) {\n res.send(\'hello world!\');\n});\n\napp.listen(3000, () =&gt; console.log(\'App listening on port \', 3000));</pre>\nDon\'t forget to install the <em>npm</em> package<em> express</em> in your console and start the application! (Don\'t know&nbsp;how Node.js with Express.js works? Check out e.g.&nbsp;<a href=\"https://www.guru99.com/node-js-express.html\">this tutorial</a>.)\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm init\nnpm install express --save\nnode server.js</pre>\nGo to your browser and check if your&nbsp;web server works on http://localhost:3000.\n<h5>Setup the MQTT broker Mosquitto</h5>\nWhy MQTT? The protocol is a lightweight publish/subscribe messaging transport solution which is very popular in the IoT field. We will use a MQTT broker as the control center to receive raw sensor data from our&nbsp;<em>rtl_433</em> program, we installed in the previous chapter and forward them to our web server. Mosquitto is a common MQTT broker and is installed and tested on or Raspberry Pi with\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt install -y mosquitto mosquitto-clients\nmosquitto -v</pre>\nThe broker will be accessable to clients on mqtt://localhost:1883.\n<h5>Setup a bash script that pipes received data to Mosquitto</h5>\nThe Raspberry Pi now gets the important task to not only start <em>rtl_433</em> to decode traffic from devices that are broadcasting on 433.9 MHz manually, but to start this task on every reboot automatically. For that, we create a cronjob with the tool <em>crontab</em>, which should be installed on&nbsp;our&nbsp;system.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">crontab -h</pre>\nOn your Raspberry Pi create a new file \"tsh_raspberry_script.sh\" (or whatever you want) in your <em>pi</em>&nbsp;home folder and make it executable from your terminal:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">chmod +x tsh_raspberry_script.sh</pre>\nAfter that, open the file in a text editor and add the following bash script. It will start<em> rtl_433</em> and pipe the output in JSON format to Mosquitto, where it will be published in the topic \"home/rtl_344\". Don\'t forget to close and safe the file.\n<pre class=\"EnlighterJSRAW\">#!bin/bash\n/usr/local/bin/rtl_433 -F json -M utc | mosquitto_pub -t home/rtl_433 -l</pre>\nNow we can set up a new cronjob which will execute the shell script on every Raspberry Pi reboot. Open up a terminal:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"># edit crontabs of user \"pi\"\ncrontab -e\n\n# a text editor will open and load all existing cronjobs, add\n@reboot sleep 60 &amp;&amp;&nbsp;sh&nbsp;/home/pi/tsh_raspberry_script.sh</pre>\n<h5>Build a simple database with lowdb and Node.js</h5>\nIn development mode a very basic database will suffice our requirements, that\'s why I used <em>lowdb </em><a href=\"https://github.com/typicode/lowdb\">(Github link)</a> to store the sensor data on localhost first. Lowdb is based on a JSON file in&nbsp;our project folder. If you would like to take an eye on performance and persistence later I have built a solution with PostgreSQL too, but this is <a href=\"http://rike.dev/texts/2019/02/11/setup-postgresql-database-and-api-for-node-js\">another story</a>.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm&nbsp;install&nbsp;lowdb&nbsp;--save</pre>\nIn your <em>server.js</em> add some code.&nbsp;Set some defaults first, which are required if your JSON file (mine is \"db.json\") is empty at first.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const low = require(\'lowdb\');\nconst FileSync = require(\'lowdb/adapters/FileSync\')\nconst adapter = new FileSync(\'db.json\');\nconst db = low(adapter);\n\ndb.defaults({ posts: [] })\n .write()</pre>\nThat\'s all. Now we can write into, edit and delete data within our database.\n<h5>Consume MQTT sensor data and save it to the database</h5>\nWe go back to our Node.js application and install the MQTT client <em>MQTT.js</em> (<a href=\"https://github.com/mqttjs/MQTT.js\">Github link</a>) to be able to consume data that is available via Mosquitto.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm&nbsp;install&nbsp;mqtt&nbsp;--save</pre>\nWith the newly installed MQTT client we are able to receive all the messages that the MQTT broker delivers over its API on mqtt://localhost:1883. We now filter them to only process and store \"correct\" data sets (remember: our RTL-SDR receiver found signals from multiple IoT gagdets we are not interested in).\n\nMy setup included some buffer, temperature and date parsing, basic verifying and filtering regarding incoming messages before I stored the correct Javascript Objects into the lowdb. Continue working on your <em>server.js</em>:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const mqtt = require(\'mqtt\');\nconst client = mqtt.connect(mqtt://localhost:1883);\n\nfahrenheitToCelsius = (fahrenheit) =&gt; {\n var fTempVal = parseFloat(fahrenheit);\n var cTempVal = (fTempVal - 32) * (5 / 9);\n return (Math.round(cTempVal * 100) / 100);\n}\n\nclient.on(\'message\', function (topic, message) {\n // message is buffer\n var stringBuf = message &amp;&amp; message.toString(\'utf-8\')\n try {\n   var json = JSON.parse(stringBuf);\n   // console.log(json);\n   if (json.model === \'inFactory sensor\') {\n     if (json.id === 91 || json.id === 32) {\n     // catch my specific sensor model\n       if (json.temperature_F &amp;&amp; json.humidity) {\n       // add data to lowdb\n       const time = moment.utc(json.time).tz(\"Europe/Berlin\");\n       const formattedTime = time.format(\'YYYY-MM-DD HH:mm:ss\');\n       console.log(\'write post\');\n       db.get(\'posts\')\n       .push({ id: uuid.v1(), room: json.id, temp: fahrenheitToCelsius(json.temperature_F), humidity: json.humidity, time: formattedTime }).write()\n       }\n     }\n   }\n } catch (e) {\n   console.error(stringBuf);\n   }\n})</pre>\nThat\'s it. Whenever the MQTT client receives sensor data it will store it in our database accordingly. You can check that in your \"db.json\" file in your project folder, which grows bigger and bigger during runtime. It won\'t delete itself on backend restart!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\n \"posts\": [\n {\n \"id\": \"c107fc70-1f33-11e9-9b95-fbfea27c8046\",\n \"room\": 32,\n \"temp\": 22.89,\n \"humidity\": 30,\n \"time\": \"2019-01-23 18:24:34\"\n },\n {\n \"id\": \"6607f9f0-1f34-11e9-9b95-fbfea27c8046\",\n \"room\": 32,\n \"temp\": 22.89,\n \"humidity\": 30,\n \"time\": \"2019-01-23 18:29:11\"\n },\n {\n \"id\": \"16492190-1f35-11e9-9b95-fbfea27c8046\",\n \"room\": 91,\n \"temp\": 22.72,\n \"humidity\": 35,\n \"time\": \"2019-01-23 18:34:07\"\n }\n]\n}</pre>\n<h5>Provide sensor data via REST API</h5>\nNow that we have clean data in our lowdb we might want to provide them via a REST API to be consumable for a frontend or multiple frontends (smartphone app, web app, ..). We already deployed a local web server running on Node.js and Express.js and can very simply add an endpoint the provides the database data with the following code. Add it to your <em>server.js</em>!\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/api\', (req, res) =&gt; {\n res.send(db.get(\'posts\'));\n});</pre>\nYes, that\'s it. Check if it is working on http://localhost:3000/api or with your favourite REST client (e.g. Postman).\n\n<hr>\n\n[blue_box]Proceed to the third part of the tutorial \"<a href=\"https://rike.dev/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application/\">Display smart home data&nbsp;in a Quasar, Vue.js and Chart.js powered web application</a>\".[/blue_box]','Get and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend application','','inherit','closed','closed','','33-revision-v1','','','2019-04-12 10:14:41','2019-04-12 08:14:41','',33,'https://rike.dev/2019/04/12/33-revision-v1/',0,'revision','',0),(116,1,'2019-04-20 09:31:34','2019-04-20 07:31:34','This small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n<!--more--> [grey_box]This tutorial is part of the series \"<a href=\"https://rike.dev/2019/02/11/smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js/\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"[/grey_box] At first we create a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with <code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code> and check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.\r\n','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','publish','open','open','','get-a-csv-download-out-of-postgresql-or-lowdb-database-on-node-js','','','2019-05-10 15:17:44','2019-05-10 13:17:44','',0,'https://rike.dev/?p=116',0,'post','',0),(117,1,'2019-04-20 08:13:38','2019-04-20 06:13:38','This small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\n\nAt first we set up a basic Node.js application:','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 08:13:38','2019-04-20 06:13:38','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(118,1,'2019-04-20 08:36:00','2019-04-20 06:36:00','This small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\n\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your links on http://localhost:3000/postgres-download and <a href=\"http://localhost:3000/\">http://localhost:3000/</a>lowdb-download.\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 08:36:00','2019-04-20 06:36:00','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(119,1,'2019-04-20 08:59:24','2019-04-20 06:59:24','This small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 08:59:24','2019-04-20 06:59:24','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(121,1,'2019-04-20 09:00:52','2019-04-20 07:00:52','&nbsp;\r\n\r\n&nbsp;\r\n\r\nThis small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 09:00:52','2019-04-20 07:00:52','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(122,1,'2019-04-20 09:03:07','2019-04-20 07:03:07','','db-download','','inherit','open','closed','','db-download','','','2019-04-20 09:03:07','2019-04-20 07:03:07','',116,'https://rike.dev/wp-content/uploads/2019/04/db-download.mp4',0,'attachment','video/mp4',0),(123,1,'2019-04-20 09:04:01','2019-04-20 07:04:01','[vidbg container=”body” mp4=”#” webm=”#” poster=”#” muted=”true” loop=”true” overlay=”false” overlay_color=”#000″ overlay_alpha=”0.3″]\r\n\r\nThis small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 09:04:01','2019-04-20 07:04:01','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(124,1,'2019-04-20 09:06:02','2019-04-20 07:06:02','<div id=\"video-box\"></div>\r\n\r\nThis small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 09:06:02','2019-04-20 07:06:02','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(125,1,'2019-04-20 09:06:46','2019-04-20 07:06:46','<div class=\"video-box\"></div>\r\n\r\nThis small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 09:06:46','2019-04-20 07:06:46','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(126,1,'2019-04-20 09:10:09','2019-04-20 07:10:09','<div height=\"500\" class=\"video-box\"></div>\r\nThis small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 09:10:09','2019-04-20 07:10:09','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(127,1,'2019-04-20 09:10:49','2019-04-20 07:10:49','<div height=\"500px\" class=\"video-box\"></div>\r\nThis small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 09:10:49','2019-04-20 07:10:49','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(128,1,'2019-04-20 09:11:27','2019-04-20 07:11:27','<div style=\"height:500px\" class=\"video-box\"></div>\r\nThis small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 09:11:27','2019-04-20 07:11:27','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(129,1,'2019-04-20 09:11:49','2019-04-20 07:11:49','<div style=\"height:600px\" class=\"video-box\"></div>\r\nThis small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 09:11:49','2019-04-20 07:11:49','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(130,1,'2019-04-20 09:16:12','2019-04-20 07:16:12','<div style=\"height:600px; width: 100%\" class=\"video-box\"></div>\r\nThis small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 09:16:12','2019-04-20 07:16:12','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(131,1,'2019-04-20 09:17:36','2019-04-20 07:17:36','<p style=\"height:600px; width: 100%\" class=\"video-box\"></p>\r\nThis small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 09:17:36','2019-04-20 07:17:36','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(133,1,'2019-04-20 09:24:12','2019-04-20 07:24:12','','download-db','','inherit','open','closed','','download-db','','','2019-04-20 09:24:12','2019-04-20 07:24:12','',116,'https://rike.dev/wp-content/uploads/2019/04/download-db.png',0,'attachment','image/png',0),(134,1,'2019-04-20 09:32:06','2019-04-20 07:32:06','This small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 09:32:06','2019-04-20 07:32:06','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(135,1,'2019-05-10 15:18:52','2019-05-10 13:18:52','This small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n<!--more--> [grey_box]This tutorial is part of the series \"<a href=\"https://rike.dev/2019/02/11/smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js/\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"[/grey_box] \r\nAt first we create a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with <code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code> and check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.\r\n','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-autosave-v1','','','2019-05-10 15:18:52','2019-05-10 13:18:52','',116,'https://rike.dev/2019/04/20/116-autosave-v1/',0,'revision','',0),(136,1,'2019-04-20 09:33:02','2019-04-20 07:33:02','This small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 09:33:02','2019-04-20 07:33:02','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(137,1,'2019-04-20 09:34:05','2019-04-20 07:34:05','<div class=\".video-box\" style=\"height: 100%\"></div>\r\n\r\nThis small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 09:34:05','2019-04-20 07:34:05','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(138,1,'2019-04-20 09:37:21','2019-04-20 07:37:21','<div class=\"video-box\" style=\"width:100%; height:500px;\"></div>\r\nThis small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 09:37:21','2019-04-20 07:37:21','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(139,1,'2019-04-20 09:37:46','2019-04-20 07:37:46','<div class=\"video-box\" style=\"width:100%; margin-bottom: 20px; height:500px;\"></div>\r\nThis small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 09:37:46','2019-04-20 07:37:46','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(140,1,'2019-04-20 09:38:12','2019-04-20 07:38:12','<div class=\"video-box\" style=\"width: 100%; height: 500px;\"></div>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\nThis small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 09:38:12','2019-04-20 07:38:12','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(141,1,'2019-04-20 09:38:32','2019-04-20 07:38:32','<div class=\"video-box\" style=\"width: 100%; height: 500px;\"></div>\r\n&nbsp;\r\nThis small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 09:38:32','2019-04-20 07:38:32','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(142,1,'2019-04-20 10:57:55','2019-04-20 08:57:55','This small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 10:57:55','2019-04-20 08:57:55','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(143,1,'2019-04-20 11:00:03','2019-04-20 09:00:03','[grey_box] <strong>TLDR;</strong> This three-part tutorial explains how to setup a basic smart home web app tracking sensor data for temperature and humidity with a Raspberry Pi and web technologies like Mosquitto, Node.js, Express.js, Vue.js, Quasar and Chart.js.[/grey_box]\r\n\r\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/6.png\"><img class=\" imagedropshadow aligncenter wp-image-45 size-large\" src=\"https://rike.dev/wp-content/uploads/2019/02/6-1024x667.png\" alt=\"Tiny Smart Home\" width=\"650\" height=\"423\" /></a>\r\n\r\nSo I went on maternity this January and came up with an idea about a nice little project to do in my free time that went a little further from my usual Javascript front- und backend projects I usually do at work. I have a Raspberry Pi 3 at home I bought over a year ago and never did something useful with so I decided I wanted to track temperatures and humidity in our child\'s room and bedroom to a have an idea about a good indoor climate. In the end I wanted to finalize a cloud-based dashboard web app which provides the incoming sensor data in real time and available everywhere and everytime.\r\n\r\n<em>I wrote this three-part tutorial to track my experiences, tech choices and suggestions for you to follow and came up with a solution that comes with an easy hardware setup and some popular (and worth to learn if you are not already familiar with) web development technologies, including Node.js, Mosquitto and Vue.js.</em>\r\n\r\nThe basic three parts will allow you to run a web application on your local machine. Nevertheless I added some more features including persistent database storing and the deployment in the cloud with Heroku. You will find these tutorials at the end of this page.\r\n[green_box]<strong>The code base is stored on <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github</a>!</strong>[/green_box]\r\n\r\n<!--more-->\r\n<h5><a href=\"https://rike.dev/2019/02/11/hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1 . Choose and install hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity</a></h5>\r\nI did some research on how to build basic weather stations and home automation systems with a Raspberry Pi but they were mostly no wireless solutions or they came up with too much IoT hacking/soldering and especially required a lot of electrical knowledge I do not have. The core problem I figured out was that many tutorials wanted me to build a remote sensor gagdet with radio functionality and sleep mode (e.g. with an Arduino) all on my own. So the question was: Is there a better and easier alternative to such an all self made solution and what about the receiving hardware on the Raspberry Pi?\r\n\r\nFortunately, there exists an easier alternative I will show you in this part of the tutorial which deals with slightly more expensive IoT gagdets but which enabled me to set up my smart home hardware in a smooth but nonetheless instructive way.\r\n<h5><a href=\"https://rike.dev/2019/02/07/smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application/\">2. Get and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a></h5>\r\nThe main problem in this part was how to set up a stable and endlessly running task on my Raspberry Pi to continuously receive the (correct!) sensor data. Secondly I wanted it to somehow process and transfer it to a backend/microservice/middleware, which then would provide an upcoming frontend with JSON data to display. MQTT is the IoT protocol to go with but how to set it up? How can a MQTT broker like Mosquitto work with a Node.js backend properly?\r\n<h5><a href=\"https://rike.dev/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application/\">3. Display smart home data in a Quasar, Vue.js and Chart.js powered web application</a></h5>\r\nThis was somehow the easiest part, because I mainly work as a frontend engineer and know how to implement dashboard-like web app solutions in combination with backend REST API services and the like. I challenged myself with an insight into Vue.js, since I mainly used React as a SPA framework before. In search of a nice UI library I discovered Quasar, which provides a very useful CLI and UI components so that there was no need to come up with an own CSS by myself.\r\n\r\n<hr />\r\n\r\n<h5> Add more features?</h5>\r\nI wrote some more or less standalone tutorials, which will help you to improve your existent application with some more capacities.\r\n<ol>\r\n 	<li>Deploy your smart home application up to the cloud on Heroku <em>(coming soon)</em></li>\r\n 	<li>\r\n<div>Build a simple session-based authentication with Node.js and Vue.js <em>(coming soon)</em></div></li>\r\n 	<li>\r\n<div>Setup PostgreSQL database and API for Node.js <em>(coming soon)</em></div></li>\r\n 	<li><a href=\"https://rike.dev/2019/04/20/get-a-csv-download-out-of-postgresql-or-lowdb-database-on-node-js/\">Get a CSV download out of PostgreSQL or lowdb database on Node.js</a></li>\r\n</ol>','How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js','','inherit','closed','closed','','43-revision-v1','','','2019-04-20 11:00:03','2019-04-20 09:00:03','',43,'https://rike.dev/2019/04/20/43-revision-v1/',0,'revision','',0),(144,1,'2019-04-20 11:01:21','2019-04-20 09:01:21','[grey_box] <strong>TLDR;</strong> This three-part tutorial explains how to setup a basic smart home web app tracking sensor data for temperature and humidity with a Raspberry Pi and web technologies like Mosquitto, Node.js, Express.js, Vue.js, Quasar and Chart.js.[/grey_box]\r\n\r\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/6.png\"><img class=\" imagedropshadow aligncenter wp-image-45 size-large\" src=\"https://rike.dev/wp-content/uploads/2019/02/6-1024x667.png\" alt=\"Tiny Smart Home\" width=\"650\" height=\"423\" /></a>\r\n\r\nSo I went on maternity this January and came up with an idea about a nice little project to do in my free time that went a little further from my usual Javascript front- und backend projects I usually do at work. I have a Raspberry Pi 3 at home I bought over a year ago and never did something useful with so I decided I wanted to track temperatures and humidity in our child\'s room and bedroom to a have an idea about a good indoor climate. In the end I wanted to finalize a cloud-based dashboard web app which provides the incoming sensor data in real time and available everywhere and everytime.\r\n\r\n<em>I wrote this three-part tutorial to track my experiences, tech choices and suggestions for you to follow and came up with a solution that comes with an easy hardware setup and some popular (and worth to learn if you are not already familiar with) web development technologies, including Node.js, Mosquitto and Vue.js.</em>\r\n\r\nThe basic three parts will allow you to run a web application on your local machine. Nevertheless I added some more features including persistent database storing and the deployment in the cloud with Heroku. You will find these tutorials at the end of this page.\r\n[green_box]<strong>The code base is stored on <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github</a>!</strong>[/green_box]\r\n\r\n<!--more-->\r\n<h5><a href=\"https://rike.dev/2019/02/11/hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1 . Choose and install hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity</a></h5>\r\nI did some research on how to build basic weather stations and home automation systems with a Raspberry Pi but they were mostly no wireless solutions or they came up with too much IoT hacking/soldering and especially required a lot of electrical knowledge I do not have. The core problem I figured out was that many tutorials wanted me to build a remote sensor gagdet with radio functionality and sleep mode (e.g. with an Arduino) all on my own. So the question was: Is there a better and easier alternative to such an all self made solution and what about the receiving hardware on the Raspberry Pi?\r\n\r\nFortunately, there exists an easier alternative I will show you in this part of the tutorial which deals with slightly more expensive IoT gagdets but which enabled me to set up my smart home hardware in a smooth but nonetheless instructive way.\r\n<h5><a href=\"https://rike.dev/2019/02/07/smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application/\">2. Get and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a></h5>\r\nThe main problem in this part was how to set up a stable and endlessly running task on my Raspberry Pi to continuously receive the (correct!) sensor data. Secondly I wanted it to somehow process and transfer it to a backend/microservice/middleware, which then would provide an upcoming frontend with JSON data to display. MQTT is the IoT protocol to go with but how to set it up? How can a MQTT broker like Mosquitto work with a Node.js backend properly?\r\n<h5><a href=\"https://rike.dev/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application/\">3. Display smart home data in a Quasar, Vue.js and Chart.js powered web application</a></h5>\r\nThis was somehow the easiest part, because I mainly work as a frontend engineer and know how to implement dashboard-like web app solutions in combination with backend REST API services and the like. I challenged myself with an insight into Vue.js, since I mainly used React as a SPA framework before. In search of a nice UI library I discovered Quasar, which provides a very useful CLI and UI components so that there was no need to come up with an own CSS by myself.\r\n\r\n<hr />\r\n\r\n<h5> Add more features?</h5>\r\nI wrote some more or less standalone tutorials, which will help you to improve your existent application with some more capacities.\r\n<ol>\r\n 	<li>Deploy your smart home application up to the cloud on Heroku <em>(coming soon)</em></li>\r\n 	<li>\r\n<div>Build a simple session-based authentication with Node.js and Vue.js <em>(coming soon)</em></div></li>\r\n 	<li>\r\n<div>Setup PostgreSQL database and API for Node.js <em>(coming soon)</em></div></li>\r\n 	<li><a style=\"color:#e44249\" href=\"https://rike.dev/2019/04/20/get-a-csv-download-out-of-postgresql-or-lowdb-database-on-node-js/\">Get a CSV download out of PostgreSQL or lowdb database on Node.js</a></li>\r\n</ol>','How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js','','inherit','closed','closed','','43-revision-v1','','','2019-04-20 11:01:21','2019-04-20 09:01:21','',43,'https://rike.dev/2019/04/20/43-revision-v1/',0,'revision','',0),(145,1,'2019-04-20 11:02:09','2019-04-20 09:02:09','This small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\n<!--more-->\r\n\r\nAt first we set up a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 11:02:09','2019-04-20 09:02:09','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(146,1,'2019-04-20 11:10:26','2019-04-20 09:10:26','<!-- wp:paragraph -->\r\n<p><strong>Fan-Sein im Jahr 1990?</strong> Das bedeutete akribisch geführte Fan-Sammlungen aus Postern, Merchandising und liebevoll gestaltete Ordner und Hefte mit selbst recherchierten und eingeklebten Texten und Bildern. Fan-Sein ab 2000 dagegen eröffnete dank des gerade in den Pionierjahren befindlichen Internets eine neue und sehr kreative Form der Fan-Vernetzung.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:more -->\r\n<p><!--more--></p>\r\n<!-- /wp:more -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Wer als Teenager ab 2000 auf der Suche nach Seelenverwandten und Infos über seine Idole im Web unterwegs war, stieß unweigerlich auf zahllose Fan-Communities jeder Art. Heißgeliebte Portale für Fanfiction (<em>fanfiction.net</em>, seit 1998), Fanart (<em>deviantart</em>, seit 2000) oder auch Fansites (<em>thefanlistings.org</em>, seit 2001) wurden alle um die Jahrtausendwende gegründet. Die offiziellen Fanpages konnten das Bedürfnis nach Information und Entertainment nämlich kaum stillen.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:image {\"id\":596,\"align\":\"left\"} -->\r\n<div class=\"wp-block-image\">\r\n<figure class=\"alignleft\"><a href=\"http://www.analoga.org/wp-content/uploads/2014/08/Layout1.jpg\"><img class=\"wp-image-596\" src=\"http://www.analoga.org/wp-content/uploads/2014/08/Layout1.jpg\" alt=\"Eine alte Harry-Potter-Fanseite\" /></a>\r\n<figcaption>Screenshot meiner ältesten Harry-Potter-Fanseite: Rundum schön mit Frames, Buttons und durchlaufender Begrüßung (um 2001).</figcaption>\r\n</figure>\r\n</div>\r\n<!-- /wp:image -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Deshalb entstand zu dieser Zeit ein riesiges Angebot privat geführter kleiner und hochspezialisierter Fanpages, die sich in Kreativität und Leidenschaftlichkeit gegenseitig überboten. Die neuen technischen Möglichkeiten des Internets beflügelten alle, die schon alt genug waren, sich eingehender mit ihrem Computer zu beschäftigen und noch jung genug, dafür sehr viel Zeit und Liebe aufzubringen. Die jungen Kreativen wurden im frühen Web, das nicht mehr 1.0, aber auch noch nicht 2.0 war, von Konsument_innen zu Produzent_innen und ihr Fan-Sein war ihr Katalysator: Es existierten Fansites für Sänger_innen, Bands und Schauspieler_innen, für Bücher, Filme, Games, Animes, Manga und deren Protagonist_innen (\"Fan-Shrines\"), das Angebot umfasste auch Clan-Pages, (RPG-) Foren und ganz eigene Universen, wie z. B. die unzähligen Online-\"Zauberschulen\", die der Harry-Potter-Fankult hervorgebracht hatte.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Wer waren die Menschen hinter diesen Websites? Diese Community aus jungen Designer_innen und Webprogrammierer_innen entstand aus dem einfachen Wunsch heraus, dem eigenen Fan-Sein Ausdruck zu verleihen: Wer etwas auf sich hielt, bastelte alles selbst. Die ersten Freehoster, der WYSIWYG-Phase 5-HTML-Editor, ein FTP-Client und irgendeine illegal gesaugte Bildbearbeitungssoftware machten es möglich. Noch heute kommen manchen Webmastern von damals Tränen der Nostalgie bei der bloßen Erwähnung von <em>geocities</em>. Baukasten-Systeme wie <em>beepworld</em> hingegen waren keine Option.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:image {\"id\":606,\"align\":\"left\"} -->\r\n<div class=\"wp-block-image\">\r\n<figure class=\"alignleft\"><a href=\"http://www.analoga.org/wp-content/uploads/2014/08/kamikaze.jpg\"><img class=\"wp-image-606\" src=\"http://www.analoga.org/wp-content/uploads/2014/08/kamikaze.jpg\" alt=\"Grafik aus Manga &amp; Anime\" /></a>\r\n<figcaption>Outputstark: Die GFX-Szene mit Manga &amp; Anime-Vorlieben</figcaption>\r\n</figure>\r\n</div>\r\n<!-- /wp:image -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Für manche nahm der kreative Output kein Ende. Ihre Produktivität, was Coding und Design anging, überstieg ihren eigenen Bedarf bei Weitem. Daraus entstand die GFX- (\"graphics\"-) Szene, blutjunge Menschen, die Grafiken, Code-Schnipsel, Tutorials und komplette Muster-Homepages für andere bereit stellten - und zwar kostenlos.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Besonders outputstark war aus meiner damaligen Sicht in diesem Bereich die Anime-/Mangaszene. Geschätzt hunderte Ableger entstanden aus einigen großen, fast schon professional arbeitenden Portalen. Ich war 14 Jahre alt, als ich Mitglied bei <em>www.crystal-graphics.de</em> wurde - meine Mitstreiterinnen, und es handelte sich in der Tat um ein rein weibliches Team - waren im selben Alter. Wir waren unsere Vorbilder, lernten voneinander, wuchsen gemeinsam. Das Portal für \"free graphics\" arbeitete mit eigens gecodetem passwortgeschützten Mitgliederbereich und Content-Management-System. In der Community entwickelten sich eigene Design-Standards (\"Table-\", \"DIV-\" oder \"Pop-Up-Layouts\" und ein Vokabular für Homepage-Elemente (\"Bishies\", \"Splashes\", \"Brushes\", \"(Cyber-)Stamps\", \"Awards\" ..), das heute kurz davor ist, in Vergessenheit zu geraten.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:image {\"id\":604,\"align\":\"center\"} -->\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter\"><a href=\"http://www.analoga.org/wp-content/uploads/2014/08/layou5.jpg\"><img class=\"wp-image-604\" src=\"http://www.analoga.org/wp-content/uploads/2014/08/layou5.jpg\" alt=\"Anime GFX Layout\" /></a>\r\n<figcaption>Ein typisches Anime-GFX Layout (um 2003)</figcaption>\r\n</figure>\r\n</div>\r\n<!-- /wp:image -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Also was ist es, was bleibt? Heute vernetzen sich Jugendliche und Fandoms eher über die wesentlich komfortableren Sozialen Medien, die zwar viel Medienkompetenz, aber weniger technisches Know-How abverlangen. Jeder, der seinen Helden ein digitales Denkmal setzen und eine eigene private Website aufbauen möchte, hat mit Wordpress, Joomla und anderer toller Open-Source-Software und kostenlosen Themes schnell und einfach die Gelegenheit dazu. Die Fan- und GFX-Seiten von damals sind fast obsolet geworden und ihre Betreiber_innen sind heute erwachsene Frauen und Männer, die sicher nicht selten ihr Hobby zum Beruf machten.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><em>Leider konnte ich nach über zehn Jahren niemandem aus dem alten Crystal-Graphics-Team erreichen. Nur zu gern würde ich andere (eure!) Geek-Geschichten von damals hören, egal in welchem Fandom ihr zu Hause wart, ob mit oder ohne eigener Homepage. Es gibt sicher viel mehr zu erzählen, als das <a href=\"https://web.archive.org/web/*/http://www.crystal-graphics.de/\" target=\"_blank\" rel=\"noreferrer noopener\">Internet Archive</a> jemals dokumentieren könnte.</em></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><em> ♥ Für aktuelle Infos rund um die Szene ist </em><em><a href=\"http://pinkpearlinfo.blogspot.de\" target=\"_blank\" rel=\"noreferrer noopener\">Pinkpearlinfo</a> eine gute Anlaufstelle. Das Blog gehört zu <a href=\"http://www.thepinkpearl.de/\" target=\"_blank\" rel=\"noreferrer noopener\">Pinkpearl</a>, einer Anima-Grafik-Seite, die noch rege betrieben wird.<br /></em></p>\r\n<!-- /wp:paragraph -->','Digitale Fankultur: Wer das Web um 2000 leidenschaftlich mitgestaltete','','inherit','closed','closed','','28-revision-v1','','','2019-04-20 11:10:26','2019-04-20 09:10:26','',28,'https://rike.dev/2019/04/20/28-revision-v1/',0,'revision','',0),(147,1,'2019-04-20 11:18:10','2019-04-20 09:18:10','<!-- wp:paragraph -->\r\n<p><em>Ich fürchte, vielen Menschen ist nicht bewusst, welche überraschenden Produkte der Print-Journalismus noch immer hervorbringt. Dem kann nicht schnell genug Abhilfe verschafft werden: Es folgen sechs einfallsreiche Zeitschriftentitel, die aufgrund ihrer Spezifität oder begrenzten Verbreitung noch nicht zu dem Ruhm gekommen sind, der ihnen zusteht.</em></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:more -->\r\n<p><!--more--></p>\r\n<!-- /wp:more -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Der Schädelspalter</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>\"Was soll ich in New York - ich war schon zweimal in Hannover.\" Arno Schmidt fand einst wärmende Wort für diese verkannte deutsche Mittelgroßstadt. Dass dort auch Schädel gespalten werden, hat er allerdings verschwiegen. Der martialische Titel gehört zu einem bunten Veranstaltungsmagazin. <a href=\"http://www.schaedelspalter.de\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.schaedelspalter.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Laber-Zeitung</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Die \"Allgemeine Laber-Zeitung\" kann leider wenig für ihren Namen. Ein Schenkelklopfer ist dieser trotzdem, benannt wurde das Blatt nach der \"Großen Laber\", einem Nebenfluss der Donau. <a href=\"http://www.idowa.de/zeitung/allgemeine-laber-zeitung\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.idowa.de/zeitung/allgemeine-laber-zeitung</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Pillerseebote</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><strong> «</strong>\"Pillern\" ist ein österreichischer Mundartausdruck, der ein Phänomen beschreibt, das meist im Frühjahr oder bei Unwettern auftritt, wo ein See anfängt eigentümlich zu brausen oder eben zu \"pillern\".<strong>»</strong> ( <a href=\"http://de.wikipedia.org/wiki/Pillersee\" target=\"_blank\" rel=\"noreferrer noopener\">Wikipedia</a>) Hieraus entstand der Name eines Gebirgsees in den nördlichen Kalkalpen und daran angelehnt der poetische Name des örtlichen Anzeigenblatts. <a href=\"http://www.ersi.at/zeitungen/pibo\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.ersi.at/zeitungen/pibo</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Gute Pillen Schlechte Pillen</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Nein, das ist kein Magazin, das in der örtlichen Drogenberatung ausliegt. Phonetisch ein naher Verwandter des \"Pillerseeboten\" richtet sich diese modern verpackte Special-Interest-Zeitschrift an pharmazeutisch Interessierte. Ob bei der Gründung eine bekannte deutsche Vorabendserie Pate stand, ist leider nicht bekannt.<a href=\"http://www.gutepillen-schlechtepillen.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.gutepillen-schlechtepillen.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Gour-med</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Überraschend groß ist der Markt für Zeitschriften, die eigentlich jeden interessieren könnten, aber sich trotzdem nur an eine Elite-Zielgruppe richten. Dabei heraus kommen kann dann schon mal die Wortschöpfung \"Gour-med\" - der Name einer Zeitschrift für die kulinarischen Begierden von Ärzt_innen. <a href=\"http://www.gour-med.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.gour-med.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3>Der Bauschaden</h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Technische Fachzeitschriften brillieren häufig durch so prägnante, wie unumständliche Titel wie \"Der Plastverarbeiter\" oder \"Der fortschrittliche Landwirt\". Hier zählen schließlich noch die Inhalte und nicht die Verpackung! Herausragend präzise benannt ist meiner Meinung nach die \"Fachzeitschrift zur Beurteilung, Sanierung und Vermeidung von Bauschäden\" - der Name ist Programm. Hier werden Probleme noch angepackt.<a href=\"http://www.derbauschaden.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.derbauschaden.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Die Rosette</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Ein Regensburger Pfarrbrief heißt \"Die Rosette\". Keine Pointe. <a href=\"http://www.wolfgangskirche-regensburg.de/aktuelles/pfarrbrief/archiv-der-rosette.html\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.wolfgangskirche-regensburg.de/</a></p>\r\n<!-- /wp:paragraph -->','\"Der Schädelspalter\" - eine besondere Auswahl deutscher Zeitschriftentitel','','inherit','closed','closed','','26-revision-v1','','','2019-04-20 11:18:10','2019-04-20 09:18:10','',26,'https://rike.dev/2019/04/20/26-revision-v1/',0,'revision','',0),(148,1,'2019-04-20 11:19:10','2019-04-20 09:19:10','<!-- wp:paragraph -->\r\n<p><em>Ich fürchte, vielen Menschen ist nicht bewusst, welche überraschenden Produkte der Print-Journalismus noch immer hervorbringt. Dem kann nicht schnell genug Abhilfe verschafft werden: Es folgen sechs einfallsreiche Zeitschriftentitel, die aufgrund ihrer Spezifität oder begrenzten Verbreitung noch nicht zu dem Ruhm gekommen sind, der ihnen zusteht.</em></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:more -->\r\n<p><!--more--></p>\r\n<!-- /wp:more -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Der Schädelspalter</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>\"Was soll ich in New York - ich war schon zweimal in Hannover.\" Arno Schmidt fand einst wärmende Wort für diese verkannte deutsche Mittelgroßstadt. Dass dort auch Schädel gespalten werden, hat er allerdings verschwiegen. Der martialische Titel gehört zu einem bunten Veranstaltungsmagazin. <a href=\"http://www.schaedelspalter.de\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.schaedelspalter.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Laber-Zeitung</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Die \"Allgemeine Laber-Zeitung\" kann leider wenig für ihren Namen. Ein Schenkelklopfer ist dieser trotzdem, benannt wurde das Blatt nach der \"Großen Laber\", einem Nebenfluss der Donau. <a href=\"http://www.idowa.de/zeitung/allgemeine-laber-zeitung\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.idowa.de/zeitung/allgemeine-laber-zeitung</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Pillerseebote</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><strong> «</strong>\"Pillern\" ist ein österreichischer Mundartausdruck, der ein Phänomen beschreibt, das meist im Frühjahr oder bei Unwettern auftritt, wo ein See anfängt eigentümlich zu brausen oder eben zu \"pillern\".<strong>»</strong> ( <a href=\"http://de.wikipedia.org/wiki/Pillersee\" target=\"_blank\" rel=\"noreferrer noopener\">Wikipedia</a>) Hieraus entstand der Name eines Gebirgsees in den nördlichen Kalkalpen und daran angelehnt der poetische Name des örtlichen Anzeigenblatts. <a href=\"http://www.ersi.at/zeitungen/pibo\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.ersi.at/zeitungen/pibo</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Gute Pillen Schlechte Pillen</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Nein, das ist kein Magazin, das in der örtlichen Drogenberatung ausliegt. Phonetisch ein naher Verwandter des \"Pillerseeboten\" richtet sich diese modern verpackte Special-Interest-Zeitschrift an pharmazeutisch Interessierte. Ob bei der Gründung eine bekannte deutsche Vorabendserie Pate stand, ist leider nicht bekannt.<a href=\"http://www.gutepillen-schlechtepillen.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.gutepillen-schlechtepillen.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Gour-med</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Überraschend groß ist der Markt für Zeitschriften, die eigentlich jeden interessieren könnten, aber sich trotzdem nur an eine Elite-Zielgruppe richten. Dabei heraus kommen kann dann schon mal die Wortschöpfung \"Gour-med\" - der Name einer Zeitschrift für die kulinarischen Begierden von Ärzt_innen. <a href=\"http://www.gour-med.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.gour-med.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3>Der Bauschaden</h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Technische Fachzeitschriften brillieren häufig durch so prägnante, wie unumständliche Titel wie \"Der Plastverarbeiter\" oder \"Der fortschrittliche Landwirt\". Hier zählen schließlich noch die Inhalte und nicht die Verpackung! Herausragend präzise benannt ist meiner Meinung nach die \"Fachzeitschrift zur Beurteilung, Sanierung und Vermeidung von Bauschäden\" - der Name ist Programm. Hier werden Probleme noch angepackt.<a href=\"http://www.derbauschaden.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.derbauschaden.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Die Rosette</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Ein Regensburger Pfarrbrief heißt \"Die Rosette\". Keine Pointe. <a href=\"http://www.wolfgangskirche-regensburg.de/index.php/aktuelles/pfarrbrief/archiv-der-rosette.html\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.wolfgangskirche-regensburg.de/</a></p>\r\n<!-- /wp:paragraph -->','\"Der Schädelspalter\" - eine besondere Auswahl deutscher Zeitschriftentitel','','inherit','closed','closed','','26-revision-v1','','','2019-04-20 11:19:10','2019-04-20 09:19:10','',26,'https://rike.dev/2019/04/20/26-revision-v1/',0,'revision','',0),(149,1,'2019-04-20 11:20:11','2019-04-20 09:20:11','<!-- wp:paragraph -->\r\n<p><em>Ich fürchte, vielen Menschen ist nicht bewusst, welche überraschenden Produkte der Print-Journalismus noch immer hervorbringt. Dem kann nicht schnell genug Abhilfe verschafft werden: Es folgen sechs einfallsreiche Zeitschriftentitel, die aufgrund ihrer Spezifität oder begrenzten Verbreitung noch nicht zu dem Ruhm gekommen sind, der ihnen zusteht.</em></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:more -->\r\n<p><!--more--></p>\r\n<!-- /wp:more -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Der Schädelspalter</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>\"Was soll ich in New York - ich war schon zweimal in Hannover.\" Arno Schmidt fand einst wärmende Wort für diese verkannte deutsche Mittelgroßstadt. Dass dort auch Schädel gespalten werden, hat er allerdings verschwiegen. Der martialische Titel gehört zu einem bunten Veranstaltungsmagazin. <a href=\"http://www.schaedelspalter.de\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.schaedelspalter.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Laber-Zeitung</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Die \"Allgemeine Laber-Zeitung\" kann leider wenig für ihren Namen. Ein Schenkelklopfer ist dieser trotzdem, benannt wurde das Blatt nach der \"Großen Laber\", einem Nebenfluss der Donau. <a href=\"http://www.idowa.de/zeitung/allgemeine-laber-zeitung\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.idowa.de/zeitung/allgemeine-laber-zeitung</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Pillerseebote</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><strong> «</strong>\"Pillern\" ist ein österreichischer Mundartausdruck, der ein Phänomen beschreibt, das meist im Frühjahr oder bei Unwettern auftritt, wo ein See anfängt eigentümlich zu brausen oder eben zu \"pillern\".<strong>»</strong> ( <a href=\"http://de.wikipedia.org/wiki/Pillersee\" target=\"_blank\" rel=\"noreferrer noopener\">Wikipedia</a>) Hieraus entstand der Name eines Gebirgsees in den nördlichen Kalkalpen und daran angelehnt der poetische Name des örtlichen Anzeigenblatts. <a href=\"https://ersi.at/pillerseebote-pibo/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.ersi.at/zeitungen/pibo</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Gute Pillen Schlechte Pillen</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Nein, das ist kein Magazin, das in der örtlichen Drogenberatung ausliegt. Phonetisch ein naher Verwandter des \"Pillerseeboten\" richtet sich diese modern verpackte Special-Interest-Zeitschrift an pharmazeutisch Interessierte. Ob bei der Gründung eine bekannte deutsche Vorabendserie Pate stand, ist leider nicht bekannt.<a href=\"http://www.gutepillen-schlechtepillen.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.gutepillen-schlechtepillen.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Gour-med</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Überraschend groß ist der Markt für Zeitschriften, die eigentlich jeden interessieren könnten, aber sich trotzdem nur an eine Elite-Zielgruppe richten. Dabei heraus kommen kann dann schon mal die Wortschöpfung \"Gour-med\" - der Name einer Zeitschrift für die kulinarischen Begierden von Ärzt_innen. <a href=\"http://www.gour-med.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.gour-med.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3>Der Bauschaden</h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Technische Fachzeitschriften brillieren häufig durch so prägnante, wie unumständliche Titel wie \"Der Plastverarbeiter\" oder \"Der fortschrittliche Landwirt\". Hier zählen schließlich noch die Inhalte und nicht die Verpackung! Herausragend präzise benannt ist meiner Meinung nach die \"Fachzeitschrift zur Beurteilung, Sanierung und Vermeidung von Bauschäden\" - der Name ist Programm. Hier werden Probleme noch angepackt.<a href=\"http://www.derbauschaden.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.derbauschaden.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Die Rosette</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Ein Regensburger Pfarrbrief heißt \"Die Rosette\". Keine Pointe. <a href=\"http://www.wolfgangskirche-regensburg.de/index.php/aktuelles/pfarrbrief/archiv-der-rosette.html\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.wolfgangskirche-regensburg.de/</a></p>\r\n<!-- /wp:paragraph -->','\"Der Schädelspalter\" - eine besondere Auswahl deutscher Zeitschriftentitel','','inherit','closed','closed','','26-revision-v1','','','2019-04-20 11:20:11','2019-04-20 09:20:11','',26,'https://rike.dev/2019/04/20/26-revision-v1/',0,'revision','',0),(150,1,'2019-04-20 11:20:52','2019-04-20 09:20:52','<!-- wp:paragraph -->\r\n<p>Ich fürchte, vielen Menschen ist nicht bewusst, welche überraschenden Produkte der Print-Journalismus noch immer hervorbringt. Dem kann nicht schnell genug Abhilfe verschafft werden: Es folgen sechs einfallsreiche Zeitschriftentitel, die aufgrund ihrer Spezifität oder begrenzten Verbreitung noch nicht zu dem Ruhm gekommen sind, der ihnen zusteht.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:more -->\r\n<p><!--more--></p>\r\n<!-- /wp:more -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Der Schädelspalter</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>\"Was soll ich in New York - ich war schon zweimal in Hannover.\" Arno Schmidt fand einst wärmende Wort für diese verkannte deutsche Mittelgroßstadt. Dass dort auch Schädel gespalten werden, hat er allerdings verschwiegen. Der martialische Titel gehört zu einem bunten Veranstaltungsmagazin. <a href=\"http://www.schaedelspalter.de\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.schaedelspalter.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Laber-Zeitung</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Die \"Allgemeine Laber-Zeitung\" kann leider wenig für ihren Namen. Ein Schenkelklopfer ist dieser trotzdem, benannt wurde das Blatt nach der \"Großen Laber\", einem Nebenfluss der Donau. <a href=\"http://www.idowa.de/zeitung/allgemeine-laber-zeitung\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.idowa.de/zeitung/allgemeine-laber-zeitung</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Pillerseebote</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><strong> «</strong>\"Pillern\" ist ein österreichischer Mundartausdruck, der ein Phänomen beschreibt, das meist im Frühjahr oder bei Unwettern auftritt, wo ein See anfängt eigentümlich zu brausen oder eben zu \"pillern\".<strong>»</strong> ( <a href=\"http://de.wikipedia.org/wiki/Pillersee\" target=\"_blank\" rel=\"noreferrer noopener\">Wikipedia</a>) Hieraus entstand der Name eines Gebirgsees in den nördlichen Kalkalpen und daran angelehnt der poetische Name des örtlichen Anzeigenblatts. <a href=\"https://ersi.at/pillerseebote-pibo/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.ersi.at/zeitungen/pibo</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Gute Pillen Schlechte Pillen</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Nein, das ist kein Magazin, das in der örtlichen Drogenberatung ausliegt. Phonetisch ein naher Verwandter des \"Pillerseeboten\" richtet sich diese modern verpackte Special-Interest-Zeitschrift an pharmazeutisch Interessierte. Ob bei der Gründung eine bekannte deutsche Vorabendserie Pate stand, ist leider nicht bekannt.<a href=\"http://www.gutepillen-schlechtepillen.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.gutepillen-schlechtepillen.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Gour-med</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Überraschend groß ist der Markt für Zeitschriften, die eigentlich jeden interessieren könnten, aber sich trotzdem nur an eine Elite-Zielgruppe richten. Dabei heraus kommen kann dann schon mal die Wortschöpfung \"Gour-med\" - der Name einer Zeitschrift für die kulinarischen Begierden von Ärzt_innen. <a href=\"http://www.gour-med.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.gour-med.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3>Der Bauschaden</h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Technische Fachzeitschriften brillieren häufig durch so prägnante, wie unumständliche Titel wie \"Der Plastverarbeiter\" oder \"Der fortschrittliche Landwirt\". Hier zählen schließlich noch die Inhalte und nicht die Verpackung! Herausragend präzise benannt ist meiner Meinung nach die \"Fachzeitschrift zur Beurteilung, Sanierung und Vermeidung von Bauschäden\" - der Name ist Programm. Hier werden Probleme noch angepackt.<a href=\"http://www.derbauschaden.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.derbauschaden.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Die Rosette</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Ein Regensburger Pfarrbrief heißt \"Die Rosette\". Keine Pointe. <a href=\"http://www.wolfgangskirche-regensburg.de/index.php/aktuelles/pfarrbrief/archiv-der-rosette.html\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.wolfgangskirche-regensburg.de/</a></p>\r\n<!-- /wp:paragraph -->','\"Der Schädelspalter\" - eine besondere Auswahl deutscher Zeitschriftentitel','','inherit','closed','closed','','26-revision-v1','','','2019-04-20 11:20:52','2019-04-20 09:20:52','',26,'https://rike.dev/2019/04/20/26-revision-v1/',0,'revision','',0),(151,1,'2019-04-20 11:21:15','2019-04-20 09:21:15','<!-- wp:paragraph -->\r\n<p>Ich fürchte, vielen Menschen ist nicht bewusst, welche überraschenden Produkte der Print-Journalismus noch immer hervorbringt. Dem kann nicht schnell genug Abhilfe verschafft werden: Es folgen sechs einfallsreiche Zeitschriftentitel, die aufgrund ihrer Spezifität oder begrenzten Verbreitung noch nicht zu dem Ruhm gekommen sind, der ihnen zusteht.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:more -->\r\n<p><!--more--></p>\r\n<!-- /wp:more -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Der Schädelspalter</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>\"Was soll ich in New York - ich war schon zweimal in Hannover.\" Arno Schmidt fand einst wärmende Wort für diese verkannte deutsche Mittelgroßstadt. Dass dort auch Schädel gespalten werden, hat er allerdings verschwiegen. Der martialische Titel gehört zu einem bunten Veranstaltungsmagazin. <a href=\"http://www.schaedelspalter.de\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.schaedelspalter.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Laber-Zeitung</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Die \"Allgemeine Laber-Zeitung\" kann leider wenig für ihren Namen. Ein Schenkelklopfer ist dieser trotzdem, benannt wurde das Blatt nach der \"Großen Laber\", einem Nebenfluss der Donau. <a href=\"http://www.idowa.de/zeitung/allgemeine-laber-zeitung\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.idowa.de/zeitung/allgemeine-laber-zeitung</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Pillerseebote</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><strong> «</strong>\"Pillern\" ist ein österreichischer Mundartausdruck, der ein Phänomen beschreibt, das meist im Frühjahr oder bei Unwettern auftritt, wo ein See anfängt eigentümlich zu brausen oder eben zu \"pillern\".<strong>»</strong> ( <a href=\"http://de.wikipedia.org/wiki/Pillersee\" target=\"_blank\" rel=\"noreferrer noopener\">Wikipedia</a>) Hieraus entstand der Name eines Gebirgsees in den nördlichen Kalkalpen und daran angelehnt der poetische Name des örtlichen Anzeigenblatts. <a href=\"https://ersi.at/pillerseebote-pibo/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.ersi.at/zeitungen/pibo</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Gute Pillen Schlechte Pillen</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Nein, das ist kein Magazin, das in der örtlichen Drogenberatung ausliegt. Phonetisch ein naher Verwandter des \"Pillerseeboten\" richtet sich diese modern verpackte Special-Interest-Zeitschrift an pharmazeutisch Interessierte. Ob bei der Gründung eine bekannte deutsche Vorabendserie Pate stand, ist leider nicht bekannt. <a href=\"http://www.gutepillen-schlechtepillen.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.gutepillen-schlechtepillen.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Gour-med</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Überraschend groß ist der Markt für Zeitschriften, die eigentlich jeden interessieren könnten, aber sich trotzdem nur an eine Elite-Zielgruppe richten. Dabei heraus kommen kann dann schon mal die Wortschöpfung \"Gour-med\" - der Name einer Zeitschrift für die kulinarischen Begierden von Ärzt_innen. <a href=\"http://www.gour-med.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.gour-med.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3>Der Bauschaden</h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Technische Fachzeitschriften brillieren häufig durch so prägnante, wie unumständliche Titel wie \"Der Plastverarbeiter\" oder \"Der fortschrittliche Landwirt\". Hier zählen schließlich noch die Inhalte und nicht die Verpackung! Herausragend präzise benannt ist meiner Meinung nach die \"Fachzeitschrift zur Beurteilung, Sanierung und Vermeidung von Bauschäden\" - der Name ist Programm. Hier werden Probleme noch angepackt. <a href=\"http://www.derbauschaden.de/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.derbauschaden.de/</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3><strong>Die Rosette</strong></h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Ein Regensburger Pfarrbrief heißt \"Die Rosette\". Keine Pointe. <a href=\"http://www.wolfgangskirche-regensburg.de/index.php/aktuelles/pfarrbrief/archiv-der-rosette.html\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.wolfgangskirche-regensburg.de/</a></p>\r\n<!-- /wp:paragraph -->','\"Der Schädelspalter\" - eine besondere Auswahl deutscher Zeitschriftentitel','','inherit','closed','closed','','26-revision-v1','','','2019-04-20 11:21:15','2019-04-20 09:21:15','',26,'https://rike.dev/2019/04/20/26-revision-v1/',0,'revision','',0),(152,1,'2019-04-20 11:51:04','2019-04-20 09:51:04','In this short tutorial we will setup a Node.js application with a connection to a PostgreSQL database and provide data via API endpoint.\r\n\r\n<!--more-->\r\n\r\nAt first, follow the official online documentation on how to install a PostgreSQL database system on your OS: http://www.postgresqltutorial.com/install-postgresql/.\r\n\r\nOn a Linux machine, you might do something like this:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt-get update\r\nsudo apt-get install postgresql postgresql-contrib</pre>\r\nThis installation comes with <em>psql, </em>a terminal-based front-end to PostgreSQL. Access to the (still empty) database system is provided with:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\"> sudo -u postgres psql</pre>\r\nCreate a new database with the name \"tsh\", list all available databases and connect to \"tsh\":\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">postgres=# CREATE DATABASE tsh;\r\npostgres=# \\list\r\npostgres=# \\c tsh</pre>\r\nFrom here you could create tables to store data, but it is also possible to do that from our Node.js application later.\r\n\r\nIf you\'re working on a web application or other software which makes frequent queries you\'ll want to use a connection pool. The easiest and by far most common way to use node-postgres is through a connection pool.','Setup PostgreSQL database and API for Node.js','','inherit','closed','closed','','37-revision-v1','','','2019-04-20 11:51:04','2019-04-20 09:51:04','',37,'https://rike.dev/2019/04/20/37-revision-v1/',0,'revision','',0),(153,1,'2019-04-20 11:53:25','2019-04-20 09:53:25','In this short tutorial we will setup a Node.js application with a connection to a PostgreSQL database and provide data via API endpoint.\r\n\r\n<!--more-->\r\n\r\nAt first, follow the <a href=\"http://www.postgresqltutorial.com/install-postgresql/\">official online documentation</a> on how to install a PostgreSQL database system on your OS. On a Linux machine, you might do something like this:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt-get update\r\nsudo apt-get install postgresql postgresql-contrib</pre>\r\nThis installation comes with <em>psql, </em>a terminal-based front-end to PostgreSQL. Access to the (still empty) database system is provided with:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\"> sudo -u postgres psql</pre>\r\nCreate a new database with the name \"tsh\", list all available databases and connect to \"tsh\":\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">postgres=# CREATE DATABASE tsh;\r\npostgres=# \\list\r\npostgres=# \\c tsh</pre>\r\nFrom here you could create tables to store data, but it is also possible to do that from our Node.js application later.\r\n\r\nIf you\'re working on a web application or other software which makes frequent queries you\'ll want to use a connection pool. The easiest and by far most common way to use node-postgres is through a connection pool.','Setup PostgreSQL database and API for Node.js','','inherit','closed','closed','','37-revision-v1','','','2019-04-20 11:53:25','2019-04-20 09:53:25','',37,'https://rike.dev/2019/04/20/37-revision-v1/',0,'revision','',0),(154,1,'2019-04-20 12:38:48','2019-04-20 10:38:48','In this short tutorial we will setup a Node.js application with a connection to a PostgreSQL database and provide data via API endpoint.\r\n\r\n<!--more-->\r\n\r\nAt first, follow the <a href=\"http://www.postgresqltutorial.com/install-postgresql/\">official online documentation</a> on how to install a PostgreSQL database system on your OS. On a Linux machine, you might do something like this:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt-get update\r\nsudo apt-get install postgresql postgresql-contrib</pre>\r\nThis installation comes with <em>psql, </em>a terminal-based front-end to PostgreSQL. Access to the (still empty) database system is provided with:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\"> sudo -u postgres psql</pre>\r\nCreate a new database with the name \"tsh\", list all available databases and connect to \"tsh\":\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">postgres=# CREATE DATABASE tsh;\r\npostgres=# \\list\r\npostgres=# \\c tsh</pre>\r\nFrom here you could create tables to store data, but it is also possible to do that from our Node.js application later. So here we go. Our Node.js application won\'t do anything more than handle our database requests from a (non-existing) frontend. You can test all API calls with a client like <a href=\"https://www.getpostman.com/\">Postman</a> instead. This is our basic Node.js (with Express.js) boilerplate already including the <a href=\"https://www.npmjs.com/package/pg\">node-postgres library</a>, the propably best client for Node.js. Because we are working on a web application which makes frequent queries we use a connection pool. The easiest and by far most common way to use node-postgres is through a connection pool.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\r\nconst app = express();\r\nconst uuid = require(\'uuid\');\r\nconst Pool = require(\'pg\').Pool;\r\nconst port = 3000;\r\n\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThe connection pool is triggered with the following code snippet:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'tshtest\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n    pool.query(\'INSERT INTO posts (id, room, temp, humidity, time) VALUES ($1, $2, $3, $4, $5)\', [uuid.v1(), 1, 30, 40, 2019-04-20], (error, results) =&gt; {\r\n        if (error) {\r\n          throw error\r\n        } else {\r\n          console.log(results);\r\n        }\r\n    })\r\n} catch (e) {\r\n    console.log(e)\r\n}</pre>\r\n&nbsp;\r\n\r\n&nbsp;','Setup PostgreSQL database and API for Node.js','','inherit','closed','closed','','37-revision-v1','','','2019-04-20 12:38:48','2019-04-20 10:38:48','',37,'https://rike.dev/2019/04/20/37-revision-v1/',0,'revision','',0),(155,1,'2019-04-20 12:44:52','2019-04-20 10:44:52','In this short tutorial we will setup a Node.js application with a connection to a PostgreSQL database and provide data via API endpoint.\r\n\r\n<!--more-->\r\n\r\nAt first, follow the <a href=\"http://www.postgresqltutorial.com/install-postgresql/\">official online documentation</a> on how to install a PostgreSQL database system on your OS. On a Linux machine, you might do something like this:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt-get update\r\nsudo apt-get install postgresql postgresql-contrib</pre>\r\nThis installation comes with <em>psql, </em>a terminal-based front-end to PostgreSQL. Access to the (still empty) database system is provided with:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\"> sudo -u postgres psql</pre>\r\nCreate a new database with the name \"tshtest\", list all available databases and connect to \"tsh\":\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">postgres=# CREATE DATABASE tshtest;\r\npostgres=# \\list\r\npostgres=# \\c tsh</pre>\r\nFrom here you could create tables to store data, but it is also possible to do that from our Node.js application later. So here we go. Our Node.js application won\'t do anything more than handle our database requests from a (non-existing) frontend. You can test all API calls with a client like <a href=\"https://www.getpostman.com/\">Postman</a> instead. This is our basic Node.js (with Express.js) boilerplate already including the <a href=\"https://www.npmjs.com/package/pg\">node-postgres library</a>, the propably best client for Node.js. Because we are working on a web application which makes frequent queries we use a connection pool. The easiest and by far most common way to use node-postgres is through a connection pool.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\r\nconst app = express();\r\nconst uuid = require(\'uuid\');\r\nconst Pool = require(\'pg\').Pool;\r\nconst port = 3000;\r\n\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThe connection pool is triggered with the following code snippet. This code also checks on every server start, if the table \"posts\" is already existing. If not, it will be created. Right after that we will insert a first example post. If the SQL syntax is new to you, you can check out this great tutorial to know what\'s going on here.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'tshtest\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n    pool.query(\'INSERT INTO posts (id, room, temp, humidity, time) VALUES ($1, $2, $3, $4, $5)\', [uuid.v1(), 1, 30, 40, 2019-04-20], (error, results) =&gt; {\r\n        if (error) {\r\n          throw error\r\n        } else {\r\n          console.log(results);\r\n        }\r\n    })\r\n} catch (e) {\r\n    console.log(e)\r\n}</pre>\r\nIt\'s time to open up a new endpoint on /getData, which will fetch all posts from the table \"posts\" in the database \"tshtest\".\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/getData\', (req, res) =&gt; {\r\n    pool.query(\'SELECT * FROM posts\', (error, results) =&gt; {\r\n      if (error) {\r\n        throw error\r\n      }\r\n      res.status(200).json(results.rows)\r\n    })\r\n});</pre>\r\nJust for fun I add another endpoint, which will delete all data from the database if called (be careful with that one ;)).\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/deleteData\', (req, res) =&gt; {\r\n    try {\r\n      pool.query(\"TRUNCATE TABLE posts\");\r\n      res.end(\'Deleted data!\');\r\n    } catch (e) {\r\n      res.send(e);\r\n      console.error(e);\r\n    }\r\n});</pre>','Setup PostgreSQL database and API for Node.js','','inherit','closed','closed','','37-revision-v1','','','2019-04-20 12:44:52','2019-04-20 10:44:52','',37,'https://rike.dev/2019/04/20/37-revision-v1/',0,'revision','',0),(156,1,'2019-04-20 12:47:34','2019-04-20 10:47:34','In this short tutorial we will setup a Node.js application with a connection to a PostgreSQL database and provide data via API endpoint.\r\n\r\n<!--more-->\r\n\r\nAt first, follow the <a href=\"http://www.postgresqltutorial.com/install-postgresql/\">official online documentation</a> on how to install a PostgreSQL database system on your OS. On a Linux machine, you might do something like this:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt-get update\r\nsudo apt-get install postgresql postgresql-contrib</pre>\r\nThis installation comes with <em>psql, </em>a terminal-based front-end to PostgreSQL. Access to the (still empty) database system is provided with:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\"> sudo -u postgres psql</pre>\r\nCreate a new database with the name \"tshtest\", list all available databases and connect to \"tsh\":\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">postgres=# CREATE DATABASE tshtest;\r\npostgres=# \\list\r\npostgres=# \\c tsh</pre>\r\nFrom here you could create tables to store data, but it is also possible to do that from our Node.js application later. So here we go. Our Node.js application won\'t do anything more than handle our database requests from a (non-existing) frontend. You can test all API calls with a client like <a href=\"https://www.getpostman.com/\">Postman</a> instead. This is our basic Node.js (with Express.js) boilerplate already including the <a href=\"https://www.npmjs.com/package/pg\">node-postgres library</a>, the propably best client for Node.js. Because we are working on a web application which makes frequent queries we use a connection pool. The easiest and by far most common way to use node-postgres is through a connection pool.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\r\nconst app = express();\r\nconst uuid = require(\'uuid\');\r\nconst Pool = require(\'pg\').Pool;\r\nconst port = 3000;\r\n\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThe connection pool is triggered with the following code snippet. This code also checks on every server start, if the table \"posts\" is already existing. If not, it will be created. Right after that we will insert a first example post. If the SQL syntax is new to you, you can check out this great tutorial to know what\'s going on here.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'tshtest\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n    pool.query(\'INSERT INTO posts (id, room, temp, humidity, time) VALUES ($1, $2, $3, $4, $5)\', [uuid.v1(), 1, 30, 40, 2019-04-20], (error, results) =&gt; {\r\n        if (error) {\r\n          throw error\r\n        } else {\r\n          console.log(results);\r\n        }\r\n    })\r\n} catch (e) {\r\n    console.log(e)\r\n}</pre>\r\nIt\'s time to open up a new endpoint on /getData, which will fetch all posts from the table \"posts\" in the database \"tshtest\".\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/getData\', (req, res) =&gt; {\r\n    pool.query(\'SELECT * FROM posts\', (error, results) =&gt; {\r\n      if (error) {\r\n        throw error\r\n      }\r\n      res.status(200).json(results.rows)\r\n    })\r\n});</pre>\r\nJust for fun I add another endpoint, which will delete all data from the database if called (be careful with that one ;)).\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/deleteData\', (req, res) =&gt; {\r\n    try {\r\n      pool.query(\"TRUNCATE TABLE posts\");\r\n      res.end(\'Deleted data!\');\r\n    } catch (e) {\r\n      res.send(e);\r\n      console.error(e);\r\n    }\r\n});</pre>\r\nStart you web app with <code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code> and check the endpoint http://localhost:3000/getData, which works also just right out of every browser and displays all database entries in JSON format. ','Setup PostgreSQL database and API for Node.js','','inherit','closed','closed','','37-revision-v1','','','2019-04-20 12:47:34','2019-04-20 10:47:34','',37,'https://rike.dev/2019/04/20/37-revision-v1/',0,'revision','',0),(157,1,'2019-04-20 12:48:38','2019-04-20 10:48:38','In this short tutorial we will setup a Node.js application with a connection to a PostgreSQL database and provide data via API endpoint.\r\n\r\n<!--more-->\r\n\r\nAt first, follow the <a href=\"http://www.postgresqltutorial.com/install-postgresql/\">official online documentation</a> on how to install a PostgreSQL database system on your OS. On a Linux machine, you might do something like this:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt-get update\r\nsudo apt-get install postgresql postgresql-contrib</pre>\r\nThis installation comes with <em>psql, </em>a terminal-based front-end to PostgreSQL. Access to the (still empty) database system is provided with:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\"> sudo -u postgres psql</pre>\r\nCreate a new database with the name \"tshtest\", list all available databases and connect to \"tsh\":\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">postgres=# CREATE DATABASE tshtest;\r\npostgres=# \\list\r\npostgres=# \\c tsh</pre>\r\nFrom here you could create tables to store data, but it is also possible to do that from our Node.js application later. So here we go. Our Node.js application won\'t do anything more than handle our database requests from a (non-existing) frontend. You can test all API calls with a client like <a href=\"https://www.getpostman.com/\">Postman</a> instead. This is our basic Node.js (with Express.js) boilerplate already including the <a href=\"https://www.npmjs.com/package/pg\">node-postgres library</a>, the propably best client for Node.js. Because we are working on a web application which makes frequent queries we use a connection pool. The easiest and by far most common way to use node-postgres is through a connection pool.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\r\nconst app = express();\r\nconst uuid = require(\'uuid\');\r\nconst Pool = require(\'pg\').Pool;\r\nconst port = 3000;\r\n\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThe connection pool is triggered with the following code snippet. This code also checks on every server start, if the table \"posts\" is already existing. If not, it will be created. Right after that we will insert a first example post. If the SQL syntax is new to you, you can check out <a href=\"https://beginner-sql-tutorial.com/sql.htm\">this great tutorial</a> to know what\'s going on here.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'tshtest\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n    pool.query(\'INSERT INTO posts (id, room, temp, humidity, time) VALUES ($1, $2, $3, $4, $5)\', [uuid.v1(), 1, 30, 40, 2019-04-20], (error, results) =&gt; {\r\n        if (error) {\r\n          throw error\r\n        } else {\r\n          console.log(results);\r\n        }\r\n    })\r\n} catch (e) {\r\n    console.log(e)\r\n}</pre>\r\nIt\'s time to open up a new endpoint on /getData, which will fetch all posts from the table \"posts\" in the database \"tshtest\".\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/getData\', (req, res) =&gt; {\r\n    pool.query(\'SELECT * FROM posts\', (error, results) =&gt; {\r\n      if (error) {\r\n        throw error\r\n      }\r\n      res.status(200).json(results.rows)\r\n    })\r\n});</pre>\r\nJust for fun I add another endpoint, which will delete all data from the database if called (be careful with that one ;)).\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/deleteData\', (req, res) =&gt; {\r\n    try {\r\n      pool.query(\"TRUNCATE TABLE posts\");\r\n      res.end(\'Deleted data!\');\r\n    } catch (e) {\r\n      res.send(e);\r\n      console.error(e);\r\n    }\r\n});</pre>\r\nStart you web app with <code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code> and check the endpoint http://localhost:3000/getData, which works also just right out of every browser and displays all database entries in JSON format.','Setup PostgreSQL database and API for Node.js','','inherit','closed','closed','','37-revision-v1','','','2019-04-20 12:48:38','2019-04-20 10:48:38','',37,'https://rike.dev/2019/04/20/37-revision-v1/',0,'revision','',0),(158,1,'2019-04-20 12:49:41','2019-04-20 10:49:41','In this short tutorial we will setup a Node.js application with a connection to a PostgreSQL database and provide data via API endpoint.\n\n<!--more-->\n\nAt first, follow the <a href=\"http://www.postgresqltutorial.com/install-postgresql/\">official online documentation</a> on how to install a PostgreSQL database system on your OS. On a Linux machine, you might do something like this:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt-get update\nsudo apt-get install postgresql postgresql-contrib</pre>\nThis installation comes with <em>psql, </em>a terminal-based front-end to PostgreSQL. Access to the (still empty) database system is provided with:\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\"> sudo -u postgres psql</pre>\nCreate a new database with the name \"tshtest\", list all available databases and connect to \"tsh\":\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">postgres=# CREATE DATABASE tshtest;\npostgres=# \\list\npostgres=# \\c tsh</pre>\nFrom here you could create tables to store data, but it is also possible to do that from our Node.js application later. So here we go. Our Node.js application won\'t do anything more than handle our database requests from a (non-existing) frontend. You can test all API calls with a client like <a href=\"https://www.getpostman.com/\">Postman</a> instead or even just your browser This is our basic Node.js (with Express.js) boilerplate already including the <a href=\"https://www.npmjs.com/package/pg\">node-postgres library</a>, the propably best client for Node.js. Because we are working on a web application which makes frequent queries we use a connection pool. The easiest and by far most common way to use node-postgres is through a connection pool.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\nconst app = express();\nconst uuid = require(\'uuid\');\nconst Pool = require(\'pg\').Pool;\nconst port = 3000;\n\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\nThe connection pool is triggered with the following code snippet. This code also checks on every server start, if the table \"posts\" is already existing. If not, it will be created. Right after that we will insert a first example post. If the SQL syntax is new to you, you can check out <a href=\"https://beginner-sql-tutorial.com/sql.htm\">this great tutorial</a> to know what\'s going on here.\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let pool;\ntry {\n    pool = new Pool({\n      user: \'postgres\',\n      host: \'localhost\',\n      database: \'tshtest\',\n      password: \'password\',\n      port: 5432,\n    })\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\n    pool.query(\'INSERT INTO posts (id, room, temp, humidity, time) VALUES ($1, $2, $3, $4, $5)\', [uuid.v1(), 1, 30, 40, 2019-04-20], (error, results) =&gt; {\n        if (error) {\n          throw error\n        } else {\n          console.log(results);\n        }\n    })\n} catch (e) {\n    console.log(e)\n}</pre>\nIt\'s time to open up a new endpoint on /getData, which will fetch all posts from the table \"posts\" in the database \"tshtest\".\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/getData\', (req, res) =&gt; {\n    pool.query(\'SELECT * FROM posts\', (error, results) =&gt; {\n      if (error) {\n        throw error\n      }\n      res.status(200).json(results.rows)\n    })\n});</pre>\nJust for fun I add another endpoint, which will delete all data from the database if called (be careful with that one ;)).\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/deleteData\', (req, res) =&gt; {\n    try {\n      pool.query(\"TRUNCATE TABLE posts\");\n      res.end(\'Deleted data!\');\n    } catch (e) {\n      res.send(e);\n      console.error(e);\n    }\n});</pre>\nStart you web app with <code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code> and check the endpoint http://localhost:3000/getData, which works also just right out of every browser and displays all database entries in JSON format.','Setup PostgreSQL database and API for Node.js','','inherit','closed','closed','','37-autosave-v1','','','2019-04-20 12:49:41','2019-04-20 10:49:41','',37,'https://rike.dev/2019/04/20/37-autosave-v1/',0,'revision','',0),(159,1,'2019-04-20 12:51:28','2019-04-20 10:51:28','In this short tutorial we will setup a Node.js application with a connection to a PostgreSQL database and provide data via API endpoint.\r\n\r\n<!--more-->\r\n\r\nAt first, follow the <a href=\"http://www.postgresqltutorial.com/install-postgresql/\">official online documentation</a> on how to install a PostgreSQL database system on your OS. On a Linux machine, you might do something like this:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt-get update\r\nsudo apt-get install postgresql postgresql-contrib</pre>\r\nThis installation comes with <em>psql, </em>a terminal-based front-end to PostgreSQL. Access to the (still empty) database system is provided with:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\"> sudo -u postgres psql</pre>\r\nCreate a new database with the name \"tshtest\", list all available databases and connect to \"tsh\":\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">postgres=# CREATE DATABASE tshtest;\r\npostgres=# \\list\r\npostgres=# \\c tsh</pre>\r\nFrom here you could create tables to store data, but it is also possible to do that from our Node.js application later. <em>So here we go:</em> Our Node.js application won\'t do anything more than handle our database requests from a (non-existing) frontend. You can test all API calls with a client like <a href=\"https://www.getpostman.com/\">Postman</a> or even just your browser. The next code snippet provides our basic Node.js (with Express.js) boilerplate already including the <a href=\"https://www.npmjs.com/package/pg\"><em>node-postgres</em> library</a>, the propably best client for Node.js. Because we are working on a web application which makes frequent queries we use a connection pool. The easiest and by far most common way to use node-postgres is through a connection pool.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\r\nconst app = express();\r\nconst uuid = require(\'uuid\');\r\nconst Pool = require(\'pg\').Pool;\r\nconst port = 3000;\r\n\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThe connection pool is triggered with the following code snippet. This code also checks on every server start, if the table \"posts\" is already existing. If not, it will be created. Right after that we will insert a first example post. If the SQL syntax is new to you, you can check out <a href=\"https://beginner-sql-tutorial.com/sql.htm\">this great tutorial</a> to know what\'s going on here.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'tshtest\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n    pool.query(\'INSERT INTO posts (id, room, temp, humidity, time) VALUES ($1, $2, $3, $4, $5)\', [uuid.v1(), 1, 30, 40, 2019-04-20], (error, results) =&gt; {\r\n        if (error) {\r\n          throw error\r\n        } else {\r\n          console.log(results);\r\n        }\r\n    })\r\n} catch (e) {\r\n    console.log(e)\r\n}</pre>\r\nIt\'s time to open up a new endpoint on <em>/getData</em>, which will fetch all posts from the table \"posts\" in the database \"tshtest\".\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/getData\', (req, res) =&gt; {\r\n    pool.query(\'SELECT * FROM posts\', (error, results) =&gt; {\r\n      if (error) {\r\n        throw error\r\n      }\r\n      res.status(200).json(results.rows)\r\n    })\r\n});</pre>\r\nJust for fun I add another endpoint <em>/deleteData</em>, which will delete all data from the database if called (be careful with that one ;)).\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/deleteData\', (req, res) =&gt; {\r\n    try {\r\n      pool.query(\"TRUNCATE TABLE posts\");\r\n      res.end(\'Deleted data!\');\r\n    } catch (e) {\r\n      res.send(e);\r\n      console.error(e);\r\n    }\r\n});</pre>\r\nStart you web app with <code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code> and check the endpoint http://localhost:3000/getData, which works also just right out of every browser and displays all database entries in JSON format.','Setup PostgreSQL database and API for Node.js','','inherit','closed','closed','','37-revision-v1','','','2019-04-20 12:51:28','2019-04-20 10:51:28','',37,'https://rike.dev/2019/04/20/37-revision-v1/',0,'revision','',0),(160,1,'2019-04-20 12:52:28','2019-04-20 10:52:28','[grey_box] <strong>TLDR;</strong> This three-part tutorial explains how to setup a basic smart home web app tracking sensor data for temperature and humidity with a Raspberry Pi and web technologies like Mosquitto, Node.js, Express.js, Vue.js, Quasar and Chart.js.[/grey_box]\r\n\r\n<a href=\"https://rike.dev/wp-content/uploads/2019/02/6.png\"><img class=\" imagedropshadow aligncenter wp-image-45 size-large\" src=\"https://rike.dev/wp-content/uploads/2019/02/6-1024x667.png\" alt=\"Tiny Smart Home\" width=\"650\" height=\"423\" /></a>\r\n\r\nSo I went on maternity this January and came up with an idea about a nice little project to do in my free time that went a little further from my usual Javascript front- und backend projects I usually do at work. I have a Raspberry Pi 3 at home I bought over a year ago and never did something useful with so I decided I wanted to track temperatures and humidity in our child\'s room and bedroom to a have an idea about a good indoor climate. In the end I wanted to finalize a cloud-based dashboard web app which provides the incoming sensor data in real time and available everywhere and everytime.\r\n\r\n<em>I wrote this three-part tutorial to track my experiences, tech choices and suggestions for you to follow and came up with a solution that comes with an easy hardware setup and some popular (and worth to learn if you are not already familiar with) web development technologies, including Node.js, Mosquitto and Vue.js.</em>\r\n\r\nThe basic three parts will allow you to run a web application on your local machine. Nevertheless I added some more features including persistent database storing and the deployment in the cloud with Heroku. You will find these tutorials at the end of this page.\r\n[green_box]<strong>The code base is stored on <a href=\"https://github.com/gitfrosh/tiny-smart-home\">Github</a>!</strong>[/green_box]\r\n\r\n<!--more-->\r\n<h5><a href=\"https://rike.dev/2019/02/11/hardware-sensors-receiver-raspberry-pi-for-a-basic-tracking-tool-on-temperature-and-humidity/\">1 . Choose and install hardware (sensors, receiver, Raspberry Pi) for a basic tracking tool on temperature and humidity</a></h5>\r\nI did some research on how to build basic weather stations and home automation systems with a Raspberry Pi but they were mostly no wireless solutions or they came up with too much IoT hacking/soldering and especially required a lot of electrical knowledge I do not have. The core problem I figured out was that many tutorials wanted me to build a remote sensor gagdet with radio functionality and sleep mode (e.g. with an Arduino) all on my own. So the question was: Is there a better and easier alternative to such an all self made solution and what about the receiving hardware on the Raspberry Pi?\r\n\r\nFortunately, there exists an easier alternative I will show you in this part of the tutorial which deals with slightly more expensive IoT gagdets but which enabled me to set up my smart home hardware in a smooth but nonetheless instructive way.\r\n<h5><a href=\"https://rike.dev/2019/02/07/smart-home-sensor-data-with-mqtt-broker-mosquitto-and-a-node-js-backend-application/\">2. Get and process your smart home sensor data with MQTT Broker Mosquitto and a Node.js backend</a></h5>\r\nThe main problem in this part was how to set up a stable and endlessly running task on my Raspberry Pi to continuously receive the (correct!) sensor data. Secondly I wanted it to somehow process and transfer it to a backend/microservice/middleware, which then would provide an upcoming frontend with JSON data to display. MQTT is the IoT protocol to go with but how to set it up? How can a MQTT broker like Mosquitto work with a Node.js backend properly?\r\n<h5><a href=\"https://rike.dev/2019/02/11/display-smart-home-data-in-a-quasar-vue-js-and-chart-js-powered-web-application/\">3. Display smart home data in a Quasar, Vue.js and Chart.js powered web application</a></h5>\r\nThis was somehow the easiest part, because I mainly work as a frontend engineer and know how to implement dashboard-like web app solutions in combination with backend REST API services and the like. I challenged myself with an insight into Vue.js, since I mainly used React as a SPA framework before. In search of a nice UI library I discovered Quasar, which provides a very useful CLI and UI components so that there was no need to come up with an own CSS by myself.\r\n\r\n<hr />\r\n\r\n<h5> Add more features?</h5>\r\nI wrote some more or less standalone tutorials, which will help you to improve your existent application with some more capacities.\r\n<ol>\r\n 	<li>Deploy your smart home application up to the cloud on Heroku <em>(coming soon)</em></li>\r\n 	<li>\r\n<div>Build a simple session-based authentication with Node.js and Vue.js <em>(coming soon)</em></div></li>\r\n 	<li>\r\n<div><a style=\"color: #e44249;\" href=\"https://rike.dev/2019/04/20/setup-postgresql-database-and-api-for-node-js\">Setup PostgreSQL database and API for Node.js</a></div></li>\r\n 	<li><a style=\"color: #e44249;\" href=\"https://rike.dev/2019/04/20/get-a-csv-download-out-of-postgresql-or-lowdb-database-on-node-js/\">Get a CSV download out of PostgreSQL or lowdb database on Node.js</a></li>\r\n</ol>','How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js','','inherit','closed','closed','','43-revision-v1','','','2019-04-20 12:52:28','2019-04-20 10:52:28','',43,'https://rike.dev/2019/04/20/43-revision-v1/',0,'revision','',0),(161,1,'2019-04-20 12:59:48','2019-04-20 10:59:48','This small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\n<!--more-->\r\n\r\nAt first we create a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code>\r\n\r\nand check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 12:59:48','2019-04-20 10:59:48','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(162,1,'2019-04-20 13:00:44','2019-04-20 11:00:44','This small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\n<!--more-->\r\n\r\nAt first we create a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code> and check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 13:00:44','2019-04-20 11:00:44','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(163,1,'2019-04-20 13:01:04','2019-04-20 11:01:04','This small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\n<!--more-->\r\n\r\nAt first we create a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with <code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code> and check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 13:01:04','2019-04-20 11:01:04','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(164,1,'2019-04-20 13:02:01','2019-04-20 11:02:01','In this short tutorial we will setup a Node.js application with a connection to a PostgreSQL database and provide data via API endpoint.\r\n\r\n<!--more-->\r\n\r\nAt first, follow the <a href=\"http://www.postgresqltutorial.com/install-postgresql/\">official online documentation</a> on how to install a PostgreSQL database system on your OS. On a Linux machine, you might do something like this:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt-get update\r\nsudo apt-get install postgresql postgresql-contrib</pre>\r\nThis installation comes with <em>psql, </em>a terminal-based front-end to PostgreSQL. Access to the (still empty) database system is provided with:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\"> sudo -u postgres psql</pre>\r\nCreate a new database with the name \"tshtest\", list all available databases and connect to \"tsh\":\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">postgres=# CREATE DATABASE tshtest;\r\npostgres=# \\list\r\npostgres=# \\c tsh</pre>\r\nFrom here you could create tables to store data, but it is also possible to do that from our Node.js application later. <em>So here we go:</em> Our Node.js application won\'t do anything more than handle our database requests from a (non-existing) frontend. You can test all API calls with a client like <a href=\"https://www.getpostman.com/\">Postman</a> or even just your browser. The next code snippet provides our basic Node.js (with Express.js) boilerplate already including the <a href=\"https://www.npmjs.com/package/pg\"><em>node-postgres</em> library</a>, the propably best client for Node.js. Because we are working on a web application which makes frequent queries we use a connection pool. The easiest and by far most common way to use node-postgres is through a connection pool.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\r\nconst app = express();\r\nconst uuid = require(\'uuid\');\r\nconst Pool = require(\'pg\').Pool;\r\nconst port = 3000;\r\n\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThe connection pool is triggered with the following code snippet. This code also checks on every server start, if the table \"posts\" is already existing. If not, it will be created. Right after that we will insert a first example post. If the SQL syntax is new to you, you can check out <a href=\"https://beginner-sql-tutorial.com/sql.htm\">this great tutorial</a> to know what\'s going on here.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'tshtest\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n    pool.query(\'INSERT INTO posts (id, room, temp, humidity, time) VALUES ($1, $2, $3, $4, $5)\', [uuid.v1(), 1, 30, 40, 2019-04-20], (error, results) =&gt; {\r\n        if (error) {\r\n          throw error\r\n        } else {\r\n          console.log(results);\r\n        }\r\n    })\r\n} catch (e) {\r\n    console.log(e)\r\n}</pre>\r\nIt\'s time to open up a new endpoint on <em>/getData</em>, which will fetch all posts from the table \"posts\" in the database \"tshtest\".\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/getData\', (req, res) =&gt; {\r\n    pool.query(\'SELECT * FROM posts\', (error, results) =&gt; {\r\n      if (error) {\r\n        throw error\r\n      }\r\n      res.status(200).json(results.rows)\r\n    })\r\n});</pre>\r\nJust for fun I add another endpoint <em>/deleteData</em>, which will delete all data from the database if called (be careful with that one ;)).\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/deleteData\', (req, res) =&gt; {\r\n    try {\r\n      pool.query(\"TRUNCATE TABLE posts\");\r\n      res.end(\'Deleted data!\');\r\n    } catch (e) {\r\n      res.send(e);\r\n      console.error(e);\r\n    }\r\n});</pre>\r\nStart you web app with <code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code> and check the endpoint http://localhost:3000/getData, which works also just right out of every browser and displays all database entries in JSON format.\r\n\r\n[grey_box]This tutorial is part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>[/grey_box]','Setup PostgreSQL database and API for Node.js','','inherit','closed','closed','','37-revision-v1','','','2019-04-20 13:02:01','2019-04-20 11:02:01','',37,'https://rike.dev/2019/04/20/37-revision-v1/',0,'revision','',0),(165,1,'2019-04-20 13:02:11','2019-04-20 11:02:11','This small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n\r\n<!--more-->\r\n\r\nAt first we create a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with <code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code> and check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.\r\n\r\n[grey_box]This tutorial is part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>[/grey_box]','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 13:02:11','2019-04-20 11:02:11','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(166,1,'2019-04-20 13:02:48','2019-04-20 11:02:48','This small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n<!--more-->\r\n[grey_box]This tutorial is part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"[/grey_box]\r\n\r\nAt first we create a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with <code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code> and check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.\r\n','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 13:02:48','2019-04-20 11:02:48','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(167,1,'2019-04-20 13:02:57','2019-04-20 11:02:57','In this short tutorial we will setup a Node.js application with a connection to a PostgreSQL database and provide data via API endpoint.\r\n<!--more-->\r\n[grey_box]This tutorial is part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"[/grey_box]\r\nAt first, follow the <a href=\"http://www.postgresqltutorial.com/install-postgresql/\">official online documentation</a> on how to install a PostgreSQL database system on your OS. On a Linux machine, you might do something like this:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt-get update\r\nsudo apt-get install postgresql postgresql-contrib</pre>\r\nThis installation comes with <em>psql, </em>a terminal-based front-end to PostgreSQL. Access to the (still empty) database system is provided with:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\"> sudo -u postgres psql</pre>\r\nCreate a new database with the name \"tshtest\", list all available databases and connect to \"tsh\":\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">postgres=# CREATE DATABASE tshtest;\r\npostgres=# \\list\r\npostgres=# \\c tsh</pre>\r\nFrom here you could create tables to store data, but it is also possible to do that from our Node.js application later. <em>So here we go:</em> Our Node.js application won\'t do anything more than handle our database requests from a (non-existing) frontend. You can test all API calls with a client like <a href=\"https://www.getpostman.com/\">Postman</a> or even just your browser. The next code snippet provides our basic Node.js (with Express.js) boilerplate already including the <a href=\"https://www.npmjs.com/package/pg\"><em>node-postgres</em> library</a>, the propably best client for Node.js. Because we are working on a web application which makes frequent queries we use a connection pool. The easiest and by far most common way to use node-postgres is through a connection pool.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\r\nconst app = express();\r\nconst uuid = require(\'uuid\');\r\nconst Pool = require(\'pg\').Pool;\r\nconst port = 3000;\r\n\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThe connection pool is triggered with the following code snippet. This code also checks on every server start, if the table \"posts\" is already existing. If not, it will be created. Right after that we will insert a first example post. If the SQL syntax is new to you, you can check out <a href=\"https://beginner-sql-tutorial.com/sql.htm\">this great tutorial</a> to know what\'s going on here.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'tshtest\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n    pool.query(\'INSERT INTO posts (id, room, temp, humidity, time) VALUES ($1, $2, $3, $4, $5)\', [uuid.v1(), 1, 30, 40, 2019-04-20], (error, results) =&gt; {\r\n        if (error) {\r\n          throw error\r\n        } else {\r\n          console.log(results);\r\n        }\r\n    })\r\n} catch (e) {\r\n    console.log(e)\r\n}</pre>\r\nIt\'s time to open up a new endpoint on <em>/getData</em>, which will fetch all posts from the table \"posts\" in the database \"tshtest\".\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/getData\', (req, res) =&gt; {\r\n    pool.query(\'SELECT * FROM posts\', (error, results) =&gt; {\r\n      if (error) {\r\n        throw error\r\n      }\r\n      res.status(200).json(results.rows)\r\n    })\r\n});</pre>\r\nJust for fun I add another endpoint <em>/deleteData</em>, which will delete all data from the database if called (be careful with that one ;)).\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/deleteData\', (req, res) =&gt; {\r\n    try {\r\n      pool.query(\"TRUNCATE TABLE posts\");\r\n      res.end(\'Deleted data!\');\r\n    } catch (e) {\r\n      res.send(e);\r\n      console.error(e);\r\n    }\r\n});</pre>\r\nStart you web app with <code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code> and check the endpoint http://localhost:3000/getData, which works also just right out of every browser and displays all database entries in JSON format.\r\n\r\n[grey_box]This tutorial is part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>[/grey_box]','Setup PostgreSQL database and API for Node.js','','inherit','closed','closed','','37-revision-v1','','','2019-04-20 13:02:57','2019-04-20 11:02:57','',37,'https://rike.dev/2019/04/20/37-revision-v1/',0,'revision','',0),(168,1,'2019-04-20 13:03:16','2019-04-20 11:03:16','In this short tutorial we will setup a Node.js application with a connection to a PostgreSQL database and provide data via API endpoint.\r\n<!--more--> [grey_box]This tutorial is part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"[/grey_box] At first, follow the <a href=\"http://www.postgresqltutorial.com/install-postgresql/\">official online documentation</a> on how to install a PostgreSQL database system on your OS. On a Linux machine, you might do something like this:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt-get update\r\nsudo apt-get install postgresql postgresql-contrib</pre>\r\nThis installation comes with <em>psql, </em>a terminal-based front-end to PostgreSQL. Access to the (still empty) database system is provided with:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\"> sudo -u postgres psql</pre>\r\nCreate a new database with the name \"tshtest\", list all available databases and connect to \"tsh\":\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">postgres=# CREATE DATABASE tshtest;\r\npostgres=# \\list\r\npostgres=# \\c tsh</pre>\r\nFrom here you could create tables to store data, but it is also possible to do that from our Node.js application later. <em>So here we go:</em> Our Node.js application won\'t do anything more than handle our database requests from a (non-existing) frontend. You can test all API calls with a client like <a href=\"https://www.getpostman.com/\">Postman</a> or even just your browser. The next code snippet provides our basic Node.js (with Express.js) boilerplate already including the <a href=\"https://www.npmjs.com/package/pg\"><em>node-postgres</em> library</a>, the propably best client for Node.js. Because we are working on a web application which makes frequent queries we use a connection pool. The easiest and by far most common way to use node-postgres is through a connection pool.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\r\nconst app = express();\r\nconst uuid = require(\'uuid\');\r\nconst Pool = require(\'pg\').Pool;\r\nconst port = 3000;\r\n\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThe connection pool is triggered with the following code snippet. This code also checks on every server start, if the table \"posts\" is already existing. If not, it will be created. Right after that we will insert a first example post. If the SQL syntax is new to you, you can check out <a href=\"https://beginner-sql-tutorial.com/sql.htm\">this great tutorial</a> to know what\'s going on here.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'tshtest\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n    pool.query(\'INSERT INTO posts (id, room, temp, humidity, time) VALUES ($1, $2, $3, $4, $5)\', [uuid.v1(), 1, 30, 40, 2019-04-20], (error, results) =&gt; {\r\n        if (error) {\r\n          throw error\r\n        } else {\r\n          console.log(results);\r\n        }\r\n    })\r\n} catch (e) {\r\n    console.log(e)\r\n}</pre>\r\nIt\'s time to open up a new endpoint on <em>/getData</em>, which will fetch all posts from the table \"posts\" in the database \"tshtest\".\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/getData\', (req, res) =&gt; {\r\n    pool.query(\'SELECT * FROM posts\', (error, results) =&gt; {\r\n      if (error) {\r\n        throw error\r\n      }\r\n      res.status(200).json(results.rows)\r\n    })\r\n});</pre>\r\nJust for fun I add another endpoint <em>/deleteData</em>, which will delete all data from the database if called (be careful with that one ;)).\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/deleteData\', (req, res) =&gt; {\r\n    try {\r\n      pool.query(\"TRUNCATE TABLE posts\");\r\n      res.end(\'Deleted data!\');\r\n    } catch (e) {\r\n      res.send(e);\r\n      console.error(e);\r\n    }\r\n});</pre>\r\nStart you web app with <code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code> and check the endpoint http://localhost:3000/getData, which works also just right out of every browser and displays all database entries in JSON format.\r\n\r\n[grey_box]This tutorial is part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>[/grey_box]','Setup PostgreSQL database and API for Node.js','','inherit','closed','closed','','37-revision-v1','','','2019-04-20 13:03:16','2019-04-20 11:03:16','',37,'https://rike.dev/2019/04/20/37-revision-v1/',0,'revision','',0),(169,1,'2019-04-20 13:03:30','2019-04-20 11:03:30','This small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n<!--more--> [grey_box]This tutorial is part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"[/grey_box] At first we create a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with <code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code> and check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.\r\n','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-04-20 13:03:30','2019-04-20 11:03:30','',116,'https://rike.dev/2019/04/20/116-revision-v1/',0,'revision','',0),(172,1,'2019-05-10 15:17:44','2019-05-10 13:17:44','This small tutorial provides a solution to provide a download link for your website users to fetch a csv file including the data out of a PostgreSQL or lowdb database. Have fun!\r\n<!--more--> [grey_box]This tutorial is part of the series \"<a href=\"https://rike.dev/2019/02/11/smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js/\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"[/grey_box] At first we create a basic Node.js application with Express.js and setup and connect to PostgreSQL or lowdb database. Make sure your PostgreSQL database is accessable on port 5432!\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// import Express.js\r\nconst express = require(\'express\');\r\nconst app = express();\r\n\r\n// import lib needed for csv download in lowdb\r\nconst jsonexport = require(\'jsonexport\');\r\n\r\n// connect to lowdb\r\nconst low = require(\'lowdb\');\r\nconst adapter = new FileSync(\'db.json\');\r\nconst db = low(adapter);\r\n\r\n// connect to PostgreSQL db\r\nconst Pool = require(\'pg\').Pool;\r\nlet pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'whatever-db-name\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n// setup Express web app\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThen we create a new endpoint providing a csv download of the lowdb database:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// download CSV\r\napp.get(\'/lowdb-download\', function (req, res) {\r\n  try {\r\n    var reader = fs.createReadStream(\'db.json\');\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    var pipe = reader.pipe(jsonexport()).pipe(writer);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nOr, if you use a PostgreSQL database this snippet works:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/postgres-download\', function (req, res) {\r\n  try {\r\n    var writer = fs.createWriteStream(\'db.csv\');\r\n    pool.connect(function (pgErr, client, done) {\r\n      var stream = client.query(copyTo(\'COPY posts TO STDOUT\'));\r\n      var pipe = stream.pipe(writer);\r\n      pipe.on(\'finish\', function () {\r\n        var stream = fs.createReadStream(\'db.csv\');\r\n        res.attachment(\'db.csv\');\r\n        stream.pipe(res);\r\n      });\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n});</pre>\r\nNow start your app with <code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code> and check your implementation on http://localhost:3000/postgres-download and http://localhost:3000/lowdb-download. Your browser should start the download automatically.\r\n','Get a CSV download out of PostgreSQL or lowdb database on Node.js','','inherit','closed','closed','','116-revision-v1','','','2019-05-10 15:17:44','2019-05-10 13:17:44','',116,'https://rike.dev/2019/05/10/116-revision-v1/',0,'revision','',0),(173,1,'2019-05-10 15:22:34','2019-05-10 13:22:34','In this short tutorial we will setup a Node.js application with a connection to a PostgreSQL database and provide data via API endpoint.\r\n<!--more--> [grey_box]This tutorial is part of the series \"<a href=\"https://rike.dev/2019/02/11/smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js/\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"[/grey_box] At first, follow the <a href=\"http://www.postgresqltutorial.com/install-postgresql/\">official online documentation</a> on how to install a PostgreSQL database system on your OS. On a Linux machine, you might do something like this:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt-get update\r\nsudo apt-get install postgresql postgresql-contrib</pre>\r\nThis installation comes with <em>psql, </em>a terminal-based front-end to PostgreSQL. Access to the (still empty) database system is provided with:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\"> sudo -u postgres psql</pre>\r\nCreate a new database with the name \"tshtest\", list all available databases and connect to \"tsh\":\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">postgres=# CREATE DATABASE tshtest;\r\npostgres=# \\list\r\npostgres=# \\c tsh</pre>\r\nFrom here you could create tables to store data, but it is also possible to do that from our Node.js application later. <em>So here we go:</em> Our Node.js application won\'t do anything more than handle our database requests from a (non-existing) frontend. You can test all API calls with a client like <a href=\"https://www.getpostman.com/\">Postman</a> or even just your browser. The next code snippet provides our basic Node.js (with Express.js) boilerplate already including the <a href=\"https://www.npmjs.com/package/pg\"><em>node-postgres</em> library</a>, the propably best client for Node.js. Because we are working on a web application which makes frequent queries we use a connection pool. The easiest and by far most common way to use node-postgres is through a connection pool.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\r\nconst app = express();\r\nconst uuid = require(\'uuid\');\r\nconst Pool = require(\'pg\').Pool;\r\nconst port = 3000;\r\n\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThe connection pool is triggered with the following code snippet. This code also checks on every server start, if the table \"posts\" is already existing. If not, it will be created. Right after that we will insert a first example post. If the SQL syntax is new to you, you can check out <a href=\"https://beginner-sql-tutorial.com/sql.htm\">this great tutorial</a> to know what\'s going on here.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'tshtest\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n    pool.query(\'INSERT INTO posts (id, room, temp, humidity, time) VALUES ($1, $2, $3, $4, $5)\', [uuid.v1(), 1, 30, 40, 2019-04-20], (error, results) =&gt; {\r\n        if (error) {\r\n          throw error\r\n        } else {\r\n          console.log(results);\r\n        }\r\n    })\r\n} catch (e) {\r\n    console.log(e)\r\n}</pre>\r\nIt\'s time to open up a new endpoint on <em>/getData</em>, which will fetch all posts from the table \"posts\" in the database \"tshtest\".\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/getData\', (req, res) =&gt; {\r\n    pool.query(\'SELECT * FROM posts\', (error, results) =&gt; {\r\n      if (error) {\r\n        throw error\r\n      }\r\n      res.status(200).json(results.rows)\r\n    })\r\n});</pre>\r\nJust for fun I add another endpoint <em>/deleteData</em>, which will delete all data from the database if called (be careful with that one ;)).\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/deleteData\', (req, res) =&gt; {\r\n    try {\r\n      pool.query(\"TRUNCATE TABLE posts\");\r\n      res.end(\'Deleted data!\');\r\n    } catch (e) {\r\n      res.send(e);\r\n      console.error(e);\r\n    }\r\n});</pre>\r\nStart you web app with <code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code> and check the endpoint http://localhost:3000/getData, which works also just right out of every browser and displays all database entries in JSON format.\r\n\r\n[grey_box]This tutorial is part of the series \"<a href=\"http://rike.dev/texts/2019/02/11/how-to-smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>[/grey_box]','Setup PostgreSQL database and API for Node.js','','inherit','closed','closed','','37-revision-v1','','','2019-05-10 15:22:34','2019-05-10 13:22:34','',37,'https://rike.dev/2019/05/10/37-revision-v1/',0,'revision','',0),(174,1,'2019-05-10 15:26:08','2019-05-10 13:26:08','In this short tutorial we will setup a Node.js application with a connection to a PostgreSQL database and provide data via API endpoint.\r\n<!--more--> [grey_box]This tutorial is part of the series \"<a href=\"https://rike.dev/2019/02/11/smart-home-setup-to-track-indoor-temperatures-and-humidity-with-sensors-raspberry-pi-mqtt-node-js-vue-js-and-chart-js/\">How To: Smart Home setup to track indoor temperatures and humidity with sensors, Raspberry Pi, MQTT, Node.js, Vue.js and Chart.js</a>\"[/grey_box] At first, follow the <a href=\"http://www.postgresqltutorial.com/install-postgresql/\">official online documentation</a> on how to install a PostgreSQL database system on your OS. On a Linux machine, you might do something like this:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt-get update\r\nsudo apt-get install postgresql postgresql-contrib</pre>\r\nThis installation comes with <em>psql, </em>a terminal-based front-end to PostgreSQL. Access to the (still empty) database system is provided with:\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\"> sudo -u postgres psql</pre>\r\nCreate a new database with the name \"tshtest\", list all available databases and connect to \"tsh\":\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">postgres=# CREATE DATABASE tshtest;\r\npostgres=# \\list\r\npostgres=# \\c tsh</pre>\r\nFrom here you could create tables to store data, but it is also possible to do that from our Node.js application later. <em>So here we go:</em> Our Node.js application won\'t do anything more than handle our database requests from a (non-existing) frontend. You can test all API calls with a client like <a href=\"https://www.getpostman.com/\">Postman</a> or even just your browser. The next code snippet provides our basic Node.js (with Express.js) boilerplate already including the <a href=\"https://www.npmjs.com/package/pg\"><em>node-postgres</em> library</a>, the propably best client for Node.js. Because we are working on a web application which makes frequent queries we use a connection pool. The easiest and by far most common way to use node-postgres is through a connection pool.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const express = require(\'express\');\r\nconst app = express();\r\nconst uuid = require(\'uuid\');\r\nconst Pool = require(\'pg\').Pool;\r\nconst port = 3000;\r\n\r\napp.listen(port, () =&gt; console.log(\'App listening on port \', port));</pre>\r\nThe connection pool is triggered with the following code snippet. This code also checks on every server start, if the table \"posts\" is already existing. If not, it will be created. Right after that we will insert a first example post. If the SQL syntax is new to you, you can check out <a href=\"https://beginner-sql-tutorial.com/sql.htm\">this great tutorial</a> to know what\'s going on here.\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let pool;\r\ntry {\r\n    pool = new Pool({\r\n      user: \'postgres\',\r\n      host: \'localhost\',\r\n      database: \'tshtest\',\r\n      password: \'password\',\r\n      port: 5432,\r\n    })\r\n    pool.query(\"CREATE TABLE IF NOT EXISTS posts (id VARCHAR(100) PRIMARY KEY, room INT, temp VARCHAR(30), humidity VARCHAR(30), time VARCHAR(100))\");\r\n    pool.query(\'INSERT INTO posts (id, room, temp, humidity, time) VALUES ($1, $2, $3, $4, $5)\', [uuid.v1(), 1, 30, 40, 2019-04-20], (error, results) =&gt; {\r\n        if (error) {\r\n          throw error\r\n        } else {\r\n          console.log(results);\r\n        }\r\n    })\r\n} catch (e) {\r\n    console.log(e)\r\n}</pre>\r\nIt\'s time to open up a new endpoint on <em>/getData</em>, which will fetch all posts from the table \"posts\" in the database \"tshtest\".\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/getData\', (req, res) =&gt; {\r\n    pool.query(\'SELECT * FROM posts\', (error, results) =&gt; {\r\n      if (error) {\r\n        throw error\r\n      }\r\n      res.status(200).json(results.rows)\r\n    })\r\n});</pre>\r\nJust for fun I add another endpoint <em>/deleteData</em>, which will delete all data from the database if called (be careful with that one ;)).\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">app.get(\'/deleteData\', (req, res) =&gt; {\r\n    try {\r\n      pool.query(\"TRUNCATE TABLE posts\");\r\n      res.end(\'Deleted data!\');\r\n    } catch (e) {\r\n      res.send(e);\r\n      console.error(e);\r\n    }\r\n});</pre>\r\nStart you web app with <code class=\"EnlighterJSRAW\" data-enlighter-language=\"msdos\">node server.js</code> and check the endpoint http://localhost:3000/getData, which works also just right out of every browser and displays all database entries in JSON format.','Setup PostgreSQL database and API for Node.js','','inherit','closed','closed','','37-revision-v1','','','2019-05-10 15:26:08','2019-05-10 13:26:08','',37,'https://rike.dev/2019/05/10/37-revision-v1/',0,'revision','',0),(179,1,'2019-06-18 22:44:57','2019-06-18 20:44:57','<!-- wp:paragraph -->\r\n<p>In diesem Tutorial geht es darum, Node.js und npm als Vorbereitung für das Setup eines eigenen kleinen Webservers zu installieren. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" (2019) entstanden.</p>\r\n<p><!--more--></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Was ist Node.js?</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><em>Node.js</em> ist eine Softwareumgebung für Javascript, welche es ermöglicht, serverseitige Javascript-Anwendungen (-&gt; Webserver) auf einem beliebigen Betriebssystem zu programmieren. Sie erweitert \"klassisches\" Javascript um die notwendigen Funktionen und ist dabei extrem ressourcenschonend. Wofür brauchen wir <strong>npm</strong>? Mit dem Node Package Manager können wir die Kernfunktionalität von <em>Node.js</em> über Zusatzpakete erweitern. Entwickler aus der ganzen Welt stellen ihre Pakete dort kostenlos zur Verfügung.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Node.js installieren</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>Windows 7/8/10</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Für Windows stellt die offizielle <em>Node.js</em>-Website für die jeweiligen Versionen zur Verfügung: <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener noreferrer\">https://nodejs.org/en/download/</a>. Lade die richtige Datei (.msi) herunter und starte den Installer mit einem Doppelklick. Der Wizard wird dich durch den sehr kurzen Installationsprozess begleiten. Wähle während der Installation die Standardeinstellungen. <em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>MacOS</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Über die offizielle <em>Node.js</em>-Website kannst du den Installer (.pkg) für Node.js herunterladen: <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener noreferrer\">https://nodejs.org/en/download/</a>. Starte den Installer über deinen Mac und befolge die (kurzen) Installationsanweisungen. Wähle während der Installation die Standardeinstellungen. <em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>Linux/Ubuntu</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>In Ubuntu kann <em>Node.js</em> über die Paketverwaltung installiert werden. Da <em>npm</em> nicht automatisch mitinstalliert wird, holen wir dies manuell nach.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">sudo apt-get update\r\nsudo apt-get install nodejs\r\nsudo apt-get install npm</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Mit dem Terminal arbeiten / Die Installation von Node.js und npm prüfen</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Mit dem Terminal können wir unser Betriebssystem textbasiert steuern. Häufigster Vorbehalt gegen das Terminal ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:\r\n<ul>\r\n<li>In <strong>Windows 8 und 10</strong> geht das mit einem Klick mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination [Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li>\r\n<li>In <strong>Windows 7</strong> klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li>\r\n<li>In vielen <strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li>\r\n<li>Auf <strong>MacOS</strong> führt die Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<ul>\r\n<li>Nun prüfen wir, ob auf unserem Betriebssystem <em>Node.js</em> und <em>npm</em> korrekt installiert wurden. Das geht mit den Terminal-Befehlen</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version <em>Node.js </em>und<em> npm </em>installiert sind. Falls eine Fehlermeldung erscheint, solltest du den Installationsvorgang wiederholen.</li>\r\n</ul>\r\n<!-- /wp:list -->','Einen Webserver einrichten (1): Node.js und npm installieren!','','publish','open','open','','node-js-und-npm-installieren','','','2019-08-13 16:50:09','2019-08-13 14:50:09','',0,'https://rike.dev/?p=179',0,'post','',0),(180,1,'2019-06-18 22:58:10','2019-06-18 20:58:10','<!-- wp:paragraph -->\n<p>In diesem Tutorial geht es darum, einen einfachen Webserver auf Node.js-Basis zu installieren und zu testen. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" (2018) entstanden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:more -->\n<p><!--more--></p>\n<!-- /wp:more -->\n<p>Für eine Anleitung zur Installation von Node.js und npm in Vorbereitung auf das Setup des Express.js-Servers, gibt es <a href=\"https://rike.dev/2019/06/18/node-js-und-npm-installieren/\">hier</a> das entsprechende Tutorial.</p>\n<!-- wp:heading -->\n<h2>Den Webserver einrichten / Express.js installieren</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul>\n<li>Lege auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest. Den Ort kannst du beliebig festlegen.</li>\n<li>Innerhalb dieses Ordners lege zwei neue Dateien an (in Windows z. B. per Rechtsklick: \"Neues Textdokument\")!</li>\n<li>Benenne eine Datei um in \"server.js\", die andere in \"index.html\". (In Windows solltest du sicher gehen, dass sich die Dateiendung mitändert, und nicht etwa eine Datei nach dem Schema \"server.js.txt\" und \"index.html.txt\" entstanden ist!)</li>\n<li>Navigiere im Terminal zum neu angelegten Ordner. Der Befehl dazu lautet \"cd\" gefolgt vom entsprechenden Pfad. Für ein Windows-System könnte der Befehl so lauten: <!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Neues-Projekt1</pre>\n<!-- /wp:preformatted --> Für ein macOS-System wäre dies ein Beispiel-Befehl: <!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Neues-Projekt1</pre>\n<!-- /wp:preformatted --> Wenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</li>\n<li>Installiere in diesem Ordner das <em>npm</em>-Paket \"Express.js\", den de-Facto-Standard für Webanwendungen unter Node.js mit dem Terminal-Befehl</li>\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">npm install express</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<ul>\n<li>Öffne die Datei \"server.js\" in einem Texteditor (z. B. \"Sublime\") und füge diesen Quellcode ein:</li>\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">const express = require(\'express\');\nconst app = express();\n\napp.use(express.static(__dirname + \'/dist\'));\n\napp.get(\'/\', function (req, res) {\nres.sendFile(__dirname + \'/index.html\');\n})\n\napp.get(\'/about\', function (req, res) {\nres.sendFile(__dirname + \'/about.html\');\n})\n\napp.listen(3000);\nconsole.log(\"server started on port 3000\");</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<ul>\n<li>Öffne die Datei \"index.html\" und füge einen beliebigen Text ein, z. B. \"Hello World!\". Optional kannst du eine weitere Datei \"about.html\" erstellen und diese mit Leben füllen.</li>\n<li>Jetzt müssen wir unseren Webserver nur noch starten. Im Quellcode haben wir ihn bereits angewiesen, die Datei <em>index.html </em>auszugeben.</li>\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:heading -->\n<h2>Den Webserver starten</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Prüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">node server.js</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>Navigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:3000/\">http://127.0.0.1:3000/ </a>oder <a href=\"http://localhost:3000/\">http://localhost:3000/</a>. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. \"Hello World\".</p>\n<p>In diesem Beispiel-Tutorial übernimmt unser Server das Handling der Routen (z. B. /about) für uns. Wir könnten den Server auch noch weitere Aufgaben erfüllen lassen, z. B. die Anbindung einer Datenbank.</p>\n<p>Ein Beispiel zum Ausliefern einer statischen Website durch Express.js findest du hier.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Den Webserver stoppen</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Den gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL http://127.0.0.1:3000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.</p>\n<!-- /wp:paragraph -->','Node.js installieren und einen Webserver starten','','inherit','closed','closed','','30-autosave-v1','','','2019-06-18 22:58:10','2019-06-18 20:58:10','',30,'https://rike.dev/2019/06/18/30-autosave-v1/',0,'revision','',0),(181,1,'2019-06-18 22:44:57','2019-06-18 20:44:57','<!-- wp:paragraph -->\r\n<p>In diesem Tutorial geht es darum, Node.js und npm als Vorbereitung für das Setup eines eigenen kleinen Webservers zu installieren.&nbsp;Dieses Tutorial ist im Rahmen der Bremer&nbsp;<a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a>&nbsp;für den Kurs \"Einführung in die modere Webentwicklung\" (2019) entstanden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Was ist Node.js?</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><em>Node.js</em> ist eine Softwareumgebung für Javascript, welche es ermöglicht, serverseitige Javascript-Anwendungen (-&gt; Webserver) auf einem beliebigen Betriebssystem zu programmieren.&nbsp;Sie erweitert&nbsp;\"klassisches\" Javascript um die notwendigen Funktionen und ist dabei extrem ressourcenschonend. Wofür brauchen wir <strong>npm</strong>?&nbsp;Mit dem Node Package Manager können wir die Kernfunktionalität von <em>Node.js</em> über Zusatzpakete erweitern. Entwickler aus der ganzen Welt stellen ihre Pakete dort kostenlos zur Verfügung.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Node.js installieren</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>Windows 7/8/10</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Für Windows stellt die&nbsp;offizielle <em>Node.js</em>-Website&nbsp;für die jeweiligen Versionen zur Verfügung:&nbsp;<a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>.&nbsp;Lade die richtige Datei (.msi) herunter und starte den Installer mit einem Doppelklick. Der Wizard wird dich durch den sehr kurzen Installationsprozess begleiten. Wähle während der Installation die Standardeinstellungen.&nbsp;<em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>MacOS</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Über die offizielle <em>Node.js</em>-Website kannst du den Installer (.pkg) für Node.js herunterladen:&nbsp;<a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>. Starte den Installer über deinen Mac und befolge die (kurzen) Installationsanweisungen.&nbsp;Wähle während der Installation die Standardeinstellungen.&nbsp;<em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>Linux/Ubuntu</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>In Ubuntu kann <em>Node.js</em> über die Paketverwaltung installiert werden. Da <em>npm</em> nicht automatisch mitinstalliert wird, holen wir dies manuell nach.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">sudo apt-get update\r\nsudo apt-get install nodejs\r\nsudo apt-get install npm</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Mit dem Terminal arbeiten / Die Installation von Node.js und npm prüfen</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Mit dem Terminal können wir unser Betriebssystem&nbsp;textbasiert&nbsp;steuern.&nbsp;Häufigster Vorbehalt gegen das Terminal&nbsp;ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:list -->\r\n<ul><li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:<ul><li>In&nbsp;<strong>Windows 8 und 10</strong>&nbsp;geht das mit einem Klick&nbsp;mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination&nbsp;[Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li><li>In&nbsp;<strong>Windows 7</strong>&nbsp;klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li><li>In vielen&nbsp;<strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li><li>Auf&nbsp;<strong>MacOS</strong>&nbsp;führt die&nbsp;Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li></ul></li><li>Nun&nbsp;prüfen wir, ob auf unserem Betriebssystem <em>Node.js</em> und <em>npm</em> korrekt installiert wurden.&nbsp;Das geht mit den Terminal-Befehlen</li></ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<ul><li>Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version&nbsp;<em>Node.js </em>und<em> npm </em>installiert sind. Falls eine Fehlermeldung erscheint, solltest du den Installationsvorgang wiederholen.</li></ul>\r\n<!-- /wp:list -->','Node.js und npm installieren','','inherit','closed','closed','','179-revision-v1','','','2019-06-18 22:44:57','2019-06-18 20:44:57','',179,'https://rike.dev/2019/06/18/179-revision-v1/',0,'revision','',0),(182,1,'2019-06-18 22:48:02','2019-06-18 20:48:02','<!-- wp:paragraph -->\r\n<p>In diesem Tutorial geht es darum, einen einfachen Webserver auf Node.js-Basis zu installieren und zu testen. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" (2018) entstanden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:more -->\r\n<p><!--more--></p>\r\n<!-- /wp:more -->\r\n<p>Für eine Anleitung zur Installation von Node.js und npm in Vorbereitung auf das Setup des Express.js-Servers, gibt es <a href=\"https://rike.dev/2019/06/18/node-js-und-npm-installieren/\">hier</a> das entsprechende Tutorial.</p>\r\n<!-- wp:heading -->\r\n<h2>Den Webserver einrichten / Express.js installieren</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Lege auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest. Den Ort kannst du beliebig festlegen.</li>\r\n<li>Innerhalb dieses Ordners lege zwei neue Dateien an (in Windows z. B. per Rechtsklick: \"Neues Textdokument\")!</li>\r\n<li>Benenne eine Datei um in \"server.js\", die andere in \"index.html\". (In Windows solltest du sicher gehen, dass sich die Dateiendung mitändert, und nicht etwa eine Datei nach dem Schema \"server.js.txt\" und \"index.html.txt\" entstanden ist!)</li>\r\n<li>Navigiere im Terminal zum neu angelegten Ordner. Der Befehl dazu lautet \"cd\" gefolgt vom entsprechenden Pfad. Für ein Windows-System könnte der Befehl so lauten:\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Neues-Projekt1</pre>\r\n<!-- /wp:preformatted -->\r\n\r\nFür ein macOS-System wäre dies ein Beispiel-Befehl:\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Neues-Projekt1</pre>\r\n<!-- /wp:preformatted -->\r\n\r\nWenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</li>\r\n<li>Installiere in diesem Ordner das <em>npm</em>-Paket \"Express.js\", den de-Facto-Standard für Webanwendungen unter Node.js mit dem Terminal-Befehl</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">npm install express</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Öffne die Datei \"server.js\" in einem Texteditor (z. B. \"Sublime\") und füge diesen Quellcode ein:</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">const express = require(\'express\');\r\nconst app = express();\r\n\r\napp.use(express.static(__dirname + \'/dist\'));\r\n\r\napp.get(\'/\', function (req, res) {\r\nres.sendFile(__dirname + \'/index.html\');\r\n})\r\n\r\napp.listen(3000);\r\nconsole.log(\"server started on port 3000\");</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Öffne die Datei \"index.html\" und füge einen beliebigen Text ein, z. B. \"Hello World!\".</li>\r\n<li>Jetzt müssen wir unseren Webserver nur noch starten. Im Quellcode haben wir ihn bereits angewiesen, die Datei <em>index.html </em>auszugeben.</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Den Webserver starten</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Prüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">node server.js</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Navigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:3000/\">http://127.0.0.1:3000/ </a>oder <a href=\"http://localhost:3000/\">http://localhost:3000/</a>. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. \"Hello World\".</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Den Webserver stoppen</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Den gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL http://127.0.0.1:3000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.</p>\r\n<!-- /wp:paragraph -->','Node.js installieren und einen Webserver starten','','inherit','closed','closed','','30-revision-v1','','','2019-06-18 22:48:02','2019-06-18 20:48:02','',30,'https://rike.dev/2019/06/18/30-revision-v1/',0,'revision','',0),(183,1,'2019-06-18 23:18:00','2019-06-18 21:18:00','In diesem Tutorial geht es darum, einen einfachen Webserver auf Express.js-Basis zu installieren und zu testen. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\" target=\"_blank\" rel=\"noopener noreferrer\">SummerSchool “Informatica Feminale”</a> für den Kurs “Einführung in die modere Webentwicklung” (2019) entstanden.\r\n\r\n<!--more-->\r\n\r\nFür eine Anleitung zur Installation von Node.js und npm in Vorbereitung auf das Setup des Express.js-Servers, gibt es <a href=\"https://rike.dev/2019/06/18/node-js-und-npm-installieren/\" target=\"_blank\" rel=\"noopener noreferrer\">hier</a> das entsprechende Tutorial.\r\n<h2>Den Webserver einrichten / Express.js installieren</h2>\r\n<ul>\r\n 	<li>Lege auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest (z. B. \"Neues-Projekt1\"). Den Ort kannst du beliebig festlegen.</li>\r\n 	<li>Innerhalb dieses Ordners lege eine neue Datei an (in Windows z. B. per Rechtsklick: “Neues Textdokument”) mit dem Namen “server.js”.</li>\r\n 	<li>Innerhalb des gleichen Ordners lege einen neuen Unterordner an mit dem Namen \"public\". Darin erzeugst du eine neue Datei “index.html”.</li>\r\n 	<li>(In Windows solltest du sicher gehen, dass sich die Dateiendung mitändert, und nicht etwa eine Datei nach dem Schema “server.js.txt” und “index.html.txt” entstanden ist!)</li>\r\n 	<li>Navigiere im Terminal zum neu angelegten Ordner (z. B. \"Neues-Projekt1\"). Der Befehl dazu lautet “cd” gefolgt vom entsprechenden Pfad. <em>Den Dateipfad kannst du in Windows mit einem Rechtsklick auf den Ordner unter \"Eigenschaften\" herausfinden.</em> Für ein Windows-System könnte der Befehl so lauten:\r\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Neues-Projekt1</pre>\r\nFür ein macOS-System wäre dies ein Beispiel-Befehl:\r\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Neues-Projekt1</pre>\r\nWenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</li>\r\n 	<li>Installiere in diesem Ordner das <em>npm</em>-Paket “Express.js”, den de-Facto-Standard für Webanwendungen unter Node.js mit dem Terminal-Befehl</li>\r\n</ul>\r\n<pre class=\"wp-block-preformatted\">npm install express</pre>\r\n<ul>\r\n 	<li>Während des Installationsprozesses könnten gelb markierte \"Warnings\" erscheinen; diese kannst du ignorieren.</li>\r\n 	<li>Öffne die Datei “server.js” in einem Texteditor (z. B. “Sublime”), füge diesen Quellcode ein und speichere die Datei:</li>\r\n</ul>\r\n<pre class=\"wp-block-preformatted\">const express = require(\"express\");\r\nconst app = express();\r\n\r\napp.use(express.static(\'public\'));\r\n\r\napp.listen(3000);\r\nconsole.log(\"Server started on port 3000\");</pre>\r\n<ul>\r\n 	<li>Öffne die Datei “index.html” im Unterordner \"public\" im Editor, füge einen beliebigen Text ein, z. B. “Hello World!” und speichere die Datei.</li>\r\n 	<li>Jetzt müssen wir unseren Webserver nur noch starten. Im Quellcode haben wir ihn bereits angewiesen, die Datei <em>index.html </em>auszugeben.</li>\r\n</ul>\r\n<h2>Den Webserver starten</h2>\r\nPrüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad (im Beispiel \"..\\Neues-Projekt1\") befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:\r\n<pre class=\"wp-block-preformatted\">node server.js</pre>\r\nNavigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:3000/\" target=\"_blank\" rel=\"noopener noreferrer\">http://127.0.0.1:3000/ </a>oder <a href=\"http://localhost:3000/\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:3000/</a>. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. “Hello World”.\r\n<h2>Den Webserver stoppen</h2>\r\nDen gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL http://127.0.0.1:3000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.','Einen Webserver einrichten (2): Express.js für eine statische Website installieren','','publish','open','open','','express-js-statische-website','','','2019-07-22 21:01:55','2019-07-22 19:01:55','',0,'https://rike.dev/?p=183',0,'post','',3),(184,1,'2019-06-18 22:58:02','2019-06-18 20:58:02','','Einen Webserver für eine statische Website mit Express.js einrichten','','inherit','closed','closed','','183-revision-v1','','','2019-06-18 22:58:02','2019-06-18 20:58:02','',183,'https://rike.dev/2019/06/18/183-revision-v1/',0,'revision','',0),(185,1,'2019-06-18 22:58:43','2019-06-18 20:58:43','<!-- wp:paragraph -->\r\n<p>In diesem Tutorial geht es darum, einen einfachen Webserver auf Node.js-Basis zu installieren und zu testen. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" (2018) entstanden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:more -->\r\n<p><!--more--></p>\r\n<!-- /wp:more -->\r\n<p>Für eine Anleitung zur Installation von Node.js und npm in Vorbereitung auf das Setup des Express.js-Servers, gibt es <a href=\"https://rike.dev/2019/06/18/node-js-und-npm-installieren/\">hier</a> das entsprechende Tutorial.</p>\r\n<!-- wp:heading -->\r\n<h2>Den Webserver einrichten / Express.js installieren</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Lege auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest. Den Ort kannst du beliebig festlegen.</li>\r\n<li>Innerhalb dieses Ordners lege zwei neue Dateien an (in Windows z. B. per Rechtsklick: \"Neues Textdokument\")!</li>\r\n<li>Benenne eine Datei um in \"server.js\", die andere in \"index.html\". (In Windows solltest du sicher gehen, dass sich die Dateiendung mitändert, und nicht etwa eine Datei nach dem Schema \"server.js.txt\" und \"index.html.txt\" entstanden ist!)</li>\r\n<li>Navigiere im Terminal zum neu angelegten Ordner. Der Befehl dazu lautet \"cd\" gefolgt vom entsprechenden Pfad. Für ein Windows-System könnte der Befehl so lauten: <!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Neues-Projekt1</pre>\r\n<!-- /wp:preformatted --> Für ein macOS-System wäre dies ein Beispiel-Befehl: <!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Neues-Projekt1</pre>\r\n<!-- /wp:preformatted --> Wenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</li>\r\n<li>Installiere in diesem Ordner das <em>npm</em>-Paket \"Express.js\", den de-Facto-Standard für Webanwendungen unter Node.js mit dem Terminal-Befehl</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">npm install express</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Öffne die Datei \"server.js\" in einem Texteditor (z. B. \"Sublime\") und füge diesen Quellcode ein:</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">const express = require(\'express\');\r\nconst app = express();\r\n\r\napp.use(express.static(__dirname + \'/dist\'));\r\n\r\napp.get(\'/\', function (req, res) {\r\nres.sendFile(__dirname + \'/index.html\');\r\n})\r\n\r\napp.get(\'/about\', function (req, res) {\r\nres.sendFile(__dirname + \'/about.html\');\r\n})\r\n\r\napp.listen(3000);\r\nconsole.log(\"server started on port 3000\");</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Öffne die Datei \"index.html\" und füge einen beliebigen Text ein, z. B. \"Hello World!\". Optional kannst du eine weitere Datei \"about.html\" erstellen und diese mit Leben füllen.</li>\r\n<li>Jetzt müssen wir unseren Webserver nur noch starten. Im Quellcode haben wir ihn bereits angewiesen, die Datei <em>index.html </em>auszugeben.</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Den Webserver starten</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Prüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">node server.js</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Navigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:3000/\">http://127.0.0.1:3000/ </a>oder <a href=\"http://localhost:3000/\">http://localhost:3000/</a>. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. \"Hello World\".</p>\r\n<p>In diesem Beispiel-Tutorial übernimmt unser Server das Handling der Routen (z. B. /about) für uns. Wir könnten den Server auch noch weitere Aufgaben erfüllen lassen, z. B. die Anbindung einer Datenbank.</p>\r\n<p>Ein Beispiel zum Ausliefern einer statischen Website durch Express.js findest du <a href=\"https://rike.dev/2019/06/18/express-js-statische-website/\">hier</a>.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Den Webserver stoppen</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Den gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL http://127.0.0.1:3000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.</p>\r\n<!-- /wp:paragraph -->','Node.js installieren und einen Webserver starten','','inherit','closed','closed','','30-revision-v1','','','2019-06-18 22:58:43','2019-06-18 20:58:43','',30,'https://rike.dev/2019/06/18/30-revision-v1/',0,'revision','',0),(186,1,'2019-06-18 23:00:40','2019-06-18 21:00:40','<!-- wp:paragraph -->\r\n<p>In diesem Tutorial geht es darum, Node.js und npm als Vorbereitung für das Setup eines eigenen kleinen Webservers zu installieren. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" (2019) entstanden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Was ist Node.js?</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><em>Node.js</em> ist eine Softwareumgebung für Javascript, welche es ermöglicht, serverseitige Javascript-Anwendungen (-&gt; Webserver) auf einem beliebigen Betriebssystem zu programmieren. Sie erweitert \"klassisches\" Javascript um die notwendigen Funktionen und ist dabei extrem ressourcenschonend. Wofür brauchen wir <strong>npm</strong>? Mit dem Node Package Manager können wir die Kernfunktionalität von <em>Node.js</em> über Zusatzpakete erweitern. Entwickler aus der ganzen Welt stellen ihre Pakete dort kostenlos zur Verfügung.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Node.js installieren</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>Windows 7/8/10</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Für Windows stellt die offizielle <em>Node.js</em>-Website für die jeweiligen Versionen zur Verfügung: <a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>. Lade die richtige Datei (.msi) herunter und starte den Installer mit einem Doppelklick. Der Wizard wird dich durch den sehr kurzen Installationsprozess begleiten. Wähle während der Installation die Standardeinstellungen. <em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>MacOS</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Über die offizielle <em>Node.js</em>-Website kannst du den Installer (.pkg) für Node.js herunterladen: <a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>. Starte den Installer über deinen Mac und befolge die (kurzen) Installationsanweisungen. Wähle während der Installation die Standardeinstellungen. <em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>Linux/Ubuntu</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>In Ubuntu kann <em>Node.js</em> über die Paketverwaltung installiert werden. Da <em>npm</em> nicht automatisch mitinstalliert wird, holen wir dies manuell nach.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">sudo apt-get update\r\nsudo apt-get install nodejs\r\nsudo apt-get install npm</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Mit dem Terminal arbeiten / Die Installation von Node.js und npm prüfen</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Mit dem Terminal können wir unser Betriebssystem textbasiert steuern. Häufigster Vorbehalt gegen das Terminal ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:\r\n<ul>\r\n<li>In <strong>Windows 8 und 10</strong> geht das mit einem Klick mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination [Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li>\r\n<li>In <strong>Windows 7</strong> klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li>\r\n<li>In vielen <strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li>\r\n<li>Auf <strong>MacOS</strong> führt die Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li>\r\n</ul>\r\n</li>\r\n<li>Nun prüfen wir, ob auf unserem Betriebssystem <em>Node.js</em> und <em>npm</em> korrekt installiert wurden. Das geht mit den Terminal-Befehlen</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version <em>Node.js </em>und<em> npm </em>installiert sind. Falls eine Fehlermeldung erscheint, solltest du den Installationsvorgang wiederholen.</li>\r\n</ul>\r\n<!-- /wp:list -->','Node.js und npm installieren','','inherit','closed','closed','','179-revision-v1','','','2019-06-18 23:00:40','2019-06-18 21:00:40','',179,'https://rike.dev/2019/06/18/179-revision-v1/',0,'revision','',0),(187,1,'2019-06-18 23:00:54','2019-06-18 21:00:54','<!-- wp:paragraph -->\r\n<p>In diesem Tutorial geht es darum, Node.js und npm als Vorbereitung für das Setup eines eigenen kleinen Webservers zu installieren. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" (2019) entstanden.</p>\r\n<p><!--more--></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Was ist Node.js?</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><em>Node.js</em> ist eine Softwareumgebung für Javascript, welche es ermöglicht, serverseitige Javascript-Anwendungen (-&gt; Webserver) auf einem beliebigen Betriebssystem zu programmieren. Sie erweitert \"klassisches\" Javascript um die notwendigen Funktionen und ist dabei extrem ressourcenschonend. Wofür brauchen wir <strong>npm</strong>? Mit dem Node Package Manager können wir die Kernfunktionalität von <em>Node.js</em> über Zusatzpakete erweitern. Entwickler aus der ganzen Welt stellen ihre Pakete dort kostenlos zur Verfügung.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Node.js installieren</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>Windows 7/8/10</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Für Windows stellt die offizielle <em>Node.js</em>-Website für die jeweiligen Versionen zur Verfügung: <a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>. Lade die richtige Datei (.msi) herunter und starte den Installer mit einem Doppelklick. Der Wizard wird dich durch den sehr kurzen Installationsprozess begleiten. Wähle während der Installation die Standardeinstellungen. <em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>MacOS</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Über die offizielle <em>Node.js</em>-Website kannst du den Installer (.pkg) für Node.js herunterladen: <a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>. Starte den Installer über deinen Mac und befolge die (kurzen) Installationsanweisungen. Wähle während der Installation die Standardeinstellungen. <em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>Linux/Ubuntu</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>In Ubuntu kann <em>Node.js</em> über die Paketverwaltung installiert werden. Da <em>npm</em> nicht automatisch mitinstalliert wird, holen wir dies manuell nach.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">sudo apt-get update\r\nsudo apt-get install nodejs\r\nsudo apt-get install npm</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Mit dem Terminal arbeiten / Die Installation von Node.js und npm prüfen</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Mit dem Terminal können wir unser Betriebssystem textbasiert steuern. Häufigster Vorbehalt gegen das Terminal ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:\r\n<ul>\r\n<li>In <strong>Windows 8 und 10</strong> geht das mit einem Klick mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination [Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li>\r\n<li>In <strong>Windows 7</strong> klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li>\r\n<li>In vielen <strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li>\r\n<li>Auf <strong>MacOS</strong> führt die Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li>\r\n</ul>\r\n</li>\r\n<li>Nun prüfen wir, ob auf unserem Betriebssystem <em>Node.js</em> und <em>npm</em> korrekt installiert wurden. Das geht mit den Terminal-Befehlen</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version <em>Node.js </em>und<em> npm </em>installiert sind. Falls eine Fehlermeldung erscheint, solltest du den Installationsvorgang wiederholen.</li>\r\n</ul>\r\n<!-- /wp:list -->','Node.js und npm installieren','','inherit','closed','closed','','179-revision-v1','','','2019-06-18 23:00:54','2019-06-18 21:00:54','',179,'https://rike.dev/2019/06/18/179-revision-v1/',0,'revision','',0),(188,1,'2019-06-18 23:02:55','2019-06-18 21:02:55','<!-- wp:paragraph -->\n<p>In diesem Tutorial geht es darum, Node.js und npm als Vorbereitung für das Setup eines eigenen kleinen Webservers zu installieren. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" (2019) entstanden.</p>\n<p><!--more--></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Was ist Node.js?</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p><em>Node.js</em> ist eine Softwareumgebung für Javascript, welche es ermöglicht, serverseitige Javascript-Anwendungen (-&gt; Webserver) auf einem beliebigen Betriebssystem zu programmieren. Sie erweitert \"klassisches\" Javascript um die notwendigen Funktionen und ist dabei extrem ressourcenschonend. Wofür brauchen wir <strong>npm</strong>? Mit dem Node Package Manager können wir die Kernfunktionalität von <em>Node.js</em> über Zusatzpakete erweitern. Entwickler aus der ganzen Welt stellen ihre Pakete dort kostenlos zur Verfügung.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Node.js installieren</h2>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5>Windows 7/8/10</h5>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Für Windows stellt die offizielle <em>Node.js</em>-Website für die jeweiligen Versionen zur Verfügung: <a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>. Lade die richtige Datei (.msi) herunter und starte den Installer mit einem Doppelklick. Der Wizard wird dich durch den sehr kurzen Installationsprozess begleiten. Wähle während der Installation die Standardeinstellungen. <em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5>MacOS</h5>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Über die offizielle <em>Node.js</em>-Website kannst du den Installer (.pkg) für Node.js herunterladen: <a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>. Starte den Installer über deinen Mac und befolge die (kurzen) Installationsanweisungen. Wähle während der Installation die Standardeinstellungen. <em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5>Linux/Ubuntu</h5>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>In Ubuntu kann <em>Node.js</em> über die Paketverwaltung installiert werden. Da <em>npm</em> nicht automatisch mitinstalliert wird, holen wir dies manuell nach.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">sudo apt-get update\nsudo apt-get install nodejs\nsudo apt-get install npm</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:heading -->\n<h2>Mit dem Terminal arbeiten / Die Installation von Node.js und npm prüfen</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Mit dem Terminal können wir unser Betriebssystem textbasiert steuern. Häufigster Vorbehalt gegen das Terminal ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul>\n<li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:\n<ul>\n<li>In <strong>Windows 8 und 10</strong> geht das mit einem Klick mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination [Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li>\n<li>In <strong>Windows 7</strong> klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li>\n<li>In vielen <strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li>\n<li>Auf <strong>MacOS</strong> führt die Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li>\n</ul>\n</li>\n<li>Nun prüfen wir, ob auf unserem Betriebssystem <em>Node.js</em> und <em>npm</em> korrekt installiert wurden. Das geht mit den Terminal-Befehlen</li>\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">node -v\nnpm -v</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<ul>\n<li>Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version <em>Node.js </em>und<em> npm </em>installiert sind. Falls eine Fehlermeldung erscheint, solltest du den Installationsvorgang wiederholen.</li>\n</ul>\n<!-- /wp:list -->','Node.js und npm in Vorbeinstallieren','','inherit','closed','closed','','179-autosave-v1','','','2019-06-18 23:02:55','2019-06-18 21:02:55','',179,'https://rike.dev/2019/06/18/179-autosave-v1/',0,'revision','',0),(189,1,'2019-06-18 23:03:31','2019-06-18 21:03:31','<!-- wp:paragraph -->\r\n<p>In diesem Tutorial geht es darum, Node.js und npm als Vorbereitung für das Setup eines eigenen kleinen Webservers zu installieren. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" (2019) entstanden.</p>\r\n<p><!--more--></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Was ist Node.js?</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><em>Node.js</em> ist eine Softwareumgebung für Javascript, welche es ermöglicht, serverseitige Javascript-Anwendungen (-&gt; Webserver) auf einem beliebigen Betriebssystem zu programmieren. Sie erweitert \"klassisches\" Javascript um die notwendigen Funktionen und ist dabei extrem ressourcenschonend. Wofür brauchen wir <strong>npm</strong>? Mit dem Node Package Manager können wir die Kernfunktionalität von <em>Node.js</em> über Zusatzpakete erweitern. Entwickler aus der ganzen Welt stellen ihre Pakete dort kostenlos zur Verfügung.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Node.js installieren</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>Windows 7/8/10</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Für Windows stellt die offizielle <em>Node.js</em>-Website für die jeweiligen Versionen zur Verfügung: <a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>. Lade die richtige Datei (.msi) herunter und starte den Installer mit einem Doppelklick. Der Wizard wird dich durch den sehr kurzen Installationsprozess begleiten. Wähle während der Installation die Standardeinstellungen. <em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>MacOS</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Über die offizielle <em>Node.js</em>-Website kannst du den Installer (.pkg) für Node.js herunterladen: <a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>. Starte den Installer über deinen Mac und befolge die (kurzen) Installationsanweisungen. Wähle während der Installation die Standardeinstellungen. <em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>Linux/Ubuntu</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>In Ubuntu kann <em>Node.js</em> über die Paketverwaltung installiert werden. Da <em>npm</em> nicht automatisch mitinstalliert wird, holen wir dies manuell nach.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">sudo apt-get update\r\nsudo apt-get install nodejs\r\nsudo apt-get install npm</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Mit dem Terminal arbeiten / Die Installation von Node.js und npm prüfen</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Mit dem Terminal können wir unser Betriebssystem textbasiert steuern. Häufigster Vorbehalt gegen das Terminal ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:\r\n<ul>\r\n<li>In <strong>Windows 8 und 10</strong> geht das mit einem Klick mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination [Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li>\r\n<li>In <strong>Windows 7</strong> klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li>\r\n<li>In vielen <strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li>\r\n<li>Auf <strong>MacOS</strong> führt die Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li>\r\n</ul>\r\n</li>\r\n<li>Nun prüfen wir, ob auf unserem Betriebssystem <em>Node.js</em> und <em>npm</em> korrekt installiert wurden. Das geht mit den Terminal-Befehlen</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version <em>Node.js </em>und<em> npm </em>installiert sind. Falls eine Fehlermeldung erscheint, solltest du den Installationsvorgang wiederholen.</li>\r\n</ul>\r\n<!-- /wp:list -->','Einen Webserver einrichten (1): Node.js und npm installieren','','inherit','closed','closed','','179-revision-v1','','','2019-06-18 23:03:31','2019-06-18 21:03:31','',179,'https://rike.dev/2019/06/18/179-revision-v1/',0,'revision','',0),(190,1,'2019-06-18 23:13:34','2019-06-18 21:13:34','In diesem Tutorial geht es darum, einen einfachen Webserver auf Express.js-Basis zu installieren und zu testen. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool “Informatica Feminale”</a> für den Kurs “Einführung in die modere Webentwicklung” (2019) entstanden.\r\n\r\nFür eine Anleitung zur Installation von Node.js und npm in Vorbereitung auf das Setup des Express.js-Servers, gibt es <a href=\"https://rike.dev/2019/06/18/node-js-und-npm-installieren/\">hier</a> das entsprechende Tutorial.\r\n<h2>Den Webserver einrichten / Express.js installieren</h2>\r\n<ul>\r\n 	<li>Lege auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest. Den Ort kannst du beliebig festlegen.</li>\r\n 	<li>Innerhalb dieses Ordners lege zwei neue Dateien an (in Windows z. B. per Rechtsklick: “Neues Textdokument”)!</li>\r\n 	<li>Benenne eine Datei um in “server.js”, die andere in “index.html”. (In Windows solltest du sicher gehen, dass sich die Dateiendung mitändert, und nicht etwa eine Datei nach dem Schema “server.js.txt” und “index.html.txt” entstanden ist!)</li>\r\n 	<li>Navigiere im Terminal zum neu angelegten Ordner. Der Befehl dazu lautet “cd” gefolgt vom entsprechenden Pfad. Für ein Windows-System könnte der Befehl so lauten:\r\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Neues-Projekt1</pre>\r\nFür ein macOS-System wäre dies ein Beispiel-Befehl:\r\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Neues-Projekt1</pre>\r\nWenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</li>\r\n 	<li>Installiere in diesem Ordner das <em>npm</em>-Paket “Express.js”, den de-Facto-Standard für Webanwendungen unter Node.js mit dem Terminal-Befehl</li>\r\n</ul>\r\n<pre class=\"wp-block-preformatted\">npm install express</pre>\r\n<ul>\r\n 	<li>Öffne die Datei “server.js” in einem Texteditor (z. B. “Sublime”) und füge diesen Quellcode ein:</li>\r\n</ul>\r\n<pre class=\"wp-block-preformatted\">const express = require(\"express\");\r\nconst app = express();\r\n\r\napp.use(express.static(\'public\'));\r\n\r\napp.listen(3000);\r\nconsole.log(\"Server started on port 3000\");</pre>\r\n<ul>\r\n 	<li>Öffne die Datei “index.html” und füge einen beliebigen Text ein, z. B. “Hello World!”. Optional kannst du eine weitere Datei “about.html” erstellen und diese mit Leben füllen.</li>\r\n 	<li>Jetzt müssen wir unseren Webserver nur noch starten. Im Quellcode haben wir ihn bereits angewiesen, die Datei <em>index.html </em>auszugeben.</li>\r\n</ul>\r\n<h2>Den Webserver starten</h2>\r\nPrüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:\r\n<pre class=\"wp-block-preformatted\">node server.js</pre>\r\nNavigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:3000/\">http://127.0.0.1:3000/ </a>oder <a href=\"http://localhost:3000/\">http://localhost:3000/</a>. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. “Hello World”.\r\n\r\nIn diesem Beispiel-Tutorial übernimmt unser Server das Handling der Routen (z. B. /about) für uns. Wir könnten den Server auch noch weitere Aufgaben erfüllen lassen, z. B. die Anbindung einer Datenbank.\r\n\r\nEin Beispiel zum Ausliefern einer statischen Website durch Express.js findest du <a href=\"https://rike.dev/2019/06/18/express-js-statische-website/\">hier</a>.\r\n<h2>Den Webserver stoppen</h2>\r\nDen gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL http://127.0.0.1:3000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.','Einen Webserver einrichten (2): Express.js für eine statische Website installieren','','inherit','closed','closed','','183-revision-v1','','','2019-06-18 23:13:34','2019-06-18 21:13:34','',183,'https://rike.dev/2019/06/18/183-revision-v1/',0,'revision','',0),(191,1,'2019-06-18 23:18:00','2019-06-18 21:18:00','In diesem Tutorial geht es darum, einen einfachen Webserver auf Express.js-Basis zu installieren und zu testen. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool “Informatica Feminale”</a> für den Kurs “Einführung in die modere Webentwicklung” (2019) entstanden.\r\n\r\nFür eine Anleitung zur Installation von Node.js und npm in Vorbereitung auf das Setup des Express.js-Servers, gibt es <a href=\"https://rike.dev/2019/06/18/node-js-und-npm-installieren/\">hier</a> das entsprechende Tutorial.\r\n<h2>Den Webserver einrichten / Express.js installieren</h2>\r\n<ul>\r\n 	<li>Lege auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest. Den Ort kannst du beliebig festlegen.</li>\r\n 	<li>Innerhalb dieses Ordners lege eine neue Datei an (in Windows z. B. per Rechtsklick: “Neues Textdokument”) mit dem Namen “server.js”.</li>\r\n 	<li>Innerhalb des gleichen Ordners lege einen neuen Unterordner an mit dem Namen \"public\". Darin erzeugst du eine neue Datei “index.html”.</li>\r\n 	<li>(In Windows solltest du sicher gehen, dass sich die Dateiendung mitändert, und nicht etwa eine Datei nach dem Schema “server.js.txt” und “index.html.txt” entstanden ist!)</li>\r\n 	<li>Navigiere im Terminal zum neu angelegten Ordner. Der Befehl dazu lautet “cd” gefolgt vom entsprechenden Pfad. Für ein Windows-System könnte der Befehl so lauten:\r\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Neues-Projekt1</pre>\r\nFür ein macOS-System wäre dies ein Beispiel-Befehl:\r\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Neues-Projekt1</pre>\r\nWenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</li>\r\n 	<li>Installiere in diesem Ordner das <em>npm</em>-Paket “Express.js”, den de-Facto-Standard für Webanwendungen unter Node.js mit dem Terminal-Befehl</li>\r\n</ul>\r\n<pre class=\"wp-block-preformatted\">npm install express</pre>\r\n<ul>\r\n 	<li>Öffne die Datei “server.js” in einem Texteditor (z. B. “Sublime”) und füge diesen Quellcode ein:</li>\r\n</ul>\r\n<pre class=\"wp-block-preformatted\">const express = require(\"express\");\r\nconst app = express();\r\n\r\napp.use(express.static(\'public\'));\r\n\r\napp.listen(3000);\r\nconsole.log(\"Server started on port 3000\");</pre>\r\n<ul>\r\n 	<li>Öffne die Datei “index.html” im Unterordner \"public\" und füge einen beliebigen Text ein, z. B. “Hello World!”.</li>\r\n 	<li>Jetzt müssen wir unseren Webserver nur noch starten. Im Quellcode haben wir ihn bereits angewiesen, die Datei <em>index.html </em>auszugeben.</li>\r\n</ul>\r\n<h2>Den Webserver starten</h2>\r\nPrüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad (im Beispiel \"..\\Neues-Projekt1\") befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:\r\n<pre class=\"wp-block-preformatted\">node server.js</pre>\r\nNavigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:3000/\">http://127.0.0.1:3000/ </a>oder <a href=\"http://localhost:3000/\">http://localhost:3000/</a>. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. “Hello World”.\r\n<h2>Den Webserver stoppen</h2>\r\nDen gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL http://127.0.0.1:3000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.','Einen Webserver einrichten (2): Express.js für eine statische Website installieren','','inherit','closed','closed','','183-revision-v1','','','2019-06-18 23:18:00','2019-06-18 21:18:00','',183,'https://rike.dev/2019/06/18/183-revision-v1/',0,'revision','',0),(192,1,'2019-06-18 23:18:14','2019-06-18 21:18:14','In diesem Tutorial geht es darum, einen einfachen Webserver auf Express.js-Basis zu installieren und zu testen. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool “Informatica Feminale”</a> für den Kurs “Einführung in die modere Webentwicklung” (2019) entstanden.\r\n\r\n<!--more-->\r\n\r\nFür eine Anleitung zur Installation von Node.js und npm in Vorbereitung auf das Setup des Express.js-Servers, gibt es <a href=\"https://rike.dev/2019/06/18/node-js-und-npm-installieren/\">hier</a> das entsprechende Tutorial.\r\n<h2>Den Webserver einrichten / Express.js installieren</h2>\r\n<ul>\r\n 	<li>Lege auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest. Den Ort kannst du beliebig festlegen.</li>\r\n 	<li>Innerhalb dieses Ordners lege eine neue Datei an (in Windows z. B. per Rechtsklick: “Neues Textdokument”) mit dem Namen “server.js”.</li>\r\n 	<li>Innerhalb des gleichen Ordners lege einen neuen Unterordner an mit dem Namen \"public\". Darin erzeugst du eine neue Datei “index.html”.</li>\r\n 	<li>(In Windows solltest du sicher gehen, dass sich die Dateiendung mitändert, und nicht etwa eine Datei nach dem Schema “server.js.txt” und “index.html.txt” entstanden ist!)</li>\r\n 	<li>Navigiere im Terminal zum neu angelegten Ordner. Der Befehl dazu lautet “cd” gefolgt vom entsprechenden Pfad. Für ein Windows-System könnte der Befehl so lauten:\r\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Neues-Projekt1</pre>\r\nFür ein macOS-System wäre dies ein Beispiel-Befehl:\r\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Neues-Projekt1</pre>\r\nWenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</li>\r\n 	<li>Installiere in diesem Ordner das <em>npm</em>-Paket “Express.js”, den de-Facto-Standard für Webanwendungen unter Node.js mit dem Terminal-Befehl</li>\r\n</ul>\r\n<pre class=\"wp-block-preformatted\">npm install express</pre>\r\n<ul>\r\n 	<li>Öffne die Datei “server.js” in einem Texteditor (z. B. “Sublime”) und füge diesen Quellcode ein:</li>\r\n</ul>\r\n<pre class=\"wp-block-preformatted\">const express = require(\"express\");\r\nconst app = express();\r\n\r\napp.use(express.static(\'public\'));\r\n\r\napp.listen(3000);\r\nconsole.log(\"Server started on port 3000\");</pre>\r\n<ul>\r\n 	<li>Öffne die Datei “index.html” im Unterordner \"public\" und füge einen beliebigen Text ein, z. B. “Hello World!”.</li>\r\n 	<li>Jetzt müssen wir unseren Webserver nur noch starten. Im Quellcode haben wir ihn bereits angewiesen, die Datei <em>index.html </em>auszugeben.</li>\r\n</ul>\r\n<h2>Den Webserver starten</h2>\r\nPrüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad (im Beispiel \"..\\Neues-Projekt1\") befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:\r\n<pre class=\"wp-block-preformatted\">node server.js</pre>\r\nNavigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:3000/\">http://127.0.0.1:3000/ </a>oder <a href=\"http://localhost:3000/\">http://localhost:3000/</a>. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. “Hello World”.\r\n<h2>Den Webserver stoppen</h2>\r\nDen gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL http://127.0.0.1:3000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.','Einen Webserver einrichten (2): Express.js für eine statische Website installieren','','inherit','closed','closed','','183-revision-v1','','','2019-06-18 23:18:14','2019-06-18 21:18:14','',183,'https://rike.dev/2019/06/18/183-revision-v1/',0,'revision','',0),(193,1,'2019-06-18 23:26:09','2019-06-18 21:26:09','In diesem Tutorial geht es darum, einen einfachen Webserver auf Express.js-Basis zu installieren und zu testen. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool “Informatica Feminale”</a> für den Kurs “Einführung in die modere Webentwicklung” (2019) entstanden.\r\n\r\n<!--more-->\r\n\r\nFür eine Anleitung zur Installation von Node.js und npm in Vorbereitung auf das Setup des Express.js-Servers, gibt es <a href=\"https://rike.dev/2019/06/18/node-js-und-npm-installieren/\">hier</a> das entsprechende Tutorial.\r\n<h2>Den Webserver einrichten / Express.js installieren</h2>\r\n<ul>\r\n 	<li>Lege auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest. Den Ort kannst du beliebig festlegen.</li>\r\n 	<li>Innerhalb dieses Ordners lege eine neue Datei an (in Windows z. B. per Rechtsklick: “Neues Textdokument”) mit dem Namen “server.js”.</li>\r\n 	<li>Innerhalb des gleichen Ordners lege einen neuen Unterordner an mit dem Namen \"public\". Darin erzeugst du eine neue Datei “index.html”.</li>\r\n 	<li>(In Windows solltest du sicher gehen, dass sich die Dateiendung mitändert, und nicht etwa eine Datei nach dem Schema “server.js.txt” und “index.html.txt” entstanden ist!)</li>\r\n 	<li>Navigiere im Terminal zum neu angelegten Ordner. Der Befehl dazu lautet “cd” gefolgt vom entsprechenden Pfad. Für ein Windows-System könnte der Befehl so lauten:\r\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Neues-Projekt1</pre>\r\nFür ein macOS-System wäre dies ein Beispiel-Befehl:\r\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Neues-Projekt1</pre>\r\nWenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</li>\r\n 	<li>Installiere in diesem Ordner das <em>npm</em>-Paket “Express.js”, den de-Facto-Standard für Webanwendungen unter Node.js mit dem Terminal-Befehl</li>\r\n</ul>\r\n<pre class=\"wp-block-preformatted\">npm install express</pre>\r\n<ul>\r\n 	<li>Öffne die Datei “server.js” in einem Texteditor (z. B. “Sublime”) und füge diesen Quellcode ein:</li>\r\n</ul>\r\n<pre class=\"wp-block-preformatted\">const express = require(\"express\");\r\nconst app = express();\r\n\r\napp.use(express.static(\'public\'));\r\n\r\napp.listen(3000);\r\nconsole.log(\"Server started on port 3000\");</pre>\r\n<ul>\r\n 	<li>Öffne die Datei “index.html” im Unterordner \"public\" und füge einen beliebigen Text ein, z. B. “Hello World!”.</li>\r\n 	<li>Jetzt müssen wir unseren Webserver nur noch starten. Im Quellcode haben wir ihn bereits angewiesen, die Datei <em>index.html </em>auszugeben.</li>\r\n</ul>\r\n<h2>Den Webserver starten</h2>\r\nPrüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad (im Beispiel \"..\\Neues-Projekt1\") befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:\r\n<pre class=\"wp-block-preformatted\">node server.js</pre>\r\nNavigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:3000/\">http://127.0.0.1:3000/ </a>oder <a href=\"http://localhost:3000/\">http://localhost:3000/</a>. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. “Hello World”.\r\n<h2>Den Webserver stoppen</h2>\r\nDen gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL http://127.0.0.1:3000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.','Einen Webserver einrichten (2): Express.js für eine statische Website installieren','','inherit','closed','closed','','183-revision-v1','','','2019-06-18 23:26:09','2019-06-18 21:26:09','',183,'https://rike.dev/2019/06/18/183-revision-v1/',0,'revision','',0),(194,1,'2019-06-19 11:50:14','2019-06-19 09:50:14','<!-- wp:paragraph -->\r\n<p>In diesem Tutorial geht es darum, den auf Python basierenden SimpleHTTP-Server zu installieren und zu testen. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" entstanden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:more -->\r\n<p><!--more--></p>\r\n<!-- /wp:more -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Je nachdem, welche Python-Version auf deinem Betriebssystem installiert ist, befolge die weiteren Schritte zur Installation eines kleinen Webservers auf deinem Computer. Wie du die Python-Version identifizierst, lernst du <a href=\"http://rike.dev/2017/07/28/der-terminal-und-python-installieren/\">in diesem Tutorial</a>.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Lege auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest. Den Ort kannst du beliebig festlegen.</li>\r\n<li>Innerhalb dieses Ordners lege eine neue Datei an (in Windows z. B. per Rechtsklick: \"Neues Textdokument\")!</li>\r\n<li>Benenne die Datei um in \"index.html\"!</li>\r\n<li>Öffne die Datei in einem Texteditor (z. B. \"Sublime\") und füge einen beliebigen Text ein, z. B. \"Hello World!\"</li>\r\n<li>Öffne ein neues Terminal-Fenster (es ist kein Problem, mehrere Terminal-Fenster parallel laufen zu lassen) und navigiere zum neu angelegten Ordner. Der Befehl dazu lautet \"cd\" gefolgt vom entsprechenden Pfad.</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Für ein Windows-System könnte der Befehl so lauten:</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Webentwicklung</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Für ein macOS-System wäre dies ein Beispiel-Befehl:</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Webentwicklung</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Wenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Da wir Python installiert haben, und Python in der Standardausführung bereits ein kleines \"Werkzeug\" für einen einfach Webserver mitbringt, müssen wir diesen Webserver jetzt nur noch starten.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Anleitung für Python 2.x.x</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Prüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">python -m SimpleHTTPServer</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Solltest du eine Warnmeldung von deiner Firewall erhalten, klicke auf \"Ok\" bzw. \"Zulassen\".</li>\r\n<li>Navigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:8000/\">http://127.0.0.1:8000/</a>.  Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. \"Hello World\".</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Glückwunsch! Du hast deinen ersten lokalen Webserver eingerichtet!</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Anleitung für Python 3.x.x</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Prüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">python -m http.server</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Solltest du eine Warnmeldung von deiner Firewall erhalten, klicke auf \"Ok\" bzw. \"Zulassen\".</li>\r\n<li>Navigiere in deinem Browser zur URL http://127.0.0.1:8000/. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. \"Hello World\".</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:image {\"id\":21,\"align\":\"center\",\"linkDestination\":\"media\",\"className\":\"wp-image-291 size-full imagedropshadow\"} -->\r\n<div class=\"wp-block-image wp-image-291 size-full imagedropshadow\">\r\n<figure class=\"aligncenter\"><a class=\"\" href=\"https://rike.dev/wp-content/uploads/2019/04/5.png\"><img class=\"wp-image-21\" src=\"https://rike.dev/wp-content/uploads/2019/04/5.png\" alt=\"&quot;Hello World&quot; im Browser unter der lokalen URL http://127.0.0.1:8000/\" /></a>\r\n<figcaption>\"Hello World\" im Browser unter der lokalen URL http://127.0.0.1:8000/</figcaption>\r\n</figure>\r\n</div>\r\n<!-- /wp:image -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Den Webserver stoppen</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Den gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL http://127.0.0.1:8000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.</li>\r\n</ul>\r\n<!-- /wp:list -->','Einen einfachen Webserver mit Python 2.x.x oder 3.x.x installieren','','inherit','closed','closed','','20-revision-v1','','','2019-06-19 11:50:14','2019-06-19 09:50:14','',20,'https://rike.dev/2019/06/19/20-revision-v1/',0,'revision','',0),(195,1,'2019-06-19 11:50:29','2019-06-19 09:50:29','<!-- wp:paragraph -->\r\n<p>In diesem Tutorial lernst du, wie du mit dem Terminal deines Betriebssystems arbeitest, die Programmiersprache installierst und testest. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" entstanden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:more -->\r\n<p><!--more--></p>\r\n<!-- /wp:more -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3>Mit dem Terminal arbeiten / Python-Installation prüfen</h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Mit dem Terminal können wir unser Betriebssystem <em>textbasiert</em> steuern. Häufigster Vorbehalt gegen das Terminal ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:\r\n<ul>\r\n<li>In <strong>Windows 8 und 10</strong> geht das mit einem Klick mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination [Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li>\r\n<li>In <strong>Windows 7</strong> klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li>\r\n<li>In vielen <strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li>\r\n<li>Auf <strong>MacOS</strong> führt die Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li>\r\n</ul>\r\n</li>\r\n<li>Nun prüfen wir, ob auf unserem Betriebssystem bereits die Programmiersprache <em>Python </em>installiert ist. Die Chancen stehen gut, denn MacOS und viele Linux-Distributionen bringen<em> Python</em> bereits mit. Gib im Terminal ein. Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version <em>Python</em> installiert ist. Wenn das der Fall ist, musst du an dieser Stelle nichts weiter tun (es ist egal, welche Python-Version du nutzt)!<br />Solltest du eine Fehlermeldung erhalten, musst du die Installation von Python für dein Betriebssystem nachholen (nächster Schritt).</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:image {\"id\":14,\"align\":\"center\",\"linkDestination\":\"media\",\"className\":\"wp-image-286 size-full imagedropshadow\"} -->\r\n<div class=\"wp-block-image wp-image-286 size-full imagedropshadow\">\r\n<figure class=\"aligncenter\"><a href=\"https://rike.dev/wp-content/uploads/2017/07/1.png\"><img class=\"wp-image-14\" src=\"https://rike.dev/wp-content/uploads/2017/07/1.png\" alt=\"Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.\" /></a>\r\n<figcaption>Dieses macOS-System informiert darüber, dass Python in der Version 2.7.10 installiert ist und zur Nutzung bereit steht.</figcaption>\r\n</figure>\r\n</div>\r\n<!-- /wp:image -->\r\n\r\n<!-- wp:image {\"id\":15,\"align\":\"center\",\"linkDestination\":\"media\",\"className\":\"wp-image-282 size-full imagedropshadow\"} -->\r\n<div class=\"wp-block-image wp-image-282 size-full imagedropshadow\">\r\n<figure class=\"aligncenter\"><a href=\"https://rike.dev/wp-content/uploads/2017/07/2.png\"><img class=\"wp-image-15\" src=\"https://rike.dev/wp-content/uploads/2017/07/2.png\" alt=\"Dieses Windows-System hat leider noch keine Python-Installation vorliegen.\" /></a>\r\n<figcaption>Dieses Windows-System hat leider noch keine Python-Installation vorliegen.</figcaption>\r\n</figure>\r\n</div>\r\n<!-- /wp:image -->\r\n\r\n<!-- wp:heading {\"level\":3} -->\r\n<h3>Python installieren (empfohlen: Version 3.x.x)</h3>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Python können wir wie ein normales Softwarepaket herunterladen und für unser Betriebssystem installieren. Die Programmiersprache ist Open-Source, das heißt kostenlos erhältlich.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Surfe zu https://www.python.org/downloads/ und lade den jüngsten Release von <em>Python 3</em>.xx herunter, momentan ist das <em>Python 3.6.2</em>. Achte darauf, dass du das Paket für dein Betriebssystem herunterlädst, normalerweise erkennt die Website dein Betriebssystem automatisch und schlägt dir die richtige Datei vor.</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:image {\"id\":16,\"linkDestination\":\"media\",\"className\":\"imagedropshadow\"} -->\r\n<figure class=\"wp-block-image imagedropshadow\"><a href=\"https://rike.dev/wp-content/uploads/2017/07/3.png\"><img class=\"wp-image-16\" src=\"https://rike.dev/wp-content/uploads/2017/07/3-1024x423.png\" alt=\"Python Download\" /></a></figure>\r\n<!-- /wp:image -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Installiere die Datei wie eine gewöhnliche Software, z. B. über Windows per Doppelklick auf die Datei \"python-3-6-2.exe\". Aktiviere die Auswahl \"Add Python 3.6 to PATH\" im ersten Installationsfenster!! Weitere Anpassungen musst du nicht durchführen. Im nächsten Schritt wird die Installation durchgeführt und du kannst den Installer verlassen.</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:image {\"id\":17,\"align\":\"center\",\"linkDestination\":\"media\",\"className\":\"imagedropshadow\"} -->\r\n<div class=\"wp-block-image imagedropshadow\">\r\n<figure class=\"aligncenter\"><a href=\"https://rike.dev/wp-content/uploads/2017/07/4.png\"><img class=\"wp-image-17\" src=\"https://rike.dev/wp-content/uploads/2017/07/4.png\" alt=\"Python Installation\" /></a></figure>\r\n</div>\r\n<!-- /wp:image -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Wenn Python richtig installiert wurde, kannst du die Python-Installation aus Schritt 2 noch einmal prüfen und solltest diesmal erfolgreich sein.</li>\r\n</ul>\r\n<!-- /wp:list -->','Mit dem Terminal arbeiten und Python installieren','','inherit','closed','closed','','12-revision-v1','','','2019-06-19 11:50:29','2019-06-19 09:50:29','',12,'https://rike.dev/2019/06/19/12-revision-v1/',0,'revision','',0),(197,1,'2019-06-26 14:20:25','2019-06-26 12:20:25','<p>Building a Twitter bot with Node.js is easy these days (if you have at least some web development &amp; JavaScript knowledge). Get ready with me and set up your own one in just a few minutes.</p>\r\n<p><!--more--></p>\r\n<p>At first you will need to <a href=\"https://twitter.com/signup\">register</a> a (new) Twitter account specifiying the screen name, through which you\'d like to tweet into the world. After that you are ready to apply for a developer\'s account and add a new Twitter developer\'s app <a href=\"https://developer.twitter.com/en/apps\">here</a>. This is necessary for generating keys and tokens for accessing the official <a href=\"https://developer.twitter.com/en/docs/basics/things-every-developer-should-know\" rel=\"nofollow\">Twitter API</a>. Twitter asks for several information about what you want to do with your app. Writing down what the bot is all about went just fine for me. Finally it\'s time for coding. Make sure <em>node</em> and <em>npm</em> are installed on your computer with the following commands.</p>\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>After that, we are ready to setup a working folder and init a npm project with:</p>\r\n<pre class=\"wp-block-preformatted\">npm init</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>The only library that is mandatory for our project is the npm package <em>twitter-lite</em>, a tiny, full-featured, modern client / server library for the Twitter API, whose documentation you will find <a href=\"https://github.com/draftbit/twitter-lite\">here</a>. It was built because existing ones <a href=\"https://github.com/desmondmorris/node-twitter\">have not been recently maintained</a>, or depend on <a href=\"https://github.com/ttezel/twit/issues/411\">outdated</a> <a href=\"https://github.com/ttezel/twit/issues/412\">libraries</a>. Within our working folder we create a Node.js script, which could be named \"bot.js\". </p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const Twitter = require(\"twitter-lite\");\r\n\r\nconst client = new Twitter({\r\n  consumer_key: \'xyz\',\r\n  consumer_secret: \'xyz\',\r\n  access_token_key: \'xyz\',\r\n  access_token_secret: \'xyz\'\r\n});</pre>\r\n<p>This creates a new authorized Twitter API client. All keys and secrets are available in your Twitter developer\'s account. </p>\r\n<p>What should the bot do exactly? Well, for example, we could filter all incoming new tweets around the world with the help of keywords or hashtags by opening up the Twitter Stream and providing some parameters, like so:</p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\"> \r\nconst parameters = {\r\n  language: \"en\",\r\n  track:\r\n    \"#girlswhocode,#girlsintech,#womenintech,#womenwhocode,#momsintech,#momswhocode\"\r\n};\r\n\r\nclient\r\n  .stream(\"statuses/filter\", parameters)\r\n  .on(\"start\", response =&gt; console.log(\"start\"))\r\n  .on(\"data\", async data =&gt; {\r\n    console.log(\"got data\", data.id_str);\r\n  })\r\n  .on(\"error\", error =&gt; console.log(\"error\", error))\r\n  .on(\"end\", response =&gt; console.log(\"end\")); </pre>\r\n<p>Instead of just logging filtered tweets we could now automatically retweet those tweets by adding:</p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const url = `statuses/retweet/${data.id_str}`;\r\nawait client.post(url);</pre>\r\n<p>That\'s it! Just start your script with</p>\r\n<pre class=\"wp-block-preformatted\">node bot.js</pre>\r\n<p><!-- /wp:preformatted -->\r\n\r\n<!-- wp:list --></p>\r\n<p>and your bot starts firing. There are many more possibilities on how the Twitter API can be used. You would like to deploy this app? Sure, you could <a href=\"https://devcenter.heroku.com/articles/getting-started-with-nodejs\">deploy on Heroku </a>or use a hoster like <a href=\"https://www.digitalocean.com/\">DigitalOcean</a> that could run your app in the background with <em>pm2</em>. Beware: Your secrets and keys should be stored in environment variables! A great library to do so is <a href=\"https://www.npmjs.com/package/dotenv\">dot-env</a>.</p>\r\n<p>Have fun!</p>\r\n<p>&nbsp;</p>','How to: Build a Twitter bot with Node.js - fast!','','publish','open','open','','how-to-build-a-twitter-bot-with-node-js-fast','','','2019-11-18 21:24:24','2019-11-18 20:24:24','',0,'https://rike.dev/?p=197',0,'post','',1),(198,1,'2019-06-25 23:24:57','2019-06-25 21:24:57','Building a twitter bot with Node.js is easy these days. Get ready with me and set up your own one in just a few minutes.\r\n\r\n<!--more-->\r\n\r\nAt first you will need a (new) Twitter account\r\n\r\nWe will use the npm package \"twitter-lite\", a tiny, full-featured, modern client / server library for the <a href=\"https://developer.twitter.com/en/docs/basics/things-every-developer-should-know\" rel=\"nofollow\">Twitter API</a>, whose documentation you will find <a href=\"https://github.com/draftbit/twitter-lite\">here</a>.','How to: Build a Twitter bot with Node.js - fast!','','inherit','closed','closed','','197-revision-v1','','','2019-06-25 23:24:57','2019-06-25 21:24:57','',197,'https://rike.dev/2019/06/25/197-revision-v1/',0,'revision','',0),(199,1,'2019-06-25 23:27:07','2019-06-25 21:27:07','Building a twitter bot with Node.js is easy these days. Get ready with me and set up your own one in just a few minutes.\r\n\r\n<!--more-->\r\n\r\nAt first you will need a (new) Twitter account\r\n\r\nWe will use the npm package \"twitter-lite\", a tiny, full-featured, modern client / server library for the <a href=\"https://developer.twitter.com/en/docs/basics/things-every-developer-should-know\" rel=\"nofollow\">Twitter API</a>, whose documentation you will find <a href=\"https://github.com/draftbit/twitter-lite\">here</a>. It was built because existing ones <a href=\"https://github.com/desmondmorris/node-twitter\">have not been recently maintained</a>, or depend on <a href=\"https://github.com/ttezel/twit/issues/411\">outdated</a> <a href=\"https://github.com/ttezel/twit/issues/412\">libraries</a>.\r\n\r\n&nbsp;','How to: Build a Twitter bot with Node.js - fast!','','inherit','closed','closed','','197-revision-v1','','','2019-06-25 23:27:07','2019-06-25 21:27:07','',197,'https://rike.dev/2019/06/25/197-revision-v1/',0,'revision','',0),(200,1,'2019-06-26 14:06:09','2019-06-26 12:06:09','Building a twitter bot with Node.js is easy these days. Get ready with me and set up your own one in just a few minutes.\r\n\r\n<!--more-->\r\n\r\nAt first you will need to <a href=\"https://twitter.com/signup\">register</a> a (new) Twitter account specifiying the screen name, through which you\'d like to tweet into the world. After that you are ready to apply for a developer\'s account and add a new Twitter developer\'s app <a href=\"https://developer.twitter.com/en/apps\">here</a>. This is necessary for generating keys and tokens for accessing the official <a href=\"https://developer.twitter.com/en/docs/basics/things-every-developer-should-know\" rel=\"nofollow\">Twitter API</a>. Twitter asks for several information about what you want to do with your app. Writing down what the bot will be doing went just fine for me.\r\n\r\nFinally it\'s time for coding. Make sure <em>node</em> and <em>npm</em> are installed on your computer with the following commands.\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted --><!-- wp:list -->\r\n\r\nAfter that, we are ready to setup a working folder and init an npm project with:\r\n<pre class=\"wp-block-preformatted\">npm init</pre>\r\n<!-- /wp:preformatted --><!-- wp:list -->\r\n\r\nThe only library that is mandatory for our project is the npm package \"twitter-lite\", a tiny, full-featured, modern client / server library for the Twitter API, whose documentation you will find <a href=\"https://github.com/draftbit/twitter-lite\">here</a>. It was built because existing ones <a href=\"https://github.com/desmondmorris/node-twitter\">have not been recently maintained</a>, or depend on <a href=\"https://github.com/ttezel/twit/issues/411\">outdated</a> <a href=\"https://github.com/ttezel/twit/issues/412\">libraries</a>.\r\n\r\nWithin our working folder we create a Node.js script, which could be named \"bot.js\".\r\n\r\n<code class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">\r\nconst Twitter = require(\"twitter-lite\");\r\n\r\nconst client = new Twitter({\r\nconsumer_key: \'your_consumer_key_xyz\',\r\nconsumer_secret: \'your_consumer_secret_xyz\',\r\naccess_token_key: \'your_access_token_key_xyz\',\r\naccess_token_secret: \'your_access_token_secret_xyz\'\r\n});\r\n</code>\r\n&nbsp;\r\n\r\n&nbsp;','How to: Build a Twitter bot with Node.js - fast!','','inherit','closed','closed','','197-revision-v1','','','2019-06-26 14:06:09','2019-06-26 12:06:09','',197,'https://rike.dev/2019/06/26/197-revision-v1/',0,'revision','',0),(201,1,'2019-06-26 14:06:12','2019-06-26 12:06:12','<p>Building a twitter bot with Node.js is easy these days. Get ready with me and set up your own one in just a few minutes. <!--more--> At first you will need to <a href=\"https://twitter.com/signup\">register</a> a (new) Twitter account specifiying the screen name, through which you\'d like to tweet into the world. After that you are ready to apply for a developer\'s account and add a new Twitter developer\'s app <a href=\"https://developer.twitter.com/en/apps\">here</a>. This is necessary for generating keys and tokens for accessing the official <a href=\"https://developer.twitter.com/en/docs/basics/things-every-developer-should-know\" rel=\"nofollow\">Twitter API</a>. Twitter asks for several information about what you want to do with your app. Writing down what the bot will be doing went just fine for me. Finally it\'s time for coding. Make sure <em>node</em> and <em>npm</em> are installed on your computer with the following commands.</p>\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>After that, we are ready to setup a working folder and init an npm project with:</p>\r\n<pre class=\"wp-block-preformatted\">npm init</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>The only library that is mandatory for our project is the npm package \"twitter-lite\", a tiny, full-featured, modern client / server library for the Twitter API, whose documentation you will find <a href=\"https://github.com/draftbit/twitter-lite\">here</a>. It was built because existing ones <a href=\"https://github.com/desmondmorris/node-twitter\">have not been recently maintained</a>, or depend on <a href=\"https://github.com/ttezel/twit/issues/411\">outdated</a> <a href=\"https://github.com/ttezel/twit/issues/412\">libraries</a>. Within our working folder we create a Node.js script, which could be named \"bot.js\". <code class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">\r\nconst Twitter = require(\"twitter-lite\");\r\n\r\nconst client = new Twitter({\r\nconsumer_key: \'your_consumer_key_xyz\',\r\nconsumer_secret: \'your_consumer_secret_xyz\',\r\naccess_token_key: \'your_access_token_key_xyz\',\r\naccess_token_secret: \'your_access_token_secret_xyz\'\r\n});\r\n</code>    </p>','How to: Build a Twitter bot with Node.js - fast!','','inherit','closed','closed','','197-revision-v1','','','2019-06-26 14:06:12','2019-06-26 12:06:12','',197,'https://rike.dev/2019/06/26/197-revision-v1/',0,'revision','',0),(202,1,'2019-06-26 14:08:27','2019-06-26 12:08:27','<p>Building a twitter bot with Node.js is easy these days. Get ready with me and set up your own one in just a few minutes. <!--more--> At first you will need to <a href=\"https://twitter.com/signup\">register</a> a (new) Twitter account specifiying the screen name, through which you\'d like to tweet into the world. After that you are ready to apply for a developer\'s account and add a new Twitter developer\'s app <a href=\"https://developer.twitter.com/en/apps\">here</a>. This is necessary for generating keys and tokens for accessing the official <a href=\"https://developer.twitter.com/en/docs/basics/things-every-developer-should-know\" rel=\"nofollow\">Twitter API</a>. Twitter asks for several information about what you want to do with your app. Writing down what the bot will be doing went just fine for me. Finally it\'s time for coding. Make sure <em>node</em> and <em>npm</em> are installed on your computer with the following commands.</p>\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>After that, we are ready to setup a working folder and init an npm project with:</p>\r\n<pre class=\"wp-block-preformatted\">npm init</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>The only library that is mandatory for our project is the npm package \"twitter-lite\", a tiny, full-featured, modern client / server library for the Twitter API, whose documentation you will find <a href=\"https://github.com/draftbit/twitter-lite\">here</a>. It was built because existing ones <a href=\"https://github.com/desmondmorris/node-twitter\">have not been recently maintained</a>, or depend on <a href=\"https://github.com/ttezel/twit/issues/411\">outdated</a> <a href=\"https://github.com/ttezel/twit/issues/412\">libraries</a>. Within our working folder we create a Node.js script, which could be named \"bot.js\". </p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const Twitter = require(\"twitter-lite\");\r\n\r\nconst client = new Twitter({\r\n  consumer_key: \'xyz\',\r\n  consumer_secret: \'xyz\',\r\n  access_token_key: \'xyz\',\r\n  access_token_secret: \'xyz\'\r\n});</pre>','How to: Build a Twitter bot with Node.js - fast!','','inherit','closed','closed','','197-revision-v1','','','2019-06-26 14:08:27','2019-06-26 12:08:27','',197,'https://rike.dev/2019/06/26/197-revision-v1/',0,'revision','',0),(203,1,'2019-06-26 14:20:25','2019-06-26 12:20:25','<p>Building a twitter bot with Node.js is easy these days. Get ready with me and set up your own one in just a few minutes. <!--more--> At first you will need to <a href=\"https://twitter.com/signup\">register</a> a (new) Twitter account specifiying the screen name, through which you\'d like to tweet into the world. After that you are ready to apply for a developer\'s account and add a new Twitter developer\'s app <a href=\"https://developer.twitter.com/en/apps\">here</a>. This is necessary for generating keys and tokens for accessing the official <a href=\"https://developer.twitter.com/en/docs/basics/things-every-developer-should-know\" rel=\"nofollow\">Twitter API</a>. Twitter asks for several information about what you want to do with your app. Writing down what the bot will be doing went just fine for me. Finally it\'s time for coding. Make sure <em>node</em> and <em>npm</em> are installed on your computer with the following commands.</p>\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>After that, we are ready to setup a working folder and init an npm project with:</p>\r\n<pre class=\"wp-block-preformatted\">npm init</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>The only library that is mandatory for our project is the npm package \"twitter-lite\", a tiny, full-featured, modern client / server library for the Twitter API, whose documentation you will find <a href=\"https://github.com/draftbit/twitter-lite\">here</a>. It was built because existing ones <a href=\"https://github.com/desmondmorris/node-twitter\">have not been recently maintained</a>, or depend on <a href=\"https://github.com/ttezel/twit/issues/411\">outdated</a> <a href=\"https://github.com/ttezel/twit/issues/412\">libraries</a>. Within our working folder we create a Node.js script, which could be named \"bot.js\". </p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const Twitter = require(\"twitter-lite\");\r\n\r\nconst client = new Twitter({\r\n  consumer_key: \'xyz\',\r\n  consumer_secret: \'xyz\',\r\n  access_token_key: \'xyz\',\r\n  access_token_secret: \'xyz\'\r\n});</pre>\r\n<p>This creates a new authorized Twitter API client. All keys and secrets are available in your Twitter developer\'s account. </p>\r\n<p>What should the bot do exactly? Well, for example, we could filter all incoming new tweets around the world with the help of keywords or hashtags by opening up the Twitter Stream and providing some parameters, like so:</p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\"> \r\nconst parameters = {\r\n  language: \"en\",\r\n  track:\r\n    \"#girlswhocode,#girlsintech,#womenintech,#womenwhocode,#momsintech,#momswhocode\"\r\n};\r\n\r\nclient\r\n  .stream(\"statuses/filter\", parameters)\r\n  .on(\"start\", response =&gt; console.log(\"start\"))\r\n  .on(\"data\", async data =&gt; {\r\n    console.log(\"got data\", data.id_str);\r\n  })\r\n  .on(\"error\", error =&gt; console.log(\"error\", error))\r\n  .on(\"end\", response =&gt; console.log(\"end\")); </pre>\r\n<p>Instead of just logging filtered tweets we could now automatically retweet those tweets by adding:</p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\"> \r\n...<br />const url = `statuses/retweet/${data.id_str}`;\r\nawait client.post(url);;<br />...</pre>\r\n<p>That\'s it! Just start your script with</p>\r\n<pre class=\"wp-block-preformatted\">node bot.js</pre>\r\n<p><!-- /wp:preformatted -->\r\n\r\n<!-- wp:list --></p>\r\n<p>and your bot starts firing. There are many more possibilities on how the Twitter API can be used. This tiny example\'s code is hosted on <a href=\"https://github.com/gitfrosh/friendly-fem-tech-bot\">Github</a>. Have fun!</p>\r\n<p>&nbsp;</p>','How to: Build a Twitter bot with Node.js - fast!','','inherit','closed','closed','','197-revision-v1','','','2019-06-26 14:20:25','2019-06-26 12:20:25','',197,'https://rike.dev/2019/06/26/197-revision-v1/',0,'revision','',0),(204,1,'2019-06-26 14:20:44','2019-06-26 12:20:44','<p>Building a twitter bot with Node.js is easy these days. Get ready with me and set up your own one in just a few minutes.</p>\r\n<p><!--more--></p>\r\n<p>At first you will need to <a href=\"https://twitter.com/signup\">register</a> a (new) Twitter account specifiying the screen name, through which you\'d like to tweet into the world. After that you are ready to apply for a developer\'s account and add a new Twitter developer\'s app <a href=\"https://developer.twitter.com/en/apps\">here</a>. This is necessary for generating keys and tokens for accessing the official <a href=\"https://developer.twitter.com/en/docs/basics/things-every-developer-should-know\" rel=\"nofollow\">Twitter API</a>. Twitter asks for several information about what you want to do with your app. Writing down what the bot will be doing went just fine for me. Finally it\'s time for coding. Make sure <em>node</em> and <em>npm</em> are installed on your computer with the following commands.</p>\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>After that, we are ready to setup a working folder and init an npm project with:</p>\r\n<pre class=\"wp-block-preformatted\">npm init</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>The only library that is mandatory for our project is the npm package \"twitter-lite\", a tiny, full-featured, modern client / server library for the Twitter API, whose documentation you will find <a href=\"https://github.com/draftbit/twitter-lite\">here</a>. It was built because existing ones <a href=\"https://github.com/desmondmorris/node-twitter\">have not been recently maintained</a>, or depend on <a href=\"https://github.com/ttezel/twit/issues/411\">outdated</a> <a href=\"https://github.com/ttezel/twit/issues/412\">libraries</a>. Within our working folder we create a Node.js script, which could be named \"bot.js\". </p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const Twitter = require(\"twitter-lite\");\r\n\r\nconst client = new Twitter({\r\n  consumer_key: \'xyz\',\r\n  consumer_secret: \'xyz\',\r\n  access_token_key: \'xyz\',\r\n  access_token_secret: \'xyz\'\r\n});</pre>\r\n<p>This creates a new authorized Twitter API client. All keys and secrets are available in your Twitter developer\'s account. </p>\r\n<p>What should the bot do exactly? Well, for example, we could filter all incoming new tweets around the world with the help of keywords or hashtags by opening up the Twitter Stream and providing some parameters, like so:</p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\"> \r\nconst parameters = {\r\n  language: \"en\",\r\n  track:\r\n    \"#girlswhocode,#girlsintech,#womenintech,#womenwhocode,#momsintech,#momswhocode\"\r\n};\r\n\r\nclient\r\n  .stream(\"statuses/filter\", parameters)\r\n  .on(\"start\", response =&gt; console.log(\"start\"))\r\n  .on(\"data\", async data =&gt; {\r\n    console.log(\"got data\", data.id_str);\r\n  })\r\n  .on(\"error\", error =&gt; console.log(\"error\", error))\r\n  .on(\"end\", response =&gt; console.log(\"end\")); </pre>\r\n<p>Instead of just logging filtered tweets we could now automatically retweet those tweets by adding:</p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\"> \r\n...<br />const url = `statuses/retweet/${data.id_str}`;\r\nawait client.post(url);;<br />...</pre>\r\n<p>That\'s it! Just start your script with</p>\r\n<pre class=\"wp-block-preformatted\">node bot.js</pre>\r\n<p><!-- /wp:preformatted -->\r\n\r\n<!-- wp:list --></p>\r\n<p>and your bot starts firing. There are many more possibilities on how the Twitter API can be used. This tiny example\'s code is hosted on <a href=\"https://github.com/gitfrosh/friendly-fem-tech-bot\">Github</a>. Have fun!</p>\r\n<p>&nbsp;</p>','How to: Build a Twitter bot with Node.js - fast!','','inherit','closed','closed','','197-revision-v1','','','2019-06-26 14:20:44','2019-06-26 12:20:44','',197,'https://rike.dev/2019/06/26/197-revision-v1/',0,'revision','',0),(205,1,'2019-11-18 21:23:38','2019-11-18 20:23:38','<p>Building a Twitter bot with Node.js is easy these days (if you have at least some web development &amp; JavaScript knowledge). Get ready with me and set up your own one in just a few minutes.</p>\n<p><!--more--></p>\n<p>At first you will need to <a href=\"https://twitter.com/signup\">register</a> a (new) Twitter account specifiying the screen name, through which you\'d like to tweet into the world. After that you are ready to apply for a developer\'s account and add a new Twitter developer\'s app <a href=\"https://developer.twitter.com/en/apps\">here</a>. This is necessary for generating keys and tokens for accessing the official <a href=\"https://developer.twitter.com/en/docs/basics/things-every-developer-should-know\" rel=\"nofollow\">Twitter API</a>. Twitter asks for several information about what you want to do with your app. Writing down what the bot is all about just fine for me. Finally it\'s time for coding. Make sure <em>node</em> and <em>npm</em> are installed on your computer with the following commands.</p>\n<pre class=\"wp-block-preformatted\">node -v\nnpm -v</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<p>After that, we are ready to setup a working folder and init a npm project with:</p>\n<pre class=\"wp-block-preformatted\">npm init</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:list -->\n<p>The only library that is mandatory for our project is the npm package <em>twitter-lite</em>, a tiny, full-featured, modern client / server library for the Twitter API, whose documentation you will find <a href=\"https://github.com/draftbit/twitter-lite\">here</a>. It was built because existing ones <a href=\"https://github.com/desmondmorris/node-twitter\">have not been recently maintained</a>, or depend on <a href=\"https://github.com/ttezel/twit/issues/411\">outdated</a> <a href=\"https://github.com/ttezel/twit/issues/412\">libraries</a>. Within our working folder we create a Node.js script, which could be named \"bot.js\". </p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const Twitter = require(\"twitter-lite\");\n\nconst client = new Twitter({\n  consumer_key: \'xyz\',\n  consumer_secret: \'xyz\',\n  access_token_key: \'xyz\',\n  access_token_secret: \'xyz\'\n});</pre>\n<p>This creates a new authorized Twitter API client. All keys and secrets are available in your Twitter developer\'s account. </p>\n<p>What should the bot do exactly? Well, for example, we could filter all incoming new tweets around the world with the help of keywords or hashtags by opening up the Twitter Stream and providing some parameters, like so:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\"> \nconst parameters = {\n  language: \"en\",\n  track:\n    \"#girlswhocode,#girlsintech,#womenintech,#womenwhocode,#momsintech,#momswhocode\"\n};\n\nclient\n  .stream(\"statuses/filter\", parameters)\n  .on(\"start\", response =&gt; console.log(\"start\"))\n  .on(\"data\", async data =&gt; {\n    console.log(\"got data\", data.id_str);\n  })\n  .on(\"error\", error =&gt; console.log(\"error\", error))\n  .on(\"end\", response =&gt; console.log(\"end\")); </pre>\n<p>Instead of just logging filtered tweets we could now automatically retweet those tweets by adding:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const url = `statuses/retweet/${data.id_str}`;\nawait client.post(url);</pre>\n<p>That\'s it! Just start your script with</p>\n<pre class=\"wp-block-preformatted\">node bot.js</pre>\n<p><!-- /wp:preformatted -->\n\n<!-- wp:list --></p>\n<p>and your bot starts firing. There are many more possibilities on how the Twitter API can be used. You would like to deploy this app? Sure, you could <a href=\"https://devcenter.heroku.com/articles/getting-started-with-nodejs\">deploy on Heroku </a>or use a hoster like <a href=\"https://www.digitalocean.com/\">DigitalOcean</a> that could run your app in the background with <em>pm2</em>. Beware: Your secrets and keys should be stored in environment variables! A great library to do so is <a href=\"https://www.npmjs.com/package/dotenv\">dot-env</a>.</p>\n<p>Have fun!</p>\n<p>&nbsp;</p>','How to: Build a Twitter bot with Node.js - fast!','','inherit','closed','closed','','197-autosave-v1','','','2019-11-18 21:23:38','2019-11-18 20:23:38','',197,'https://rike.dev/2019/06/26/197-autosave-v1/',0,'revision','',0),(206,1,'2019-06-26 14:21:58','2019-06-26 12:21:58','<p>Building a twitter bot with Node.js is easy these days. Get ready with me and set up your own one in just a few minutes.</p>\r\n<p><!--more--></p>\r\n<p>At first you will need to <a href=\"https://twitter.com/signup\">register</a> a (new) Twitter account specifiying the screen name, through which you\'d like to tweet into the world. After that you are ready to apply for a developer\'s account and add a new Twitter developer\'s app <a href=\"https://developer.twitter.com/en/apps\">here</a>. This is necessary for generating keys and tokens for accessing the official <a href=\"https://developer.twitter.com/en/docs/basics/things-every-developer-should-know\" rel=\"nofollow\">Twitter API</a>. Twitter asks for several information about what you want to do with your app. Writing down what the bot is all about just fine for me. Finally it\'s time for coding. Make sure <em>node</em> and <em>npm</em> are installed on your computer with the following commands.</p>\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>After that, we are ready to setup a working folder and init a npm project with:</p>\r\n<pre class=\"wp-block-preformatted\">npm init</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>The only library that is mandatory for our project is the npm package \"twitter-lite\", a tiny, full-featured, modern client / server library for the Twitter API, whose documentation you will find <a href=\"https://github.com/draftbit/twitter-lite\">here</a>. It was built because existing ones <a href=\"https://github.com/desmondmorris/node-twitter\">have not been recently maintained</a>, or depend on <a href=\"https://github.com/ttezel/twit/issues/411\">outdated</a> <a href=\"https://github.com/ttezel/twit/issues/412\">libraries</a>. Within our working folder we create a Node.js script, which could be named \"bot.js\". </p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const Twitter = require(\"twitter-lite\");\r\n\r\nconst client = new Twitter({\r\n  consumer_key: \'xyz\',\r\n  consumer_secret: \'xyz\',\r\n  access_token_key: \'xyz\',\r\n  access_token_secret: \'xyz\'\r\n});</pre>\r\n<p>This creates a new authorized Twitter API client. All keys and secrets are available in your Twitter developer\'s account. </p>\r\n<p>What should the bot do exactly? Well, for example, we could filter all incoming new tweets around the world with the help of keywords or hashtags by opening up the Twitter Stream and providing some parameters, like so:</p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\"> \r\nconst parameters = {\r\n  language: \"en\",\r\n  track:\r\n    \"#girlswhocode,#girlsintech,#womenintech,#womenwhocode,#momsintech,#momswhocode\"\r\n};\r\n\r\nclient\r\n  .stream(\"statuses/filter\", parameters)\r\n  .on(\"start\", response =&gt; console.log(\"start\"))\r\n  .on(\"data\", async data =&gt; {\r\n    console.log(\"got data\", data.id_str);\r\n  })\r\n  .on(\"error\", error =&gt; console.log(\"error\", error))\r\n  .on(\"end\", response =&gt; console.log(\"end\")); </pre>\r\n<p>Instead of just logging filtered tweets we could now automatically retweet those tweets by adding:</p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\"> \r\n...<br />const url = `statuses/retweet/${data.id_str}`;\r\nawait client.post(url);;<br />...</pre>\r\n<p>That\'s it! Just start your script with</p>\r\n<pre class=\"wp-block-preformatted\">node bot.js</pre>\r\n<p><!-- /wp:preformatted -->\r\n\r\n<!-- wp:list --></p>\r\n<p>and your bot starts firing. There are many more possibilities on how the Twitter API can be used. This tiny example\'s code is hosted on <a href=\"https://github.com/gitfrosh/friendly-fem-tech-bot\">Github</a>. Have fun!</p>\r\n<p>&nbsp;</p>','How to: Build a Twitter bot with Node.js - fast!','','inherit','closed','closed','','197-revision-v1','','','2019-06-26 14:21:58','2019-06-26 12:21:58','',197,'https://rike.dev/2019/06/26/197-revision-v1/',0,'revision','',0),(207,1,'2019-06-26 14:22:53','2019-06-26 12:22:53','<p>Building a twitter bot with Node.js is easy these days. Get ready with me and set up your own one in just a few minutes.</p>\r\n<p><!--more--></p>\r\n<p>At first you will need to <a href=\"https://twitter.com/signup\">register</a> a (new) Twitter account specifiying the screen name, through which you\'d like to tweet into the world. After that you are ready to apply for a developer\'s account and add a new Twitter developer\'s app <a href=\"https://developer.twitter.com/en/apps\">here</a>. This is necessary for generating keys and tokens for accessing the official <a href=\"https://developer.twitter.com/en/docs/basics/things-every-developer-should-know\" rel=\"nofollow\">Twitter API</a>. Twitter asks for several information about what you want to do with your app. Writing down what the bot is all about just fine for me. Finally it\'s time for coding. Make sure <em>node</em> and <em>npm</em> are installed on your computer with the following commands.</p>\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>After that, we are ready to setup a working folder and init a npm project with:</p>\r\n<pre class=\"wp-block-preformatted\">npm init</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>The only library that is mandatory for our project is the npm package <em>twitter-lite</em>, a tiny, full-featured, modern client / server library for the Twitter API, whose documentation you will find <a href=\"https://github.com/draftbit/twitter-lite\">here</a>. It was built because existing ones <a href=\"https://github.com/desmondmorris/node-twitter\">have not been recently maintained</a>, or depend on <a href=\"https://github.com/ttezel/twit/issues/411\">outdated</a> <a href=\"https://github.com/ttezel/twit/issues/412\">libraries</a>. Within our working folder we create a Node.js script, which could be named \"bot.js\". </p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const Twitter = require(\"twitter-lite\");\r\n\r\nconst client = new Twitter({\r\n  consumer_key: \'xyz\',\r\n  consumer_secret: \'xyz\',\r\n  access_token_key: \'xyz\',\r\n  access_token_secret: \'xyz\'\r\n});</pre>\r\n<p>This creates a new authorized Twitter API client. All keys and secrets are available in your Twitter developer\'s account. </p>\r\n<p>What should the bot do exactly? Well, for example, we could filter all incoming new tweets around the world with the help of keywords or hashtags by opening up the Twitter Stream and providing some parameters, like so:</p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\"> \r\nconst parameters = {\r\n  language: \"en\",\r\n  track:\r\n    \"#girlswhocode,#girlsintech,#womenintech,#womenwhocode,#momsintech,#momswhocode\"\r\n};\r\n\r\nclient\r\n  .stream(\"statuses/filter\", parameters)\r\n  .on(\"start\", response =&gt; console.log(\"start\"))\r\n  .on(\"data\", async data =&gt; {\r\n    console.log(\"got data\", data.id_str);\r\n  })\r\n  .on(\"error\", error =&gt; console.log(\"error\", error))\r\n  .on(\"end\", response =&gt; console.log(\"end\")); </pre>\r\n<p>Instead of just logging filtered tweets we could now automatically retweet those tweets by adding:</p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\"> \r\n...<br />const url = `statuses/retweet/${data.id_str}`;\r\nawait client.post(url);;<br />...</pre>\r\n<p>That\'s it! Just start your script with</p>\r\n<pre class=\"wp-block-preformatted\">node bot.js</pre>\r\n<p><!-- /wp:preformatted -->\r\n\r\n<!-- wp:list --></p>\r\n<p>and your bot starts firing. There are many more possibilities on how the Twitter API can be used. This tiny example\'s code is hosted on <a href=\"https://github.com/gitfrosh/friendly-fem-tech-bot\">Github</a>. Have fun!</p>\r\n<p>&nbsp;</p>','How to: Build a Twitter bot with Node.js - fast!','','inherit','closed','closed','','197-revision-v1','','','2019-06-26 14:22:53','2019-06-26 12:22:53','',197,'https://rike.dev/2019/06/26/197-revision-v1/',0,'revision','',0),(208,1,'2019-06-26 14:23:52','2019-06-26 12:23:52','<p>Building a twitter bot with Node.js is easy these days. Get ready with me and set up your own one in just a few minutes.</p>\r\n<p><!--more--></p>\r\n<p>At first you will need to <a href=\"https://twitter.com/signup\">register</a> a (new) Twitter account specifiying the screen name, through which you\'d like to tweet into the world. After that you are ready to apply for a developer\'s account and add a new Twitter developer\'s app <a href=\"https://developer.twitter.com/en/apps\">here</a>. This is necessary for generating keys and tokens for accessing the official <a href=\"https://developer.twitter.com/en/docs/basics/things-every-developer-should-know\" rel=\"nofollow\">Twitter API</a>. Twitter asks for several information about what you want to do with your app. Writing down what the bot is all about just fine for me. Finally it\'s time for coding. Make sure <em>node</em> and <em>npm</em> are installed on your computer with the following commands.</p>\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>After that, we are ready to setup a working folder and init a npm project with:</p>\r\n<pre class=\"wp-block-preformatted\">npm init</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>The only library that is mandatory for our project is the npm package <em>twitter-lite</em>, a tiny, full-featured, modern client / server library for the Twitter API, whose documentation you will find <a href=\"https://github.com/draftbit/twitter-lite\">here</a>. It was built because existing ones <a href=\"https://github.com/desmondmorris/node-twitter\">have not been recently maintained</a>, or depend on <a href=\"https://github.com/ttezel/twit/issues/411\">outdated</a> <a href=\"https://github.com/ttezel/twit/issues/412\">libraries</a>. Within our working folder we create a Node.js script, which could be named \"bot.js\". </p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const Twitter = require(\"twitter-lite\");\r\n\r\nconst client = new Twitter({\r\n  consumer_key: \'xyz\',\r\n  consumer_secret: \'xyz\',\r\n  access_token_key: \'xyz\',\r\n  access_token_secret: \'xyz\'\r\n});</pre>\r\n<p>This creates a new authorized Twitter API client. All keys and secrets are available in your Twitter developer\'s account. </p>\r\n<p>What should the bot do exactly? Well, for example, we could filter all incoming new tweets around the world with the help of keywords or hashtags by opening up the Twitter Stream and providing some parameters, like so:</p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\"> \r\nconst parameters = {\r\n  language: \"en\",\r\n  track:\r\n    \"#girlswhocode,#girlsintech,#womenintech,#womenwhocode,#momsintech,#momswhocode\"\r\n};\r\n\r\nclient\r\n  .stream(\"statuses/filter\", parameters)\r\n  .on(\"start\", response =&gt; console.log(\"start\"))\r\n  .on(\"data\", async data =&gt; {\r\n    console.log(\"got data\", data.id_str);\r\n  })\r\n  .on(\"error\", error =&gt; console.log(\"error\", error))\r\n  .on(\"end\", response =&gt; console.log(\"end\")); </pre>\r\n<p>Instead of just logging filtered tweets we could now automatically retweet those tweets by adding:</p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\"><br />const url = `statuses/retweet/${data.id_str}`;\r\nawait client.post(url);;</pre>\r\n<p>That\'s it! Just start your script with</p>\r\n<pre class=\"wp-block-preformatted\">node bot.js</pre>\r\n<p><!-- /wp:preformatted -->\r\n\r\n<!-- wp:list --></p>\r\n<p>and your bot starts firing. There are many more possibilities on how the Twitter API can be used. This tiny example\'s code is hosted on <a href=\"https://github.com/gitfrosh/friendly-fem-tech-bot\">Github</a>. Have fun!</p>\r\n<p>&nbsp;</p>','How to: Build a Twitter bot with Node.js - fast!','','inherit','closed','closed','','197-revision-v1','','','2019-06-26 14:23:52','2019-06-26 12:23:52','',197,'https://rike.dev/2019/06/26/197-revision-v1/',0,'revision','',0),(209,1,'2019-06-26 14:24:11','2019-06-26 12:24:11','<p>Building a twitter bot with Node.js is easy these days. Get ready with me and set up your own one in just a few minutes.</p>\r\n<p><!--more--></p>\r\n<p>At first you will need to <a href=\"https://twitter.com/signup\">register</a> a (new) Twitter account specifiying the screen name, through which you\'d like to tweet into the world. After that you are ready to apply for a developer\'s account and add a new Twitter developer\'s app <a href=\"https://developer.twitter.com/en/apps\">here</a>. This is necessary for generating keys and tokens for accessing the official <a href=\"https://developer.twitter.com/en/docs/basics/things-every-developer-should-know\" rel=\"nofollow\">Twitter API</a>. Twitter asks for several information about what you want to do with your app. Writing down what the bot is all about just fine for me. Finally it\'s time for coding. Make sure <em>node</em> and <em>npm</em> are installed on your computer with the following commands.</p>\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>After that, we are ready to setup a working folder and init a npm project with:</p>\r\n<pre class=\"wp-block-preformatted\">npm init</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>The only library that is mandatory for our project is the npm package <em>twitter-lite</em>, a tiny, full-featured, modern client / server library for the Twitter API, whose documentation you will find <a href=\"https://github.com/draftbit/twitter-lite\">here</a>. It was built because existing ones <a href=\"https://github.com/desmondmorris/node-twitter\">have not been recently maintained</a>, or depend on <a href=\"https://github.com/ttezel/twit/issues/411\">outdated</a> <a href=\"https://github.com/ttezel/twit/issues/412\">libraries</a>. Within our working folder we create a Node.js script, which could be named \"bot.js\". </p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const Twitter = require(\"twitter-lite\");\r\n\r\nconst client = new Twitter({\r\n  consumer_key: \'xyz\',\r\n  consumer_secret: \'xyz\',\r\n  access_token_key: \'xyz\',\r\n  access_token_secret: \'xyz\'\r\n});</pre>\r\n<p>This creates a new authorized Twitter API client. All keys and secrets are available in your Twitter developer\'s account. </p>\r\n<p>What should the bot do exactly? Well, for example, we could filter all incoming new tweets around the world with the help of keywords or hashtags by opening up the Twitter Stream and providing some parameters, like so:</p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\"> \r\nconst parameters = {\r\n  language: \"en\",\r\n  track:\r\n    \"#girlswhocode,#girlsintech,#womenintech,#womenwhocode,#momsintech,#momswhocode\"\r\n};\r\n\r\nclient\r\n  .stream(\"statuses/filter\", parameters)\r\n  .on(\"start\", response =&gt; console.log(\"start\"))\r\n  .on(\"data\", async data =&gt; {\r\n    console.log(\"got data\", data.id_str);\r\n  })\r\n  .on(\"error\", error =&gt; console.log(\"error\", error))\r\n  .on(\"end\", response =&gt; console.log(\"end\")); </pre>\r\n<p>Instead of just logging filtered tweets we could now automatically retweet those tweets by adding:</p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const url = `statuses/retweet/${data.id_str}`;\r\nawait client.post(url);</pre>\r\n<p>That\'s it! Just start your script with</p>\r\n<pre class=\"wp-block-preformatted\">node bot.js</pre>\r\n<p><!-- /wp:preformatted -->\r\n\r\n<!-- wp:list --></p>\r\n<p>and your bot starts firing. There are many more possibilities on how the Twitter API can be used. This tiny example\'s code is hosted on <a href=\"https://github.com/gitfrosh/friendly-fem-tech-bot\">Github</a>. Have fun!</p>\r\n<p>&nbsp;</p>','How to: Build a Twitter bot with Node.js - fast!','','inherit','closed','closed','','197-revision-v1','','','2019-06-26 14:24:11','2019-06-26 12:24:11','',197,'https://rike.dev/2019/06/26/197-revision-v1/',0,'revision','',0),(210,1,'2019-06-26 14:29:10','2019-06-26 12:29:10','<p>Building a twitter bot with Node.js is easy these days. Get ready with me and set up your own one in just a few minutes.</p>\r\n<p><!--more--></p>\r\n<p>At first you will need to <a href=\"https://twitter.com/signup\">register</a> a (new) Twitter account specifiying the screen name, through which you\'d like to tweet into the world. After that you are ready to apply for a developer\'s account and add a new Twitter developer\'s app <a href=\"https://developer.twitter.com/en/apps\">here</a>. This is necessary for generating keys and tokens for accessing the official <a href=\"https://developer.twitter.com/en/docs/basics/things-every-developer-should-know\" rel=\"nofollow\">Twitter API</a>. Twitter asks for several information about what you want to do with your app. Writing down what the bot is all about just fine for me. Finally it\'s time for coding. Make sure <em>node</em> and <em>npm</em> are installed on your computer with the following commands.</p>\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>After that, we are ready to setup a working folder and init a npm project with:</p>\r\n<pre class=\"wp-block-preformatted\">npm init</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>The only library that is mandatory for our project is the npm package <em>twitter-lite</em>, a tiny, full-featured, modern client / server library for the Twitter API, whose documentation you will find <a href=\"https://github.com/draftbit/twitter-lite\">here</a>. It was built because existing ones <a href=\"https://github.com/desmondmorris/node-twitter\">have not been recently maintained</a>, or depend on <a href=\"https://github.com/ttezel/twit/issues/411\">outdated</a> <a href=\"https://github.com/ttezel/twit/issues/412\">libraries</a>. Within our working folder we create a Node.js script, which could be named \"bot.js\". </p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const Twitter = require(\"twitter-lite\");\r\n\r\nconst client = new Twitter({\r\n  consumer_key: \'xyz\',\r\n  consumer_secret: \'xyz\',\r\n  access_token_key: \'xyz\',\r\n  access_token_secret: \'xyz\'\r\n});</pre>\r\n<p>This creates a new authorized Twitter API client. All keys and secrets are available in your Twitter developer\'s account. </p>\r\n<p>What should the bot do exactly? Well, for example, we could filter all incoming new tweets around the world with the help of keywords or hashtags by opening up the Twitter Stream and providing some parameters, like so:</p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\"> \r\nconst parameters = {\r\n  language: \"en\",\r\n  track:\r\n    \"#girlswhocode,#girlsintech,#womenintech,#womenwhocode,#momsintech,#momswhocode\"\r\n};\r\n\r\nclient\r\n  .stream(\"statuses/filter\", parameters)\r\n  .on(\"start\", response =&gt; console.log(\"start\"))\r\n  .on(\"data\", async data =&gt; {\r\n    console.log(\"got data\", data.id_str);\r\n  })\r\n  .on(\"error\", error =&gt; console.log(\"error\", error))\r\n  .on(\"end\", response =&gt; console.log(\"end\")); </pre>\r\n<p>Instead of just logging filtered tweets we could now automatically retweet those tweets by adding:</p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const url = `statuses/retweet/${data.id_str}`;\r\nawait client.post(url);</pre>\r\n<p>That\'s it! Just start your script with</p>\r\n<pre class=\"wp-block-preformatted\">node bot.js</pre>\r\n<p><!-- /wp:preformatted -->\r\n\r\n<!-- wp:list --></p>\r\n<p>and your bot starts firing. There are many more possibilities on how the Twitter API can be used. You would like to deploy this app? Sure, you could <a href=\"https://devcenter.heroku.com/articles/getting-started-with-nodejs\">deploy on Heroku </a>or use a hoster like <a href=\"https://www.digitalocean.com/\">DigitalOcean</a> that could run your app in the background with <em>pm2</em>. Beware: Your secrets and keys should be stored in environment variables! A great library to do so is <a href=\"https://www.npmjs.com/package/dotenv\">dot-env</a>.</p>\r\n<p>This tiny example\'s code is hosted on <a href=\"https://github.com/gitfrosh/friendly-fem-tech-bot\">Github</a>.</p>\r\n<p>Have fun!</p>\r\n<p>&nbsp;</p>','How to: Build a Twitter bot with Node.js - fast!','','inherit','closed','closed','','197-revision-v1','','','2019-06-26 14:29:10','2019-06-26 12:29:10','',197,'https://rike.dev/2019/06/26/197-revision-v1/',0,'revision','',0),(212,1,'2019-07-18 21:28:45','2019-07-18 19:28:45','Finally, I finished my #100DaysOfCode challenge I started on May 31st this year. The challenge is a great way to establish coding to become a daily habit, stop procrastinating and working on projects, that have been only ideas before. For me it also became a way to keep in practice, since I left my programmer\'s job for maternal leave. I wrote a short recap about what I did in 100 days time.\r\n\r\n<!--more-->\r\n<h3>What is the #100DaysOfCode challenge?</h3>\r\nThe challenge was established by <a href=\"https://twitter.com/ka11away\">Alexander Kallaway</a> and its website is available <a href=\"https://www.100daysofcode.com/\">here</a>. There are just two rules: code every day and track your efforts on Twitter. I didn\'t stick to those rules 100%, but I am happy with the outcome nevertheless. You can follow my progress on my <a href=\"https://twitter.com/frankanka\">Twitter profile</a> or in this small <a href=\"https://github.com/gitfrosh/100-days-of-code/blob/master/r1-log.md.\">log book</a> I wrote during the time.\r\n\r\nFor many coding newbies, the #100DaysOfCode helps with first tutorials and bootcamps, but since this was not the case for me I collected some topics I wanted to learn about and projects I planned to build.\r\n<h3>Which projects did I finish?</h3>\r\n<h5><a href=\"https://the-one-api.herokuapp.com\">The Lord of the Rings API</a></h5>\r\nThe \"API to rule them all\", the Lord of the Rings api, provides users with book, character, movie and quotes data. The api\'s documentation is available <a href=\"https://the-one-api.herokuapp.com\">here</a>. This was my biggest project I finished during the challenge and it is also my favourite one. It\'s built with Hapi.js, server side rendering React.js and includes technologies like MongoDB and JSON Web Token authorization. In the future I would like to put this project on Open Source to make contributions possible. <a href=\"https://github.com/gitfrosh/lotr-api\">Github repository</a>\r\n<h5><a href=\"https://twitter.com/femtech_\">The friendly fem tech bot</a></h5>\r\nThe Node.js powered Twitter bot retweets female tech related tweets including #girlswhocode #womenintech #womenwhocode #womeninstem #femaletech #momswhocode and others. You can follow the <a href=\"https://twitter.com/femtech_\">@femtech_</a> bot on Twitter. <a href=\"https://github.com/gitfrosh/friendly-fem-tech-bot\">Github repository</a>\r\n<h5><a href=\"https://gitfrosh.github.io/blockchain-simulator/\">Blockchain simulator</a></h5>\r\nThis small app provides a basic blockchain simulation and is built in React.js. For this project I also <a href=\"https://gitfrosh.github.io/blockchain-simulator/\">deployed</a> an app to a static site hoster Github pages for the first time -  a straightforward experience. <a href=\"https://github.com/gitfrosh/blockchain-simulator\">Github repository</a>\r\n<h5>\"Track ur mood\" Electron.js app</h5>\r\nThis is an experimental small project that can track your daily moods. It is built to try out Electron.js app and runs on Next.js under the hood. Data is stored in a lowdb powered Node.js / Hapi.js backend. Plus, it is styled with a supercute Windows95 UI library. <a href=\"https://github.com/gitfrosh/track-ur-mood\">Github repository</a>\r\n<h5><a href=\"https://false-quotes-generator.herokuapp.com/\">The false quotes generator</a></h5>\r\nThe <a href=\"https://false-quotes-generator.herokuapp.com/\">false quotes generator</a> missmatches mostly Simpsons\' quotes to famous people. For this project I tried out Svelte.js and Sapper, a new shiny Javascript framework with a Node.js / Polka backend. <a href=\"https://github.com/gitfrosh/false-code-generator\">Github repository</a>\r\n<h5><a href=\"https://www.npmjs.com/package/random-lotr-movie-quote\">Publish a npm package</a></h5>\r\nThis is my first move to publish a npm package and - hurray! - it returns a single Lord of the Rings movie quote. <a href=\"https://github.com/gitfrosh/random-lotr-movie-quote\">Github repository</a>\r\n<h5><a href=\"https://ueberdiespree.de\">ueberdiespree.de</a></h5>\r\nThis is my small portfolio website I revamped with the static site generator Gatsby.js and some responsiveness improvements. <a href=\"https://github.com/gitfrosh/ueberdiespree\">Github repository</a>\r\n<h3>What else did I learn?</h3>\r\nWhenever I didn\'t feel like coding on a project I worked on <a href=\"https://www.udemy.com/the-complete-junior-to-senior-web-developer-roadmap/\">this Udemy course</a> by Andrei Neagoie which includes great material about advanced web development topics like performance enhancements, security, typescript, testing, CI/CD, server side rendering, and more. I also worked on advanced React.js topics like React hooks and React CSS styling. Furthermore a studied some DevOps related problems and created my first Docker container.\r\n<h3>Should you do the #100DaysOfCode challenge too?</h3>\r\nTotally! The challenge can help to keep going: Learning to code, finishing projects, achieving your goals. A big plus is the huge community on Twitter. With like-minded people in your timeline staying away from procrastination is much more easier. <a href=\"https://www.100daysofcode.com/\">Start today!  </a>','#100DaysOfCode - a recap','','publish','open','open','','100daysofcode-a-recap','','','2019-07-18 22:14:21','2019-07-18 20:14:21','',0,'https://rike.dev/?p=212',0,'post','',7),(213,1,'2019-07-18 20:46:34','2019-07-18 18:46:34','Finally, I finished my #100DaysOfCode challenge I started on May 31st this year. The challenge is a great way to establish coding to become a daily habit, stop procrastinating and working on projects, that have been only ideas before. For me it also became a way to keep in practice, since I left my programmer\'s job for maternal leave. I wrote a short recap about what I did in 100 days time.\r\n\r\n<!--more-->\r\n<h3>What is the #100DaysOfCode challenge?</h3>\r\nThe challenge \'s website is available <a href=\"https://www.100daysofcode.com/\">here</a> and was established by <a href=\"https://twitter.com/ka11away\">Alexander Kallaway</a>. There are just two rules - code every day and track your efforts on Twitter. I didn\'t stick to those rules 100%, but I am happy with the outcome nevertheless. You can follow my progress on my Twitter profile @frankanka or in this small logbook I wrote during the time: https://github.com/gitfrosh/100-days-of-code/blob/master/r1-log.md.\r\n\r\nFor many coding newbies, the #100DaysOfCode helps with the first tutorials and bootcamps, but since I\'m not a coding newbie I collected some topics I wanted to learn about and projects I wanted to build in the beginning.\r\n<h3>Which projects did I finish?</h3>\r\nhttps://github.com/gitfrosh/lotr-api\r\n\r\nThe \"API to rule them all\", the Lord of the Rings api, provides users with book, character, movie and quotes data. The api\'s documentation is available here: https://the-one-api.herokuapp.com. This was my biggest project I finished during the challenge and also my favourite one. It is built with Hapi.js, server side rendering React.js and includes technologies like MongoDB and JSON Web Token authorization. In the future I would like to put this project on Open Source to make contributions regarding the huge dataset and the code base possible.\r\n\r\nhttps://github.com/gitfrosh/ueberdiespree\r\n\r\nThis is my small portfolio website I revamped with Gatsby.js and some responsiveness improvements.\r\n\r\nhttps://github.com/gitfrosh/track-ur-mood\r\n\r\nA nice, small project to track your daily moods. It is built to try out Electron.js app and runs on Next.js under the hood. Data is stored in a lowdb powered Hapi.js (Node.js) backend. Plus, it is styled with a supercute Windows95 UI library.\r\n\r\nhttps://github.com/gitfrosh/false-code-generator\r\n\r\nThe false quotes generator missmatches mostly Simpsons\' quotes to famous people. For this project I tried out Svelte.js and Sapper, a new shiny Javascript framework with a Node.js polka backend.\r\n\r\nhttps://github.com/gitfrosh/random-lotr-movie-quote\r\n\r\nThis is my first move to publish a npm package and it returns a single Lord of the Rings movie quote.\r\n\r\nhttps://github.com/gitfrosh/friendly-fem-tech-bot\r\n\r\nThe Node.js powered Twitter bot retweets female tech related tweets including #girlswhocode #womenintech #womenwhocode #womeninstem #femaletech #momswhocode\r\nand others. @femtech_\r\n<h3>What else did I learn?</h3>\r\nWhenever I didn\'t feel like coding on a project I worked on this Udemy course by Andrei Neagoie which includes great material about advanced web develpoment topics like performance enhancements, security, typescript, testing, CI/CD, server side rendering, and more.\r\nhttps://www.udemy.com/the-complete-junior-to-senior-web-developer-roadmap/','#100DaysOfCode - a recap','','inherit','closed','closed','','212-revision-v1','','','2019-07-18 20:46:34','2019-07-18 18:46:34','',212,'https://rike.dev/2019/07/18/212-revision-v1/',0,'revision','',0),(214,1,'2019-07-18 20:48:17','2019-07-18 18:48:17','Finally, I finished my #100DaysOfCode challenge I started on May 31st this year. The challenge is a great way to establish coding to become a daily habit, stop procrastinating and working on projects, that have been only ideas before. For me it also became a way to keep in practice, since I left my programmer\'s job for maternal leave. I wrote a short recap about what I did in 100 days time.\r\n\r\n<!--more-->\r\n<h3>What is the #100DaysOfCode challenge?</h3>\r\nThe challenge \'s website is available <a href=\"https://www.100daysofcode.com/\">here</a> and was established by <a href=\"https://twitter.com/ka11away\">Alexander Kallaway</a>. There are just two rules - code every day and track your efforts on Twitter. I didn\'t stick to those rules 100%, but I am happy with the outcome nevertheless. You can follow my progress on my <a href=\"https://twitter.com/frankanka\">Twitter profile</a> or in this small <a href=\"https://github.com/gitfrosh/100-days-of-code/blob/master/r1-log.md.\">log book</a> I wrote during the time.\r\n\r\nFor many coding newbies, the #100DaysOfCode helps with first tutorials and bootcamps, but since I\'m not a new at coding I collected some topics I wanted to learn about and projects I wanted to build.\r\n<h3>Which projects did I finish?</h3>\r\nhttps://github.com/gitfrosh/lotr-api\r\n\r\nThe \"API to rule them all\", the Lord of the Rings api, provides users with book, character, movie and quotes data. The api\'s documentation is available here: https://the-one-api.herokuapp.com. This was my biggest project I finished during the challenge and also my favourite one. It is built with Hapi.js, server side rendering React.js and includes technologies like MongoDB and JSON Web Token authorization. In the future I would like to put this project on Open Source to make contributions regarding the huge dataset and the code base possible.\r\n\r\nhttps://github.com/gitfrosh/ueberdiespree\r\n\r\nThis is my small portfolio website I revamped with Gatsby.js and some responsiveness improvements.\r\n\r\nhttps://github.com/gitfrosh/track-ur-mood\r\n\r\nA nice, small project to track your daily moods. It is built to try out Electron.js app and runs on Next.js under the hood. Data is stored in a lowdb powered Hapi.js (Node.js) backend. Plus, it is styled with a supercute Windows95 UI library.\r\n\r\nhttps://github.com/gitfrosh/false-code-generator\r\n\r\nThe false quotes generator missmatches mostly Simpsons\' quotes to famous people. For this project I tried out Svelte.js and Sapper, a new shiny Javascript framework with a Node.js polka backend.\r\n\r\nhttps://github.com/gitfrosh/random-lotr-movie-quote\r\n\r\nThis is my first move to publish a npm package and it returns a single Lord of the Rings movie quote.\r\n\r\nhttps://github.com/gitfrosh/friendly-fem-tech-bot\r\n\r\nThe Node.js powered Twitter bot retweets female tech related tweets including #girlswhocode #womenintech #womenwhocode #womeninstem #femaletech #momswhocode\r\nand others. @femtech_\r\n<h3>What else did I learn?</h3>\r\nWhenever I didn\'t feel like coding on a project I worked on this Udemy course by Andrei Neagoie which includes great material about advanced web develpoment topics like performance enhancements, security, typescript, testing, CI/CD, server side rendering, and more.\r\nhttps://www.udemy.com/the-complete-junior-to-senior-web-developer-roadmap/','#100DaysOfCode - a recap','','inherit','closed','closed','','212-revision-v1','','','2019-07-18 20:48:17','2019-07-18 18:48:17','',212,'https://rike.dev/2019/07/18/212-revision-v1/',0,'revision','',0),(215,1,'2019-07-18 21:20:49','2019-07-18 19:20:49','Finally, I finished my #100DaysOfCode challenge I started on May 31st this year. The challenge is a great way to establish coding to become a daily habit, stop procrastinating and working on projects, that have been only ideas before. For me it also became a way to keep in practice, since I left my programmer\'s job for maternal leave. I wrote a short recap about what I did in 100 days time.\r\n\r\n<!--more-->\r\n<h3>What is the #100DaysOfCode challenge?</h3>\r\nThe challenge \'s website is available <a href=\"https://www.100daysofcode.com/\">here</a> and was established by <a href=\"https://twitter.com/ka11away\">Alexander Kallaway</a>. There are just two rules - code every day and track your efforts on Twitter. I didn\'t stick to those rules 100%, but I am happy with the outcome nevertheless. You can follow my progress on my <a href=\"https://twitter.com/frankanka\">Twitter profile</a> or in this small <a href=\"https://github.com/gitfrosh/100-days-of-code/blob/master/r1-log.md.\">log book</a> I wrote during the time.\r\n\r\nFor many coding newbies, the #100DaysOfCode helps with first tutorials and bootcamps, but since I\'m not a new at coding I collected some topics I wanted to learn about and projects I wanted to build.\r\n<h3>Which projects did I finish?</h3>\r\n<h4><a href=\"https://the-one-api.herokuapp.com\">The Lord of the Rings API</a></h4>\r\nThe \"API to rule them all\", the Lord of the Rings api, provides users with book, character, movie and quotes data. The api\'s documentation is available <a href=\"https://the-one-api.herokuapp.com\">here</a>. This was my biggest project I finished during the challenThe Lord of the Rings APIge and also my favourite one. It is built with Hapi.js, server side rendering React.js and includes technologies like MongoDB and JSON Web Token authorization. In the future I would like to put this project on Open Source to make contributions regarding the huge dataset and the code base possible. <a href=\"https://github.com/gitfrosh/lotr-api\">Github repository</a>\r\n\r\nhttps://github.com/gitfrosh/ueberdiespree\r\n\r\nThis is my small portfolio website I revamped with Gatsby.js and some responsiveness improvements.\r\n\r\nhttps://github.com/gitfrosh/track-ur-mood\r\n\r\nA nice, small project to track your daily moods. It is built to try out Electron.js app and runs on Next.js under the hood. Data is stored in a lowdb powered Hapi.js (Node.js) backend. Plus, it is styled with a supercute Windows95 UI library.\r\n\r\nhttps://github.com/gitfrosh/false-code-generator\r\n\r\nThe false quotes generator missmatches mostly Simpsons\' quotes to famous people. For this project I tried out Svelte.js and Sapper, a new shiny Javascript framework with a Node.js polka backend.\r\n\r\nhttps://github.com/gitfrosh/random-lotr-movie-quote\r\n\r\nThis is my first move to publish a npm package and it returns a single Lord of the Rings movie quote.\r\n\r\nhttps://github.com/gitfrosh/friendly-fem-tech-bot\r\n\r\nThe Node.js powered Twitter bot retweets female tech related tweets including #girlswhocode #womenintech #womenwhocode #womeninstem #femaletech #momswhocode\r\nand others. @femtech_\r\n<h3>What else did I learn?</h3>\r\nWhenever I didn\'t feel like coding on a project I worked on this Udemy course by Andrei Neagoie which includes great material about advanced web develpoment topics like performance enhancements, security, typescript, testing, CI/CD, server side rendering, and more.\r\nhttps://www.udemy.com/the-complete-junior-to-senior-web-developer-roadmap/','#100DaysOfCode - a recap','','inherit','closed','closed','','212-revision-v1','','','2019-07-18 21:20:49','2019-07-18 19:20:49','',212,'https://rike.dev/2019/07/18/212-revision-v1/',0,'revision','',0),(216,1,'2019-07-18 21:27:47','2019-07-18 19:27:47','Finally, I finished my #100DaysOfCode challenge I started on May 31st this year. The challenge is a great way to establish coding to become a daily habit, stop procrastinating and working on projects, that have been only ideas before. For me it also became a way to keep in practice, since I left my programmer\'s job for maternal leave. I wrote a short recap about what I did in 100 days time.\r\n\r\n<!--more-->\r\n<h3>What is the #100DaysOfCode challenge?</h3>\r\nThe challenge \'s website is available <a href=\"https://www.100daysofcode.com/\">here</a> and was established by <a href=\"https://twitter.com/ka11away\">Alexander Kallaway</a>. There are just two rules - code every day and track your efforts on Twitter. I didn\'t stick to those rules 100%, but I am happy with the outcome nevertheless. You can follow my progress on my <a href=\"https://twitter.com/frankanka\">Twitter profile</a> or in this small <a href=\"https://github.com/gitfrosh/100-days-of-code/blob/master/r1-log.md.\">log book</a> I wrote during the time.\r\n\r\nFor many coding newbies, the #100DaysOfCode helps with first tutorials and bootcamps, but since I\'m not a new at coding I collected some topics I wanted to learn about and projects I wanted to build.\r\n<h3>Which projects did I finish?</h3>\r\n<h4><a href=\"https://the-one-api.herokuapp.com\">The Lord of the Rings API</a></h4>\r\nThe \"API to rule them all\", the Lord of the Rings api, provides users with book, character, movie and quotes data. The api\'s documentation is available <a href=\"https://the-one-api.herokuapp.com\">here</a>. This was my biggest project I finished during the challenThe Lord of the Rings APIge and also my favourite one. It is built with Hapi.js, server side rendering React.js and includes technologies like MongoDB and JSON Web Token authorization. In the future I would like to put this project on Open Source to make contributions regarding the huge dataset and the code base possible. <a href=\"https://github.com/gitfrosh/lotr-api\">Github repository</a>\r\n<h4><a href=\"https://twitter.com/femtech_\">The friendly fem tech bot</a></h4>\r\nThe Node.js powered Twitter bot retweets female tech related tweets including #girlswhocode #womenintech #womenwhocode #womeninstem #femaletech #momswhocode\r\nand others. You can follow the <a href=\"https://twitter.com/femtech_\">@femtech_</a> bot on Twitter. <a href=\"https://github.com/gitfrosh/friendly-fem-tech-bot\">Github repository</a>\r\n<h4>\"Track ur mood\" Electron.js app</h4>\r\nA nice, small project to track your daily moods. It is built to try out Electron.js app and runs on Next.js under the hood. Data is stored in a lowdb powered Hapi.js (Node.js) backend. Plus, it is styled with a supercute Windows95 UI library. <a href=\"https://github.com/gitfrosh/track-ur-mood\">Github repository</a>\r\n<h4><a href=\"https://false-quotes-generator.herokuapp.com/\">The false quotes generator</a></h4>\r\nThe <a href=\"https://false-quotes-generator.herokuapp.com/\">false quotes generator</a> missmatches mostly Simpsons\' quotes to famous people. For this project I tried out Svelte.js and Sapper, a new shiny Javascript framework with a Node.js polka backend. <a href=\"https://github.com/gitfrosh/false-code-generator\">Github repository</a>\r\n<h4><a href=\"https://www.npmjs.com/package/random-lotr-movie-quote\">NPM package</a></h4>\r\nThis is my first move to publish a npm package and it returns a single Lord of the Rings movie quote. <a href=\"https://github.com/gitfrosh/random-lotr-movie-quote\">Github repository</a>\r\n<h4><a href=\"https://ueberdiespree.de\">ueberdiespree.de</a></h4>\r\nThis is my small portfolio website I revamped with Gatsby.js and some responsiveness improvements. <a href=\"https://github.com/gitfrosh/ueberdiespree\">Github repository</a>\r\n<h3>What else did I learn?</h3>\r\nWhenever I didn\'t feel like coding on a project I worked on this Udemy course by Andrei Neagoie which includes great material about advanced web develpoment topics like performance enhancements, security, typescript, testing, CI/CD, server side rendering, and more.\r\nhttps://www.udemy.com/the-complete-junior-to-senior-web-developer-roadmap/\r\n\r\n&nbsp;','#100DaysOfCode - a recap','','inherit','closed','closed','','212-revision-v1','','','2019-07-18 21:27:47','2019-07-18 19:27:47','',212,'https://rike.dev/2019/07/18/212-revision-v1/',0,'revision','',0),(217,1,'2019-07-18 21:28:18','2019-07-18 19:28:18','Finally, I finished my #100DaysOfCode challenge I started on May 31st this year. The challenge is a great way to establish coding to become a daily habit, stop procrastinating and working on projects, that have been only ideas before. For me it also became a way to keep in practice, since I left my programmer\'s job for maternal leave. I wrote a short recap about what I did in 100 days time.\r\n\r\n<!--more-->\r\n<h3>What is the #100DaysOfCode challenge?</h3>\r\nThe challenge \'s website is available <a href=\"https://www.100daysofcode.com/\">here</a> and was established by <a href=\"https://twitter.com/ka11away\">Alexander Kallaway</a>. There are just two rules - code every day and track your efforts on Twitter. I didn\'t stick to those rules 100%, but I am happy with the outcome nevertheless. You can follow my progress on my <a href=\"https://twitter.com/frankanka\">Twitter profile</a> or in this small <a href=\"https://github.com/gitfrosh/100-days-of-code/blob/master/r1-log.md.\">log book</a> I wrote during the time.\r\n\r\nFor many coding newbies, the #100DaysOfCode helps with first tutorials and bootcamps, but since I\'m not a new at coding I collected some topics I wanted to learn about and projects I wanted to build.\r\n<h3>Which projects did I finish?</h3>\r\n<h4><a href=\"https://the-one-api.herokuapp.com\">The Lord of the Rings API</a></h4>\r\nThe \"API to rule them all\", the Lord of the Rings api, provides users with book, character, movie and quotes data. The api\'s documentation is available <a href=\"https://the-one-api.herokuapp.com\">here</a>. This was my biggest project I finished during the challenThe Lord of the Rings APIge and also my favourite one. It is built with Hapi.js, server side rendering React.js and includes technologies like MongoDB and JSON Web Token authorization. In the future I would like to put this project on Open Source to make contributions regarding the huge dataset and the code base possible. <a href=\"https://github.com/gitfrosh/lotr-api\">Github repository</a>\r\n<h4><a href=\"https://twitter.com/femtech_\">The friendly fem tech bot</a></h4>\r\nThe Node.js powered Twitter bot retweets female tech related tweets including #girlswhocode #womenintech womenwhocode #womeninstem #femaletech #momswhocode and others. You can follow the <a href=\"https://twitter.com/femtech_\">@femtech_</a> bot on Twitter. <a href=\"https://github.com/gitfrosh/friendly-fem-tech-bot\">Github repository</a>\r\n<h4>\"Track ur mood\" Electron.js app</h4>\r\nA nice, small project to track your daily moods. It is built to try out Electron.js app and runs on Next.js under the hood. Data is stored in a lowdb powered Hapi.js (Node.js) backend. Plus, it is styled with a supercute Windows95 UI library. <a href=\"https://github.com/gitfrosh/track-ur-mood\">Github repository</a>\r\n<h4><a href=\"https://false-quotes-generator.herokuapp.com/\">The false quotes generator</a></h4>\r\nThe <a href=\"https://false-quotes-generator.herokuapp.com/\">false quotes generator</a> missmatches mostly Simpsons\' quotes to famous people. For this project I tried out Svelte.js and Sapper, a new shiny Javascript framework with a Node.js polka backend. <a href=\"https://github.com/gitfrosh/false-code-generator\">Github repository</a>\r\n<h4><a href=\"https://www.npmjs.com/package/random-lotr-movie-quote\">NPM package</a></h4>\r\nThis is my first move to publish a npm package and it returns a single Lord of the Rings movie quote. <a href=\"https://github.com/gitfrosh/random-lotr-movie-quote\">Github repository</a>\r\n<h4><a href=\"https://ueberdiespree.de\">ueberdiespree.de</a></h4>\r\nThis is my small portfolio website I revamped with Gatsby.js and some responsiveness improvements. <a href=\"https://github.com/gitfrosh/ueberdiespree\">Github repository</a>\r\n<h3>What else did I learn?</h3>\r\nWhenever I didn\'t feel like coding on a project I worked on this Udemy course by Andrei Neagoie which includes great material about advanced web develpoment topics like performance enhancements, security, typescript, testing, CI/CD, server side rendering, and more.\r\nhttps://www.udemy.com/the-complete-junior-to-senior-web-developer-roadmap/\r\n\r\n&nbsp;','#100DaysOfCode - a recap','','inherit','closed','closed','','212-revision-v1','','','2019-07-18 21:28:18','2019-07-18 19:28:18','',212,'https://rike.dev/2019/07/18/212-revision-v1/',0,'revision','',0),(218,1,'2019-07-18 21:28:45','2019-07-18 19:28:45','Finally, I finished my #100DaysOfCode challenge I started on May 31st this year. The challenge is a great way to establish coding to become a daily habit, stop procrastinating and working on projects, that have been only ideas before. For me it also became a way to keep in practice, since I left my programmer\'s job for maternal leave. I wrote a short recap about what I did in 100 days time.\r\n\r\n<!--more-->\r\n<h3>What is the #100DaysOfCode challenge?</h3>\r\nThe challenge \'s website is available <a href=\"https://www.100daysofcode.com/\">here</a> and was established by <a href=\"https://twitter.com/ka11away\">Alexander Kallaway</a>. There are just two rules - code every day and track your efforts on Twitter. I didn\'t stick to those rules 100%, but I am happy with the outcome nevertheless. You can follow my progress on my <a href=\"https://twitter.com/frankanka\">Twitter profile</a> or in this small <a href=\"https://github.com/gitfrosh/100-days-of-code/blob/master/r1-log.md.\">log book</a> I wrote during the time.\r\n\r\nFor many coding newbies, the #100DaysOfCode helps with first tutorials and bootcamps, but since I\'m not a new at coding I collected some topics I wanted to learn about and projects I wanted to build.\r\n<h3>Which projects did I finish?</h3>\r\n<h4><a href=\"https://the-one-api.herokuapp.com\">The Lord of the Rings API</a></h4>\r\nThe \"API to rule them all\", the Lord of the Rings api, provides users with book, character, movie and quotes data. The api\'s documentation is available <a href=\"https://the-one-api.herokuapp.com\">here</a>. This was my biggest project I finished during the challenThe Lord of the Rings APIge and also my favourite one. It is built with Hapi.js, server side rendering React.js and includes technologies like MongoDB and JSON Web Token authorization. In the future I would like to put this project on Open Source to make contributions regarding the huge dataset and the code base possible. <a href=\"https://github.com/gitfrosh/lotr-api\">Github repository</a>\r\n<h4><a href=\"https://twitter.com/femtech_\">The friendly fem tech bot</a></h4>\r\nThe Node.js powered Twitter bot retweets female tech related tweets including #girlswhocode #womenintech #womenwhocode #womeninstem #femaletech #momswhocode and others. You can follow the <a href=\"https://twitter.com/femtech_\">@femtech_</a> bot on Twitter. <a href=\"https://github.com/gitfrosh/friendly-fem-tech-bot\">Github repository</a>\r\n<h4>\"Track ur mood\" Electron.js app</h4>\r\nA nice, small project to track your daily moods. It is built to try out Electron.js app and runs on Next.js under the hood. Data is stored in a lowdb powered Hapi.js (Node.js) backend. Plus, it is styled with a supercute Windows95 UI library. <a href=\"https://github.com/gitfrosh/track-ur-mood\">Github repository</a>\r\n<h4><a href=\"https://false-quotes-generator.herokuapp.com/\">The false quotes generator</a></h4>\r\nThe <a href=\"https://false-quotes-generator.herokuapp.com/\">false quotes generator</a> missmatches mostly Simpsons\' quotes to famous people. For this project I tried out Svelte.js and Sapper, a new shiny Javascript framework with a Node.js polka backend. <a href=\"https://github.com/gitfrosh/false-code-generator\">Github repository</a>\r\n<h4><a href=\"https://www.npmjs.com/package/random-lotr-movie-quote\">NPM package</a></h4>\r\nThis is my first move to publish a npm package and it returns a single Lord of the Rings movie quote. <a href=\"https://github.com/gitfrosh/random-lotr-movie-quote\">Github repository</a>\r\n<h4><a href=\"https://ueberdiespree.de\">ueberdiespree.de</a></h4>\r\nThis is my small portfolio website I revamped with Gatsby.js and some responsiveness improvements. <a href=\"https://github.com/gitfrosh/ueberdiespree\">Github repository</a>\r\n<h3>What else did I learn?</h3>\r\nWhenever I didn\'t feel like coding on a project I worked on this Udemy course by Andrei Neagoie which includes great material about advanced web develpoment topics like performance enhancements, security, typescript, testing, CI/CD, server side rendering, and more.\r\nhttps://www.udemy.com/the-complete-junior-to-senior-web-developer-roadmap/\r\n\r\n&nbsp;','#100DaysOfCode - a recap','','inherit','closed','closed','','212-revision-v1','','','2019-07-18 21:28:45','2019-07-18 19:28:45','',212,'https://rike.dev/2019/07/18/212-revision-v1/',0,'revision','',0),(219,1,'2019-07-18 21:37:56','2019-07-18 19:37:56','Finally, I finished my #100DaysOfCode challenge I started on May 31st this year. The challenge is a great way to establish coding to become a daily habit, stop procrastinating and working on projects, that have been only ideas before. For me it also became a way to keep in practice, since I left my programmer\'s job for maternal leave. I wrote a short recap about what I did in 100 days time.\r\n\r\n<!--more-->\r\n<h3>What is the #100DaysOfCode challenge?</h3>\r\nThe challenge \'s website is available <a href=\"https://www.100daysofcode.com/\">here</a> and was established by <a href=\"https://twitter.com/ka11away\">Alexander Kallaway</a>. There are just two rules - code every day and track your efforts on Twitter. I didn\'t stick to those rules 100%, but I am happy with the outcome nevertheless. You can follow my progress on my <a href=\"https://twitter.com/frankanka\">Twitter profile</a> or in this small <a href=\"https://github.com/gitfrosh/100-days-of-code/blob/master/r1-log.md.\">log book</a> I wrote during the time.\r\n\r\nFor many coding newbies, the #100DaysOfCode helps with first tutorials and bootcamps, but since I\'m not a new at coding I collected some topics I wanted to learn about and projects I wanted to build.\r\n<h3>Which projects did I finish?</h3>\r\n<h4><a href=\"https://the-one-api.herokuapp.com\">The Lord of the Rings API</a></h4>\r\nThe \"API to rule them all\", the Lord of the Rings api, provides users with book, character, movie and quotes data. The api\'s documentation is available <a href=\"https://the-one-api.herokuapp.com\">here</a>. This was my biggest project I finished during the challenThe Lord of the Rings APIge and also my favourite one. It is built with Hapi.js, server side rendering React.js and includes technologies like MongoDB and JSON Web Token authorization. In the future I would like to put this project on Open Source to make contributions regarding the huge dataset and the code base possible. <a href=\"https://github.com/gitfrosh/lotr-api\">Github repository</a>\r\n<h4><a href=\"https://twitter.com/femtech_\">The friendly fem tech bot</a></h4>\r\nThe Node.js powered Twitter bot retweets female tech related tweets including #girlswhocode #womenintech #womenwhocode #womeninstem #femaletech #momswhocode and others. You can follow the <a href=\"https://twitter.com/femtech_\">@femtech_</a> bot on Twitter. <a href=\"https://github.com/gitfrosh/friendly-fem-tech-bot\">Github repository</a>\r\n<h4><a href=\"https://gitfrosh.github.io/blockchain-simulator/\">Blockchain simulator</a></h4>\r\nThis small app provides a basic blockchain simulation and is built in React.js. For this project I also deployed an app to a static site hoster Github pages for the first time - straightforward experience. <a href=\"https://github.com/gitfrosh/blockchain-simulator\">Github repository</a>\r\n<h4>\"Track ur mood\" Electron.js app</h4>\r\nA nice, small project to track your daily moods. It is built to try out Electron.js app and runs on Next.js under the hood. Data is stored in a lowdb powered Hapi.js (Node.js) backend. Plus, it is styled with a supercute Windows95 UI library. <a href=\"https://github.com/gitfrosh/track-ur-mood\">Github repository</a>\r\n<h4><a href=\"https://false-quotes-generator.herokuapp.com/\">The false quotes generator</a></h4>\r\nThe <a href=\"https://false-quotes-generator.herokuapp.com/\">false quotes generator</a> missmatches mostly Simpsons\' quotes to famous people. For this project I tried out Svelte.js and Sapper, a new shiny Javascript framework with a Node.js polka backend. <a href=\"https://github.com/gitfrosh/false-code-generator\">Github repository</a>\r\n<h4><a href=\"https://www.npmjs.com/package/random-lotr-movie-quote\">NPM package</a></h4>\r\nThis is my first move to publish a npm package and it returns a single Lord of the Rings movie quote. <a href=\"https://github.com/gitfrosh/random-lotr-movie-quote\">Github repository</a>\r\n<h4><a href=\"https://ueberdiespree.de\">ueberdiespree.de</a></h4>\r\nThis is my small portfolio website I revamped with Gatsby.js and some responsiveness improvements. <a href=\"https://github.com/gitfrosh/ueberdiespree\">Github repository</a>\r\n<h3>What else did I learn?</h3>\r\nWhenever I didn\'t feel like coding on a project I worked on this Udemy course by Andrei Neagoie which includes great material about advanced web develpoment topics like performance enhancements, security, typescript, testing, CI/CD, server side rendering, and more.\r\nhttps://www.udemy.com/the-complete-junior-to-senior-web-developer-roadmap/\r\n\r\n&nbsp;','#100DaysOfCode - a recap','','inherit','closed','closed','','212-revision-v1','','','2019-07-18 21:37:56','2019-07-18 19:37:56','',212,'https://rike.dev/2019/07/18/212-revision-v1/',0,'revision','',0),(220,1,'2019-07-18 21:38:19','2019-07-18 19:38:19','Finally, I finished my #100DaysOfCode challenge I started on May 31st this year. The challenge is a great way to establish coding to become a daily habit, stop procrastinating and working on projects, that have been only ideas before. For me it also became a way to keep in practice, since I left my programmer\'s job for maternal leave. I wrote a short recap about what I did in 100 days time.\r\n\r\n<!--more-->\r\n<h3>What is the #100DaysOfCode challenge?</h3>\r\nThe challenge \'s website is available <a href=\"https://www.100daysofcode.com/\">here</a> and was established by <a href=\"https://twitter.com/ka11away\">Alexander Kallaway</a>. There are just two rules - code every day and track your efforts on Twitter. I didn\'t stick to those rules 100%, but I am happy with the outcome nevertheless. You can follow my progress on my <a href=\"https://twitter.com/frankanka\">Twitter profile</a> or in this small <a href=\"https://github.com/gitfrosh/100-days-of-code/blob/master/r1-log.md.\">log book</a> I wrote during the time.\r\n\r\nFor many coding newbies, the #100DaysOfCode helps with first tutorials and bootcamps, but since I\'m not a new at coding I collected some topics I wanted to learn about and projects I wanted to build.\r\n<h3>Which projects did I finish?</h3>\r\n<h4><a href=\"https://the-one-api.herokuapp.com\">The Lord of the Rings API</a></h4>\r\nThe \"API to rule them all\", the Lord of the Rings api, provides users with book, character, movie and quotes data. The api\'s documentation is available <a href=\"https://the-one-api.herokuapp.com\">here</a>. This was my biggest project I finished during the challenThe Lord of the Rings APIge and also my favourite one. It is built with Hapi.js, server side rendering React.js and includes technologies like MongoDB and JSON Web Token authorization. In the future I would like to put this project on Open Source to make contributions regarding the huge dataset and the code base possible. <a href=\"https://github.com/gitfrosh/lotr-api\">Github repository</a>\r\n<h4><a href=\"https://twitter.com/femtech_\">The friendly fem tech bot</a></h4>\r\nThe Node.js powered Twitter bot retweets female tech related tweets including #girlswhocode #womenintech #womenwhocode #womeninstem #femaletech #momswhocode and others. You can follow the <a href=\"https://twitter.com/femtech_\">@femtech_</a> bot on Twitter. <a href=\"https://github.com/gitfrosh/friendly-fem-tech-bot\">Github repository</a>\r\n<h4><a href=\"https://gitfrosh.github.io/blockchain-simulator/\">Blockchain simulator</a></h4>\r\nThis small app provides a basic blockchain simulation and is built in React.js. For this project I also <a href=\"https://gitfrosh.github.io/blockchain-simulator/\">deployed</a> an app to a static site hoster Github pages for the first time - straightforward experience. <a href=\"https://github.com/gitfrosh/blockchain-simulator\">Github repository</a>\r\n<h4>\"Track ur mood\" Electron.js app</h4>\r\nA nice, small project to track your daily moods. It is built to try out Electron.js app and runs on Next.js under the hood. Data is stored in a lowdb powered Hapi.js (Node.js) backend. Plus, it is styled with a supercute Windows95 UI library. <a href=\"https://github.com/gitfrosh/track-ur-mood\">Github repository</a>\r\n<h4><a href=\"https://false-quotes-generator.herokuapp.com/\">The false quotes generator</a></h4>\r\nThe <a href=\"https://false-quotes-generator.herokuapp.com/\">false quotes generator</a> missmatches mostly Simpsons\' quotes to famous people. For this project I tried out Svelte.js and Sapper, a new shiny Javascript framework with a Node.js polka backend. <a href=\"https://github.com/gitfrosh/false-code-generator\">Github repository</a>\r\n<h4><a href=\"https://www.npmjs.com/package/random-lotr-movie-quote\">NPM package</a></h4>\r\nThis is my first move to publish a npm package and it returns a single Lord of the Rings movie quote. <a href=\"https://github.com/gitfrosh/random-lotr-movie-quote\">Github repository</a>\r\n<h4><a href=\"https://ueberdiespree.de\">ueberdiespree.de</a></h4>\r\nThis is my small portfolio website I revamped with Gatsby.js and some responsiveness improvements. <a href=\"https://github.com/gitfrosh/ueberdiespree\">Github repository</a>\r\n<h3>What else did I learn?</h3>\r\nWhenever I didn\'t feel like coding on a project I worked on this Udemy course by Andrei Neagoie which includes great material about advanced web develpoment topics like performance enhancements, security, typescript, testing, CI/CD, server side rendering, and more.\r\nhttps://www.udemy.com/the-complete-junior-to-senior-web-developer-roadmap/\r\n\r\n&nbsp;','#100DaysOfCode - a recap','','inherit','closed','closed','','212-revision-v1','','','2019-07-18 21:38:19','2019-07-18 19:38:19','',212,'https://rike.dev/2019/07/18/212-revision-v1/',0,'revision','',0),(221,1,'2019-07-18 22:03:40','2019-07-18 20:03:40','Finally, I finished my #100DaysOfCode challenge I started on May 31st this year. The challenge is a great way to establish coding to become a daily habit, stop procrastinating and working on projects, that have been only ideas before. For me it also became a way to keep in practice, since I left my programmer\'s job for maternal leave. I wrote a short recap about what I did in 100 days time.\r\n\r\n<!--more-->\r\n<h3>What is the #100DaysOfCode challenge?</h3>\r\nThe challenge \'s website is available <a href=\"https://www.100daysofcode.com/\">here</a> and was established by <a href=\"https://twitter.com/ka11away\">Alexander Kallaway</a>. There are just two rules - code every day and track your efforts on Twitter. I didn\'t stick to those rules 100%, but I am happy with the outcome nevertheless. You can follow my progress on my <a href=\"https://twitter.com/frankanka\">Twitter profile</a> or in this small <a href=\"https://github.com/gitfrosh/100-days-of-code/blob/master/r1-log.md.\">log book</a> I wrote during the time.\r\n\r\nFor many coding newbies, the #100DaysOfCode helps with first tutorials and bootcamps, but since I\'m not a new at coding I collected some topics I wanted to learn about and projects I wanted to build.\r\n<h3>Which projects did I finish?</h3>\r\n<h4><a href=\"https://the-one-api.herokuapp.com\">The Lord of the Rings API</a></h4>\r\nThe \"API to rule them all\", the Lord of the Rings api, provides users with book, character, movie and quotes data. The api\'s documentation is available <a href=\"https://the-one-api.herokuapp.com\">here</a>. This was my biggest project I finished during the challenThe Lord of the Rings APIge and also my favourite one. It is built with Hapi.js, server side rendering React.js and includes technologies like MongoDB and JSON Web Token authorization. In the future I would like to put this project on Open Source to make contributions regarding the huge dataset and the code base possible. <a href=\"https://github.com/gitfrosh/lotr-api\">Github repository</a>\r\n<h4><a href=\"https://twitter.com/femtech_\">The friendly fem tech bot</a></h4>\r\nThe Node.js powered Twitter bot retweets female tech related tweets including #girlswhocode #womenintech #womenwhocode #womeninstem #femaletech #momswhocode and others. You can follow the <a href=\"https://twitter.com/femtech_\">@femtech_</a> bot on Twitter. <a href=\"https://github.com/gitfrosh/friendly-fem-tech-bot\">Github repository</a>\r\n<h4><a href=\"https://gitfrosh.github.io/blockchain-simulator/\">Blockchain simulator</a></h4>\r\nThis small app provides a basic blockchain simulation and is built in React.js. For this project I also <a href=\"https://gitfrosh.github.io/blockchain-simulator/\">deployed</a> an app to a static site hoster Github pages for the first time - straightforward experience. <a href=\"https://github.com/gitfrosh/blockchain-simulator\">Github repository</a>\r\n<h4>\"Track ur mood\" Electron.js app</h4>\r\nA nice, small project to track your daily moods. It is built to try out Electron.js app and runs on Next.js under the hood. Data is stored in a lowdb powered Hapi.js (Node.js) backend. Plus, it is styled with a supercute Windows95 UI library. <a href=\"https://github.com/gitfrosh/track-ur-mood\">Github repository</a>\r\n<h4><a href=\"https://false-quotes-generator.herokuapp.com/\">The false quotes generator</a></h4>\r\nThe <a href=\"https://false-quotes-generator.herokuapp.com/\">false quotes generator</a> missmatches mostly Simpsons\' quotes to famous people. For this project I tried out Svelte.js and Sapper, a new shiny Javascript framework with a Node.js polka backend. <a href=\"https://github.com/gitfrosh/false-code-generator\">Github repository</a>\r\n<h4><a href=\"https://www.npmjs.com/package/random-lotr-movie-quote\">NPM package</a></h4>\r\nThis is my first move to publish a npm package and it returns a single Lord of the Rings movie quote. <a href=\"https://github.com/gitfrosh/random-lotr-movie-quote\">Github repository</a>\r\n<h4><a href=\"https://ueberdiespree.de\">ueberdiespree.de</a></h4>\r\nThis is my small portfolio website I revamped with Gatsby.js and some responsiveness improvements. <a href=\"https://github.com/gitfrosh/ueberdiespree\">Github repository</a>\r\n<h3>What else did I learn?</h3>\r\nWhenever I didn\'t feel like coding on a project I worked on <a href=\"https://www.udemy.com/the-complete-junior-to-senior-web-developer-roadmap/\">this Udemy course</a> by Andrei Neagoie which includes great material about advanced web development topics like performance enhancements, security, typescript, testing, CI/CD, server side rendering, and more. I also worked on advanced React.js topics like React hooks and React CSS styling. Furthermore a studied some DevOps related problems and created my first Docker container.\r\n<h3>Should you do the #100DaysOfCode challenge too?</h3>\r\nTotally! The challenge can help to keep going: Learning to code, finishing projects, achieving your goals. A big plus is the huge community on Twitter. With like-minded people in your timeline staying away from procrastination is much more easier. <a href=\"https://www.100daysofcode.com/\">Start today!  </a>','#100DaysOfCode - a recap','','inherit','closed','closed','','212-revision-v1','','','2019-07-18 22:03:40','2019-07-18 20:03:40','',212,'https://rike.dev/2019/07/18/212-revision-v1/',0,'revision','',0),(222,1,'2019-07-18 22:04:02','2019-07-18 20:04:02','Finally, I finished my #100DaysOfCode challenge I started on May 31st this year. The challenge is a great way to establish coding to become a daily habit, stop procrastinating and working on projects, that have been only ideas before. For me it also became a way to keep in practice, since I left my programmer\'s job for maternal leave. I wrote a short recap about what I did in 100 days time.\r\n\r\n<!--more-->\r\n<h3>What is the #100DaysOfCode challenge?</h3>\r\nThe challenge \'s website is available <a href=\"https://www.100daysofcode.com/\">here</a> and was established by <a href=\"https://twitter.com/ka11away\">Alexander Kallaway</a>. There are just two rules - code every day and track your efforts on Twitter. I didn\'t stick to those rules 100%, but I am happy with the outcome nevertheless. You can follow my progress on my <a href=\"https://twitter.com/frankanka\">Twitter profile</a> or in this small <a href=\"https://github.com/gitfrosh/100-days-of-code/blob/master/r1-log.md.\">log book</a> I wrote during the time.\r\n\r\nFor many coding newbies, the #100DaysOfCode helps with first tutorials and bootcamps, but since I\'m not a new at coding I collected some topics I wanted to learn about and projects I wanted to build.\r\n<h3>Which projects did I finish?</h3>\r\n<h5><a href=\"https://the-one-api.herokuapp.com\">The Lord of the Rings API</a></h5>\r\nThe \"API to rule them all\", the Lord of the Rings api, provides users with book, character, movie and quotes data. The api\'s documentation is available <a href=\"https://the-one-api.herokuapp.com\">here</a>. This was my biggest project I finished during the challenThe Lord of the Rings APIge and also my favourite one. It is built with Hapi.js, server side rendering React.js and includes technologies like MongoDB and JSON Web Token authorization. In the future I would like to put this project on Open Source to make contributions regarding the huge dataset and the code base possible. <a href=\"https://github.com/gitfrosh/lotr-api\">Github repository</a>\r\n<h4><a href=\"https://twitter.com/femtech_\">The friendly fem tech bot</a></h4>\r\nThe Node.js powered Twitter bot retweets female tech related tweets including #girlswhocode #womenintech #womenwhocode #womeninstem #femaletech #momswhocode and others. You can follow the <a href=\"https://twitter.com/femtech_\">@femtech_</a> bot on Twitter. <a href=\"https://github.com/gitfrosh/friendly-fem-tech-bot\">Github repository</a>\r\n<h4><a href=\"https://gitfrosh.github.io/blockchain-simulator/\">Blockchain simulator</a></h4>\r\nThis small app provides a basic blockchain simulation and is built in React.js. For this project I also <a href=\"https://gitfrosh.github.io/blockchain-simulator/\">deployed</a> an app to a static site hoster Github pages for the first time - straightforward experience. <a href=\"https://github.com/gitfrosh/blockchain-simulator\">Github repository</a>\r\n<h4>\"Track ur mood\" Electron.js app</h4>\r\nA nice, small project to track your daily moods. It is built to try out Electron.js app and runs on Next.js under the hood. Data is stored in a lowdb powered Hapi.js (Node.js) backend. Plus, it is styled with a supercute Windows95 UI library. <a href=\"https://github.com/gitfrosh/track-ur-mood\">Github repository</a>\r\n<h4><a href=\"https://false-quotes-generator.herokuapp.com/\">The false quotes generator</a></h4>\r\nThe <a href=\"https://false-quotes-generator.herokuapp.com/\">false quotes generator</a> missmatches mostly Simpsons\' quotes to famous people. For this project I tried out Svelte.js and Sapper, a new shiny Javascript framework with a Node.js polka backend. <a href=\"https://github.com/gitfrosh/false-code-generator\">Github repository</a>\r\n<h4><a href=\"https://www.npmjs.com/package/random-lotr-movie-quote\">NPM package</a></h4>\r\nThis is my first move to publish a npm package and it returns a single Lord of the Rings movie quote. <a href=\"https://github.com/gitfrosh/random-lotr-movie-quote\">Github repository</a>\r\n<h4><a href=\"https://ueberdiespree.de\">ueberdiespree.de</a></h4>\r\nThis is my small portfolio website I revamped with Gatsby.js and some responsiveness improvements. <a href=\"https://github.com/gitfrosh/ueberdiespree\">Github repository</a>\r\n<h3>What else did I learn?</h3>\r\nWhenever I didn\'t feel like coding on a project I worked on <a href=\"https://www.udemy.com/the-complete-junior-to-senior-web-developer-roadmap/\">this Udemy course</a> by Andrei Neagoie which includes great material about advanced web development topics like performance enhancements, security, typescript, testing, CI/CD, server side rendering, and more. I also worked on advanced React.js topics like React hooks and React CSS styling. Furthermore a studied some DevOps related problems and created my first Docker container.\r\n<h3>Should you do the #100DaysOfCode challenge too?</h3>\r\nTotally! The challenge can help to keep going: Learning to code, finishing projects, achieving your goals. A big plus is the huge community on Twitter. With like-minded people in your timeline staying away from procrastination is much more easier. <a href=\"https://www.100daysofcode.com/\">Start today!  </a>','#100DaysOfCode - a recap','','inherit','closed','closed','','212-revision-v1','','','2019-07-18 22:04:02','2019-07-18 20:04:02','',212,'https://rike.dev/2019/07/18/212-revision-v1/',0,'revision','',0),(223,1,'2019-07-18 22:04:54','2019-07-18 20:04:54','Finally, I finished my #100DaysOfCode challenge I started on May 31st this year. The challenge is a great way to establish coding to become a daily habit, stop procrastinating and working on projects, that have been only ideas before. For me it also became a way to keep in practice, since I left my programmer\'s job for maternal leave. I wrote a short recap about what I did in 100 days time.\r\n\r\n<!--more-->\r\n<h3>What is the #100DaysOfCode challenge?</h3>\r\nThe challenge \'s website is available <a href=\"https://www.100daysofcode.com/\">here</a> and was established by <a href=\"https://twitter.com/ka11away\">Alexander Kallaway</a>. There are just two rules - code every day and track your efforts on Twitter. I didn\'t stick to those rules 100%, but I am happy with the outcome nevertheless. You can follow my progress on my <a href=\"https://twitter.com/frankanka\">Twitter profile</a> or in this small <a href=\"https://github.com/gitfrosh/100-days-of-code/blob/master/r1-log.md.\">log book</a> I wrote during the time.\r\n\r\nFor many coding newbies, the #100DaysOfCode helps with first tutorials and bootcamps, but since I\'m not a new at coding I collected some topics I wanted to learn about and projects I wanted to build.\r\n<h3>Which projects did I finish?</h3>\r\n<h5><a href=\"https://the-one-api.herokuapp.com\">The Lord of the Rings API</a></h5>\r\nThe \"API to rule them all\", the Lord of the Rings api, provides users with book, character, movie and quotes data. The api\'s documentation is available <a href=\"https://the-one-api.herokuapp.com\">here</a>. This was my biggest project I finished during the challenThe Lord of the Rings APIge and also my favourite one. It is built with Hapi.js, server side rendering React.js and includes technologies like MongoDB and JSON Web Token authorization. In the future I would like to put this project on Open Source to make contributions regarding the huge dataset and the code base possible. <a href=\"https://github.com/gitfrosh/lotr-api\">Github repository</a>\r\n<h5><a href=\"https://twitter.com/femtech_\">The friendly fem tech bot</a></h5>\r\nThe Node.js powered Twitter bot retweets female tech related tweets including #girlswhocode #womenintech #womenwhocode #womeninstem #femaletech #momswhocode and others. You can follow the <a href=\"https://twitter.com/femtech_\">@femtech_</a> bot on Twitter. <a href=\"https://github.com/gitfrosh/friendly-fem-tech-bot\">Github repository</a>\r\n<h5><a href=\"https://gitfrosh.github.io/blockchain-simulator/\">Blockchain simulator</a></h5>\r\nThis small app provides a basic blockchain simulation and is built in React.js. For this project I also <a href=\"https://gitfrosh.github.io/blockchain-simulator/\">deployed</a> an app to a static site hoster Github pages for the first time - straightforward experience. <a href=\"https://github.com/gitfrosh/blockchain-simulator\">Github repository</a>\r\n<h5>\"Track ur mood\" Electron.js app</h5>\r\nA nice, small project to track your daily moods. It is built to try out Electron.js app and runs on Next.js under the hood. Data is stored in a lowdb powered Hapi.js (Node.js) backend. Plus, it is styled with a supercute Windows95 UI library. <a href=\"https://github.com/gitfrosh/track-ur-mood\">Github repository</a>\r\n<h5><a href=\"https://false-quotes-generator.herokuapp.com/\">The false quotes generator</a></h5>\r\nThe <a href=\"https://false-quotes-generator.herokuapp.com/\">false quotes generator</a> missmatches mostly Simpsons\' quotes to famous people. For this project I tried out Svelte.js and Sapper, a new shiny Javascript framework with a Node.js polka backend. <a href=\"https://github.com/gitfrosh/false-code-generator\">Github repository</a>\r\n<h5><a href=\"https://www.npmjs.com/package/random-lotr-movie-quote\">Publish a NPM package</a></h5>\r\nThis is my first move to publish a npm package and it returns a single Lord of the Rings movie quote. <a href=\"https://github.com/gitfrosh/random-lotr-movie-quote\">Github repository</a>\r\n<h5><a href=\"https://ueberdiespree.de\">ueberdiespree.de</a></h5>\r\nThis is my small portfolio website I revamped with Gatsby.js and some responsiveness improvements. <a href=\"https://github.com/gitfrosh/ueberdiespree\">Github repository</a>\r\n<h3>What else did I learn?</h3>\r\nWhenever I didn\'t feel like coding on a project I worked on <a href=\"https://www.udemy.com/the-complete-junior-to-senior-web-developer-roadmap/\">this Udemy course</a> by Andrei Neagoie which includes great material about advanced web development topics like performance enhancements, security, typescript, testing, CI/CD, server side rendering, and more. I also worked on advanced React.js topics like React hooks and React CSS styling. Furthermore a studied some DevOps related problems and created my first Docker container.\r\n<h3>Should you do the #100DaysOfCode challenge too?</h3>\r\nTotally! The challenge can help to keep going: Learning to code, finishing projects, achieving your goals. A big plus is the huge community on Twitter. With like-minded people in your timeline staying away from procrastination is much more easier. <a href=\"https://www.100daysofcode.com/\">Start today!  </a>','#100DaysOfCode - a recap','','inherit','closed','closed','','212-revision-v1','','','2019-07-18 22:04:54','2019-07-18 20:04:54','',212,'https://rike.dev/2019/07/18/212-revision-v1/',0,'revision','',0),(224,1,'2019-07-18 22:08:07','2019-07-18 20:08:07','Finally, I finished my #100DaysOfCode challenge I started on May 31st this year. The challenge is a great way to establish coding to become a daily habit, stop procrastinating and working on projects, that have been only ideas before. For me it also became a way to keep in practice, since I left my programmer\'s job for maternal leave. I wrote a short recap about what I did in 100 days time.\r\n\r\n<!--more-->\r\n<h3>What is the #100DaysOfCode challenge?</h3>\r\nThe challenge was established by <a href=\"https://twitter.com/ka11away\">Alexander Kallaway</a> and its website is available <a href=\"https://www.100daysofcode.com/\">here</a>. There are just two rules: code every day and track your efforts on Twitter. I didn\'t stick to those rules 100%, but I am happy with the outcome nevertheless. You can follow my progress on my <a href=\"https://twitter.com/frankanka\">Twitter profile</a> or in this small <a href=\"https://github.com/gitfrosh/100-days-of-code/blob/master/r1-log.md.\">log book</a> I wrote during the time.\r\n\r\nFor many coding newbies, the #100DaysOfCode helps with first tutorials and bootcamps, but since this was not the case for me I collected some topics I wanted to learn about and projects I planned to build.\r\n<h3>Which projects did I finish?</h3>\r\n<h5><a href=\"https://the-one-api.herokuapp.com\">The Lord of the Rings API</a></h5>\r\nThe \"API to rule them all\", the Lord of the Rings api, provides users with book, character, movie and quotes data. The api\'s documentation is available <a href=\"https://the-one-api.herokuapp.com\">here</a>. This was my biggest project I finished during the challenThe Lord of the Rings APIge and also my favourite one. It is built with Hapi.js, server side rendering React.js and includes technologies like MongoDB and JSON Web Token authorization. In the future I would like to put this project on Open Source to make contributions regarding the huge dataset and the code base possible. <a href=\"https://github.com/gitfrosh/lotr-api\">Github repository</a>\r\n<h5><a href=\"https://twitter.com/femtech_\">The friendly fem tech bot</a></h5>\r\nThe Node.js powered Twitter bot retweets female tech related tweets including #girlswhocode #womenintech #womenwhocode #womeninstem #femaletech #momswhocode and others. You can follow the <a href=\"https://twitter.com/femtech_\">@femtech_</a> bot on Twitter. <a href=\"https://github.com/gitfrosh/friendly-fem-tech-bot\">Github repository</a>\r\n<h5><a href=\"https://gitfrosh.github.io/blockchain-simulator/\">Blockchain simulator</a></h5>\r\nThis small app provides a basic blockchain simulation and is built in React.js. For this project I also <a href=\"https://gitfrosh.github.io/blockchain-simulator/\">deployed</a> an app to a static site hoster Github pages for the first time - straightforward experience. <a href=\"https://github.com/gitfrosh/blockchain-simulator\">Github repository</a>\r\n<h5>\"Track ur mood\" Electron.js app</h5>\r\nA nice, small project to track your daily moods. It is built to try out Electron.js app and runs on Next.js under the hood. Data is stored in a lowdb powered Hapi.js (Node.js) backend. Plus, it is styled with a supercute Windows95 UI library. <a href=\"https://github.com/gitfrosh/track-ur-mood\">Github repository</a>\r\n<h5><a href=\"https://false-quotes-generator.herokuapp.com/\">The false quotes generator</a></h5>\r\nThe <a href=\"https://false-quotes-generator.herokuapp.com/\">false quotes generator</a> missmatches mostly Simpsons\' quotes to famous people. For this project I tried out Svelte.js and Sapper, a new shiny Javascript framework with a Node.js polka backend. <a href=\"https://github.com/gitfrosh/false-code-generator\">Github repository</a>\r\n<h5><a href=\"https://www.npmjs.com/package/random-lotr-movie-quote\">Publish a NPM package</a></h5>\r\nThis is my first move to publish a npm package and it returns a single Lord of the Rings movie quote. <a href=\"https://github.com/gitfrosh/random-lotr-movie-quote\">Github repository</a>\r\n<h5><a href=\"https://ueberdiespree.de\">ueberdiespree.de</a></h5>\r\nThis is my small portfolio website I revamped with Gatsby.js and some responsiveness improvements. <a href=\"https://github.com/gitfrosh/ueberdiespree\">Github repository</a>\r\n<h3>What else did I learn?</h3>\r\nWhenever I didn\'t feel like coding on a project I worked on <a href=\"https://www.udemy.com/the-complete-junior-to-senior-web-developer-roadmap/\">this Udemy course</a> by Andrei Neagoie which includes great material about advanced web development topics like performance enhancements, security, typescript, testing, CI/CD, server side rendering, and more. I also worked on advanced React.js topics like React hooks and React CSS styling. Furthermore a studied some DevOps related problems and created my first Docker container.\r\n<h3>Should you do the #100DaysOfCode challenge too?</h3>\r\nTotally! The challenge can help to keep going: Learning to code, finishing projects, achieving your goals. A big plus is the huge community on Twitter. With like-minded people in your timeline staying away from procrastination is much more easier. <a href=\"https://www.100daysofcode.com/\">Start today!  </a>','#100DaysOfCode - a recap','','inherit','closed','closed','','212-revision-v1','','','2019-07-18 22:08:07','2019-07-18 20:08:07','',212,'https://rike.dev/2019/07/18/212-revision-v1/',0,'revision','',0),(225,1,'2019-07-18 22:14:19','2019-07-18 20:14:19','Finally, I finished my #100DaysOfCode challenge I started on May 31st this year. The challenge is a great way to establish coding to become a daily habit, stop procrastinating and working on projects, that have been only ideas before. For me it also became a way to keep in practice, since I left my programmer\'s job for maternal leave. I wrote a short recap about what I did in 100 days time.\r\n\r\n<!--more-->\r\n<h3>What is the #100DaysOfCode challenge?</h3>\r\nThe challenge was established by <a href=\"https://twitter.com/ka11away\">Alexander Kallaway</a> and its website is available <a href=\"https://www.100daysofcode.com/\">here</a>. There are just two rules: code every day and track your efforts on Twitter. I didn\'t stick to those rules 100%, but I am happy with the outcome nevertheless. You can follow my progress on my <a href=\"https://twitter.com/frankanka\">Twitter profile</a> or in this small <a href=\"https://github.com/gitfrosh/100-days-of-code/blob/master/r1-log.md.\">log book</a> I wrote during the time.\r\n\r\nFor many coding newbies, the #100DaysOfCode helps with first tutorials and bootcamps, but since this was not the case for me I collected some topics I wanted to learn about and projects I planned to build.\r\n<h3>Which projects did I finish?</h3>\r\n<h5><a href=\"https://the-one-api.herokuapp.com\">The Lord of the Rings API</a></h5>\r\nThe \"API to rule them all\", the Lord of the Rings api, provides users with book, character, movie and quotes data. The api\'s documentation is available <a href=\"https://the-one-api.herokuapp.com\">here</a>. This was my biggest project I finished during the challenge and it is also my favourite one. It\'s built with Hapi.js, server side rendering React.js and includes technologies like MongoDB and JSON Web Token authorization. In the future I would like to put this project on Open Source to make contributions possible. <a href=\"https://github.com/gitfrosh/lotr-api\">Github repository</a>\r\n<h5><a href=\"https://twitter.com/femtech_\">The friendly fem tech bot</a></h5>\r\nThe Node.js powered Twitter bot retweets female tech related tweets including #girlswhocode #womenintech #womenwhocode #womeninstem #femaletech #momswhocode and others. You can follow the <a href=\"https://twitter.com/femtech_\">@femtech_</a> bot on Twitter. <a href=\"https://github.com/gitfrosh/friendly-fem-tech-bot\">Github repository</a>\r\n<h5><a href=\"https://gitfrosh.github.io/blockchain-simulator/\">Blockchain simulator</a></h5>\r\nThis small app provides a basic blockchain simulation and is built in React.js. For this project I also <a href=\"https://gitfrosh.github.io/blockchain-simulator/\">deployed</a> an app to a static site hoster Github pages for the first time -  a straightforward experience. <a href=\"https://github.com/gitfrosh/blockchain-simulator\">Github repository</a>\r\n<h5>\"Track ur mood\" Electron.js app</h5>\r\nThis is an experimental small project that can track your daily moods. It is built to try out Electron.js app and runs on Next.js under the hood. Data is stored in a lowdb powered Node.js / Hapi.js backend. Plus, it is styled with a supercute Windows95 UI library. <a href=\"https://github.com/gitfrosh/track-ur-mood\">Github repository</a>\r\n<h5><a href=\"https://false-quotes-generator.herokuapp.com/\">The false quotes generator</a></h5>\r\nThe <a href=\"https://false-quotes-generator.herokuapp.com/\">false quotes generator</a> missmatches mostly Simpsons\' quotes to famous people. For this project I tried out Svelte.js and Sapper, a new shiny Javascript framework with a Node.js / Polka backend. <a href=\"https://github.com/gitfrosh/false-code-generator\">Github repository</a>\r\n<h5><a href=\"https://www.npmjs.com/package/random-lotr-movie-quote\">Publish a npm package</a></h5>\r\nThis is my first move to publish a npm package and - hurray! - it returns a single Lord of the Rings movie quote. <a href=\"https://github.com/gitfrosh/random-lotr-movie-quote\">Github repository</a>\r\n<h5><a href=\"https://ueberdiespree.de\">ueberdiespree.de</a></h5>\r\nThis is my small portfolio website I revamped with the static site generator Gatsby.js and some responsiveness improvements. <a href=\"https://github.com/gitfrosh/ueberdiespree\">Github repository</a>\r\n<h3>What else did I learn?</h3>\r\nWhenever I didn\'t feel like coding on a project I worked on <a href=\"https://www.udemy.com/the-complete-junior-to-senior-web-developer-roadmap/\">this Udemy course</a> by Andrei Neagoie which includes great material about advanced web development topics like performance enhancements, security, typescript, testing, CI/CD, server side rendering, and more. I also worked on advanced React.js topics like React hooks and React CSS styling. Furthermore a studied some DevOps related problems and created my first Docker container.\r\n<h3>Should you do the #100DaysOfCode challenge too?</h3>\r\nTotally! The challenge can help to keep going: Learning to code, finishing projects, achieving your goals. A big plus is the huge community on Twitter. With like-minded people in your timeline staying away from procrastination is much more easier. <a href=\"https://www.100daysofcode.com/\">Start today!  </a>','#100DaysOfCode - a recap','','inherit','closed','closed','','212-revision-v1','','','2019-07-18 22:14:19','2019-07-18 20:14:19','',212,'https://rike.dev/2019/07/18/212-revision-v1/',0,'revision','',0),(226,1,'2019-07-22 20:41:28','2019-07-22 18:41:28','<!-- wp:paragraph -->\r\n<p>In diesem Tutorial geht es darum, Node.js und npm als Vorbereitung für das Setup eines eigenen kleinen Webservers zu installieren. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" (2019) entstanden.</p>\r\n<p><!--more--></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Was ist Node.js?</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><em>Node.js</em> ist eine Softwareumgebung für Javascript, welche es ermöglicht, serverseitige Javascript-Anwendungen (-&gt; Webserver) auf einem beliebigen Betriebssystem zu programmieren. Sie erweitert \"klassisches\" Javascript um die notwendigen Funktionen und ist dabei extrem ressourcenschonend. Wofür brauchen wir <strong>npm</strong>? Mit dem Node Package Manager können wir die Kernfunktionalität von <em>Node.js</em> über Zusatzpakete erweitern. Entwickler aus der ganzen Welt stellen ihre Pakete dort kostenlos zur Verfügung.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Node.js installieren</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>Windows 7/8/10</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Für Windows stellt die offizielle <em>Node.js</em>-Website für die jeweiligen Versionen zur Verfügung: <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener noreferrer\">https://nodejs.org/en/download/</a>. Lade die richtige Datei (.msi) herunter und starte den Installer mit einem Doppelklick. Der Wizard wird dich durch den sehr kurzen Installationsprozess begleiten. Wähle während der Installation die Standardeinstellungen. <em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>MacOS</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Über die offizielle <em>Node.js</em>-Website kannst du den Installer (.pkg) für Node.js herunterladen: <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener noreferrer\">https://nodejs.org/en/download/</a>. Starte den Installer über deinen Mac und befolge die (kurzen) Installationsanweisungen. Wähle während der Installation die Standardeinstellungen. <em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>Linux/Ubuntu</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>In Ubuntu kann <em>Node.js</em> über die Paketverwaltung installiert werden. Da <em>npm</em> nicht automatisch mitinstalliert wird, holen wir dies manuell nach.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">sudo apt-get update\r\nsudo apt-get install nodejs\r\nsudo apt-get install npm</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Mit dem Terminal arbeiten / Die Installation von Node.js und npm prüfen</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Mit dem Terminal können wir unser Betriebssystem textbasiert steuern. Häufigster Vorbehalt gegen das Terminal ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:\r\n<ul>\r\n<li>In <strong>Windows 8 und 10</strong> geht das mit einem Klick mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination [Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li>\r\n<li>In <strong>Windows 7</strong> klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li>\r\n<li>In vielen <strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li>\r\n<li>Auf <strong>MacOS</strong> führt die Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li>\r\n</ul>\r\n</li>\r\n<li>Nun prüfen wir, ob auf unserem Betriebssystem <em>Node.js</em> und <em>npm</em> korrekt installiert wurden. Das geht mit den Terminal-Befehlen</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version <em>Node.js </em>und<em> npm </em>installiert sind. Falls eine Fehlermeldung erscheint, solltest du den Installationsvorgang wiederholen.</li>\r\n</ul>\r\n<!-- /wp:list -->','Einen Webserver einrichten (1): Node.js und npm installieren','','inherit','closed','closed','','179-revision-v1','','','2019-07-22 20:41:28','2019-07-22 18:41:28','',179,'https://rike.dev/2019/07/22/179-revision-v1/',0,'revision','',0),(227,1,'2019-07-22 20:42:09','2019-07-22 18:42:09','In diesem Tutorial geht es darum, einen einfachen Webserver auf Express.js-Basis zu installieren und zu testen. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\" target=\"_blank\" rel=\"noopener noreferrer\">SummerSchool “Informatica Feminale”</a> für den Kurs “Einführung in die modere Webentwicklung” (2019) entstanden.\r\n\r\n<!--more-->\r\n\r\nFür eine Anleitung zur Installation von Node.js und npm in Vorbereitung auf das Setup des Express.js-Servers, gibt es <a href=\"https://rike.dev/2019/06/18/node-js-und-npm-installieren/\" target=\"_blank\" rel=\"noopener noreferrer\">hier</a> das entsprechende Tutorial.\r\n<h2>Den Webserver einrichten / Express.js installieren</h2>\r\n<ul>\r\n 	<li>Lege auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest. Den Ort kannst du beliebig festlegen.</li>\r\n 	<li>Innerhalb dieses Ordners lege eine neue Datei an (in Windows z. B. per Rechtsklick: “Neues Textdokument”) mit dem Namen “server.js”.</li>\r\n 	<li>Innerhalb des gleichen Ordners lege einen neuen Unterordner an mit dem Namen \"public\". Darin erzeugst du eine neue Datei “index.html”.</li>\r\n 	<li>(In Windows solltest du sicher gehen, dass sich die Dateiendung mitändert, und nicht etwa eine Datei nach dem Schema “server.js.txt” und “index.html.txt” entstanden ist!)</li>\r\n 	<li>Navigiere im Terminal zum neu angelegten Ordner. Der Befehl dazu lautet “cd” gefolgt vom entsprechenden Pfad. Für ein Windows-System könnte der Befehl so lauten:\r\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Neues-Projekt1</pre>\r\nFür ein macOS-System wäre dies ein Beispiel-Befehl:\r\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Neues-Projekt1</pre>\r\nWenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</li>\r\n 	<li>Installiere in diesem Ordner das <em>npm</em>-Paket “Express.js”, den de-Facto-Standard für Webanwendungen unter Node.js mit dem Terminal-Befehl</li>\r\n</ul>\r\n<pre class=\"wp-block-preformatted\">npm install express</pre>\r\n<ul>\r\n 	<li>Öffne die Datei “server.js” in einem Texteditor (z. B. “Sublime”) und füge diesen Quellcode ein:</li>\r\n</ul>\r\n<pre class=\"wp-block-preformatted\">const express = require(\"express\");\r\nconst app = express();\r\n\r\napp.use(express.static(\'public\'));\r\n\r\napp.listen(3000);\r\nconsole.log(\"Server started on port 3000\");</pre>\r\n<ul>\r\n 	<li>Öffne die Datei “index.html” im Unterordner \"public\" und füge einen beliebigen Text ein, z. B. “Hello World!”.</li>\r\n 	<li>Jetzt müssen wir unseren Webserver nur noch starten. Im Quellcode haben wir ihn bereits angewiesen, die Datei <em>index.html </em>auszugeben.</li>\r\n</ul>\r\n<h2>Den Webserver starten</h2>\r\nPrüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad (im Beispiel \"..\\Neues-Projekt1\") befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:\r\n<pre class=\"wp-block-preformatted\">node server.js</pre>\r\nNavigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:3000/\" target=\"_blank\" rel=\"noopener noreferrer\">http://127.0.0.1:3000/ </a>oder <a href=\"http://localhost:3000/\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:3000/</a>. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. “Hello World”.\r\n<h2>Den Webserver stoppen</h2>\r\nDen gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL http://127.0.0.1:3000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.','Einen Webserver einrichten (2): Express.js für eine statische Website installieren','','inherit','closed','closed','','183-revision-v1','','','2019-07-22 20:42:09','2019-07-22 18:42:09','',183,'https://rike.dev/2019/07/22/183-revision-v1/',0,'revision','',0),(228,1,'2019-07-22 20:43:46','2019-07-22 18:43:46','<!-- wp:paragraph -->\r\n<p>In diesem Tutorial geht es darum, Node.js und npm als Vorbereitung für das Setup eines eigenen kleinen Webservers zu installieren. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" (2019) entstanden.</p>\r\n<p><!--more--></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Was ist Node.js?</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><em>Node.js</em> ist eine Softwareumgebung für Javascript, welche es ermöglicht, serverseitige Javascript-Anwendungen (-&gt; Webserver) auf einem beliebigen Betriebssystem zu programmieren. Sie erweitert \"klassisches\" Javascript um die notwendigen Funktionen und ist dabei extrem ressourcenschonend. Wofür brauchen wir <strong>npm</strong>? Mit dem Node Package Manager können wir die Kernfunktionalität von <em>Node.js</em> über Zusatzpakete erweitern. Entwickler aus der ganzen Welt stellen ihre Pakete dort kostenlos zur Verfügung.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Node.js installieren</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>Windows 7/8/10</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Für Windows stellt die offizielle <em>Node.js</em>-Website für die jeweiligen Versionen zur Verfügung: <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener noreferrer\">https://nodejs.org/en/download/</a>. Lade die richtige Datei (.msi) herunter und starte den Installer mit einem Doppelklick. Der Wizard wird dich durch den sehr kurzen Installationsprozess begleiten. Wähle während der Installation die Standardeinstellungen. <em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>MacOS</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Über die offizielle <em>Node.js</em>-Website kannst du den Installer (.pkg) für Node.js herunterladen: <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener noreferrer\">https://nodejs.org/en/download/</a>. Starte den Installer über deinen Mac und befolge die (kurzen) Installationsanweisungen. Wähle während der Installation die Standardeinstellungen. <em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>Linux/Ubuntu</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>In Ubuntu kann <em>Node.js</em> über die Paketverwaltung installiert werden. Da <em>npm</em> nicht automatisch mitinstalliert wird, holen wir dies manuell nach.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">sudo apt-get update\r\nsudo apt-get install nodejs\r\nsudo apt-get install npm</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Mit dem Terminal arbeiten / Die Installation von Node.js und npm prüfen</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Mit dem Terminal können wir unser Betriebssystem textbasiert steuern. Häufigster Vorbehalt gegen das Terminal ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:\r\n<ul>\r\n<li>In <strong>Windows 8 und 10</strong> geht das mit einem Klick mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination [Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li>\r\n<li>In <strong>Windows 7</strong> klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li>\r\n<li>In vielen <strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li>\r\n<li>Auf <strong>MacOS</strong> führt die Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<ul>\r\n<li>Nun prüfen wir, ob auf unserem Betriebssystem <em>Node.js</em> und <em>npm</em> korrekt installiert wurden. Das geht mit den Terminal-Befehlen</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version <em>Node.js </em>und<em> npm </em>installiert sind. Falls eine Fehlermeldung erscheint, solltest du den Installationsvorgang wiederholen.</li>\r\n</ul>\r\n<!-- /wp:list -->','Einen Webserver einrichten (1): Node.js und npm installieren','','inherit','closed','closed','','179-revision-v1','','','2019-07-22 20:43:46','2019-07-22 18:43:46','',179,'https://rike.dev/2019/07/22/179-revision-v1/',0,'revision','',0),(229,1,'2019-07-22 21:04:57','2019-07-22 19:04:57','In diesem Tutorial geht es darum, einen einfachen Webserver auf Express.js-Basis zu installieren und zu testen. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\" target=\"_blank\" rel=\"noopener noreferrer\">SummerSchool “Informatica Feminale”</a> für den Kurs “Einführung in die modere Webentwicklung” (2019) entstanden.\n\n<!--more-->\n\nFür eine Anleitung zur Installation von Node.js und npm in Vorbereitung auf das Setup des Express.js-Servers, gibt es <a href=\"https://rike.dev/2019/06/18/node-js-und-npm-installieren/\" target=\"_blank\" rel=\"noopener noreferrer\">hier</a> das entsprechende Tutorial.\n<h2>Den Webserver einrichten / Express.js installieren</h2>\n<ul>\n 	<li>Lege auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest (z. B. \"Neues-Projekt1\"). Den Ort kannst du beliebig festlegen.</li>\n 	<li>Innerhalb dieses Ordners lege eine neue Datei an (in Windows z. B. per Rechtsklick: “Neues Textdokument”) mit dem Namen “server.js”.</li>\n 	<li>Innerhalb des gleichen Ordners lege einen neuen Unterordner an mit dem Namen \"public\". Darin erzeugst du eine neue Datei “index.html”.</li>\n 	<li>(<em>In Windows solltest du sicher gehen, dass sich die Dateiendung mitändert, und nicht etwa eine Datei nach dem Schema “server.js.txt” und “index.html.txt” entstanden ist!</em>)</li>\n 	<li>Navigiere im Terminal zum neu angelegten Ordner (z. B. \"Neues-Projekt1\"). Der Befehl dazu lautet “cd” gefolgt vom entsprechenden Pfad. <em>Den Dateipfad kannst du in Windows mit einem Rechtsklick auf den Ordner unter \"Eigenschaften\" herausfinden.</em> Für ein Windows-System könnte der Befehl so lauten:\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Neues-Projekt1</pre>\nFür ein macOS-System wäre dies ein Beispiel-Befehl:\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Neues-Projekt1</pre>\nWenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</li>\n 	<li>Installiere in diesem Ordner das <em>npm</em>-Paket “Express.js”, den de-Facto-Standard für Webanwendungen unter Node.js mit dem Terminal-Befehl</li>\n</ul>\n<pre class=\"wp-block-preformatted\">npm install express</pre>\n<ul>\n 	<li>Während des Installationsprozesses könnten gelb markierte \"Warnings\" erscheinen; diese kannst du ignorieren.</li>\n 	<li>Öffne die Datei “server.js” in einem Texteditor (z. B. “Sublime”), füge diesen Quellcode ein und speichere die Datei:</li>\n</ul>\n<pre class=\"wp-block-preformatted\">const express = require(\"express\");\nconst app = express();\n\napp.use(express.static(\'public\'));\n\napp.listen(3000);\nconsole.log(\"Server started on port 3000\");</pre>\n<ul>\n 	<li>Öffne die Datei “index.html” im Unterordner \"public\" im Editor, füge einen beliebigen Text ein, z. B. “Hello World!” und speichere die Datei.</li>\n 	<li>Jetzt müssen wir unseren Webserver nur noch starten. Im Quellcode haben wir ihn bereits angewiesen, die Datei <em>index.html </em>auszugeben.</li>\n</ul>\n<h2>Den Webserver starten</h2>\nPrüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad (im Beispiel \"..\\Neues-Projekt1\") befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:\n<pre class=\"wp-block-preformatted\">node server.js</pre>\nNavigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:3000/\" target=\"_blank\" rel=\"noopener noreferrer\">http://127.0.0.1:3000/ </a>oder <a href=\"http://localhost:3000/\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:3000/</a>. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. “Hello World”.\n<h2>Den Webserver stoppen</h2>\nDen gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL http://127.0.0.1:3000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.','Einen Webserver einrichten (2): Express.js für eine statische Website installieren','','inherit','closed','closed','','183-autosave-v1','','','2019-07-22 21:04:57','2019-07-22 19:04:57','',183,'https://rike.dev/2019/07/22/183-autosave-v1/',0,'revision','',0),(230,1,'2019-07-22 20:59:42','2019-07-22 18:59:42','In diesem Tutorial geht es darum, einen einfachen Webserver auf Express.js-Basis zu installieren und zu testen. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\" target=\"_blank\" rel=\"noopener noreferrer\">SummerSchool “Informatica Feminale”</a> für den Kurs “Einführung in die modere Webentwicklung” (2019) entstanden.\r\n\r\n<!--more-->\r\n\r\nFür eine Anleitung zur Installation von Node.js und npm in Vorbereitung auf das Setup des Express.js-Servers, gibt es <a href=\"https://rike.dev/2019/06/18/node-js-und-npm-installieren/\" target=\"_blank\" rel=\"noopener noreferrer\">hier</a> das entsprechende Tutorial.\r\n<h2>Den Webserver einrichten / Express.js installieren</h2>\r\n<ul>\r\n 	<li>Lege auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest (z. B. \"Neues-Projekt1\"). Den Ort kannst du beliebig festlegen.</li>\r\n 	<li>Innerhalb dieses Ordners lege eine neue Datei an (in Windows z. B. per Rechtsklick: “Neues Textdokument”) mit dem Namen “server.js”.</li>\r\n 	<li>Innerhalb des gleichen Ordners lege einen neuen Unterordner an mit dem Namen \"public\". Darin erzeugst du eine neue Datei “index.html”.</li>\r\n 	<li>(In Windows solltest du sicher gehen, dass sich die Dateiendung mitändert, und nicht etwa eine Datei nach dem Schema “server.js.txt” und “index.html.txt” entstanden ist!)</li>\r\n 	<li>Navigiere im Terminal zum neu angelegten Ordner (z. B. \"Neues-Projekt1\"). Der Befehl dazu lautet “cd” gefolgt vom entsprechenden Pfad. <em>Den Dateipfad kannst du in Windows mit einem Rechtsklick auf den Ordner unter \"Eigenschaften\" herausfinden.</em> Für ein Windows-System könnte der Befehl so lauten:\r\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Neues-Projekt1</pre>\r\nFür ein macOS-System wäre dies ein Beispiel-Befehl:\r\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Neues-Projekt1</pre>\r\nWenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</li>\r\n 	<li>Installiere in diesem Ordner das <em>npm</em>-Paket “Express.js”, den de-Facto-Standard für Webanwendungen unter Node.js mit dem Terminal-Befehl</li>\r\n</ul>\r\n<pre class=\"wp-block-preformatted\">npm install express</pre>\r\n<ul>\r\n 	<li>Während des Installationsprozesses könnten gelb markierte \"Warnings\" erscheinen; diese kannst du ignorieren.</li>\r\n 	<li>Öffne die Datei “server.js” in einem Texteditor (z. B. “Sublime”), füge diesen Quellcode ein und speichere die Datei:</li>\r\n</ul>\r\n<pre class=\"wp-block-preformatted\">const express = require(\"express\");\r\nconst app = express();\r\n\r\napp.use(express.static(\'public\'));\r\n\r\napp.listen(3000);\r\nconsole.log(\"Server started on port 3000\");</pre>\r\n<ul>\r\n 	<li>Öffne die Datei “index.html” im Unterordner \"public\", füge einen beliebigen Text ein, z. B. “Hello World!” und speichere die Datei.</li>\r\n 	<li>Jetzt müssen wir unseren Webserver nur noch starten. Im Quellcode haben wir ihn bereits angewiesen, die Datei <em>index.html </em>auszugeben.</li>\r\n</ul>\r\n<h2>Den Webserver starten</h2>\r\nPrüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad (im Beispiel \"..\\Neues-Projekt1\") befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:\r\n<pre class=\"wp-block-preformatted\">node server.js</pre>\r\nNavigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:3000/\" target=\"_blank\" rel=\"noopener noreferrer\">http://127.0.0.1:3000/ </a>oder <a href=\"http://localhost:3000/\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:3000/</a>. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. “Hello World”.\r\n<h2>Den Webserver stoppen</h2>\r\nDen gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL http://127.0.0.1:3000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.','Einen Webserver einrichten (2): Express.js für eine statische Website installieren','','inherit','closed','closed','','183-revision-v1','','','2019-07-22 20:59:42','2019-07-22 18:59:42','',183,'https://rike.dev/2019/07/22/183-revision-v1/',0,'revision','',0),(231,1,'2019-07-22 21:01:55','2019-07-22 19:01:55','In diesem Tutorial geht es darum, einen einfachen Webserver auf Express.js-Basis zu installieren und zu testen. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\" target=\"_blank\" rel=\"noopener noreferrer\">SummerSchool “Informatica Feminale”</a> für den Kurs “Einführung in die modere Webentwicklung” (2019) entstanden.\r\n\r\n<!--more-->\r\n\r\nFür eine Anleitung zur Installation von Node.js und npm in Vorbereitung auf das Setup des Express.js-Servers, gibt es <a href=\"https://rike.dev/2019/06/18/node-js-und-npm-installieren/\" target=\"_blank\" rel=\"noopener noreferrer\">hier</a> das entsprechende Tutorial.\r\n<h2>Den Webserver einrichten / Express.js installieren</h2>\r\n<ul>\r\n 	<li>Lege auf deinem Computer einen Ordner an, in dem du während des Kurses arbeiten möchtest (z. B. \"Neues-Projekt1\"). Den Ort kannst du beliebig festlegen.</li>\r\n 	<li>Innerhalb dieses Ordners lege eine neue Datei an (in Windows z. B. per Rechtsklick: “Neues Textdokument”) mit dem Namen “server.js”.</li>\r\n 	<li>Innerhalb des gleichen Ordners lege einen neuen Unterordner an mit dem Namen \"public\". Darin erzeugst du eine neue Datei “index.html”.</li>\r\n 	<li>(In Windows solltest du sicher gehen, dass sich die Dateiendung mitändert, und nicht etwa eine Datei nach dem Schema “server.js.txt” und “index.html.txt” entstanden ist!)</li>\r\n 	<li>Navigiere im Terminal zum neu angelegten Ordner (z. B. \"Neues-Projekt1\"). Der Befehl dazu lautet “cd” gefolgt vom entsprechenden Pfad. <em>Den Dateipfad kannst du in Windows mit einem Rechtsklick auf den Ordner unter \"Eigenschaften\" herausfinden.</em> Für ein Windows-System könnte der Befehl so lauten:\r\n<pre class=\"wp-block-preformatted\">cd C:\\Users\\Ulrike\\Projekte\\Neues-Projekt1</pre>\r\nFür ein macOS-System wäre dies ein Beispiel-Befehl:\r\n<pre class=\"wp-block-preformatted\">cd /Volumes/PROJECTS/Neues-Projekt1</pre>\r\nWenn du erfolgreich warst, wird der Pfad, in dem du dich nun befindest, der neuen Kommandozeile voran gestellt.</li>\r\n 	<li>Installiere in diesem Ordner das <em>npm</em>-Paket “Express.js”, den de-Facto-Standard für Webanwendungen unter Node.js mit dem Terminal-Befehl</li>\r\n</ul>\r\n<pre class=\"wp-block-preformatted\">npm install express</pre>\r\n<ul>\r\n 	<li>Während des Installationsprozesses könnten gelb markierte \"Warnings\" erscheinen; diese kannst du ignorieren.</li>\r\n 	<li>Öffne die Datei “server.js” in einem Texteditor (z. B. “Sublime”), füge diesen Quellcode ein und speichere die Datei:</li>\r\n</ul>\r\n<pre class=\"wp-block-preformatted\">const express = require(\"express\");\r\nconst app = express();\r\n\r\napp.use(express.static(\'public\'));\r\n\r\napp.listen(3000);\r\nconsole.log(\"Server started on port 3000\");</pre>\r\n<ul>\r\n 	<li>Öffne die Datei “index.html” im Unterordner \"public\" im Editor, füge einen beliebigen Text ein, z. B. “Hello World!” und speichere die Datei.</li>\r\n 	<li>Jetzt müssen wir unseren Webserver nur noch starten. Im Quellcode haben wir ihn bereits angewiesen, die Datei <em>index.html </em>auszugeben.</li>\r\n</ul>\r\n<h2>Den Webserver starten</h2>\r\nPrüfe noch einmal, ob du dich in deinem Terminal im richtigen Dateipfad (im Beispiel \"..\\Neues-Projekt1\") befindest. Wenn ja, gib ins Terminal den folgenden Befehl ein:\r\n<pre class=\"wp-block-preformatted\">node server.js</pre>\r\nNavigiere in deinem Browser zur URL <a href=\"http://127.0.0.1:3000/\" target=\"_blank\" rel=\"noopener noreferrer\">http://127.0.0.1:3000/ </a>oder <a href=\"http://localhost:3000/\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:3000/</a>. Wenn alles geklappt hat, wird dort nun der Inhalt des von dir angelegten HTML-Dokuments angezeigt, also z. B. “Hello World”.\r\n<h2>Den Webserver stoppen</h2>\r\nDen gestarteten Webserver kannst du jederzeit wieder stoppen. Dann ist er nicht mehr unter der URL http://127.0.0.1:3000/ erreichbar. Im Terminal musst du dazu lediglich [Strg] + [C] bzw. [Ctrl] + [C] drücken.','Einen Webserver einrichten (2): Express.js für eine statische Website installieren','','inherit','closed','closed','','183-revision-v1','','','2019-07-22 21:01:55','2019-07-22 19:01:55','',183,'https://rike.dev/2019/07/22/183-revision-v1/',0,'revision','',0),(234,1,'2019-08-13 16:50:09','2019-08-13 14:50:09','<!-- wp:paragraph -->\r\n<p>In diesem Tutorial geht es darum, Node.js und npm als Vorbereitung für das Setup eines eigenen kleinen Webservers zu installieren. Dieses Tutorial ist im Rahmen der Bremer <a href=\"https://www.informatica-feminale.de/\">SummerSchool \"Informatica Feminale\"</a> für den Kurs \"Einführung in die modere Webentwicklung\" (2019) entstanden.</p>\r\n<p><!--more--></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Was ist Node.js?</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><em>Node.js</em> ist eine Softwareumgebung für Javascript, welche es ermöglicht, serverseitige Javascript-Anwendungen (-&gt; Webserver) auf einem beliebigen Betriebssystem zu programmieren. Sie erweitert \"klassisches\" Javascript um die notwendigen Funktionen und ist dabei extrem ressourcenschonend. Wofür brauchen wir <strong>npm</strong>? Mit dem Node Package Manager können wir die Kernfunktionalität von <em>Node.js</em> über Zusatzpakete erweitern. Entwickler aus der ganzen Welt stellen ihre Pakete dort kostenlos zur Verfügung.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Node.js installieren</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>Windows 7/8/10</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Für Windows stellt die offizielle <em>Node.js</em>-Website für die jeweiligen Versionen zur Verfügung: <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener noreferrer\">https://nodejs.org/en/download/</a>. Lade die richtige Datei (.msi) herunter und starte den Installer mit einem Doppelklick. Der Wizard wird dich durch den sehr kurzen Installationsprozess begleiten. Wähle während der Installation die Standardeinstellungen. <em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>MacOS</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Über die offizielle <em>Node.js</em>-Website kannst du den Installer (.pkg) für Node.js herunterladen: <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener noreferrer\">https://nodejs.org/en/download/</a>. Starte den Installer über deinen Mac und befolge die (kurzen) Installationsanweisungen. Wähle während der Installation die Standardeinstellungen. <em>npm</em> wird hier glücklicherweise gleich mitinstalliert.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:heading {\"level\":5} -->\r\n<h5>Linux/Ubuntu</h5>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>In Ubuntu kann <em>Node.js</em> über die Paketverwaltung installiert werden. Da <em>npm</em> nicht automatisch mitinstalliert wird, holen wir dies manuell nach.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">sudo apt-get update\r\nsudo apt-get install nodejs\r\nsudo apt-get install npm</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:heading -->\r\n<h2>Mit dem Terminal arbeiten / Die Installation von Node.js und npm prüfen</h2>\r\n<!-- /wp:heading -->\r\n\r\n<!-- wp:paragraph -->\r\n<p>Mit dem Terminal können wir unser Betriebssystem textbasiert steuern. Häufigster Vorbehalt gegen das Terminal ist, dass es komplex und damit schwierig zu erlernen sei. Für einige Aufgaben ist er jedoch sehr gut geeignet, weswegen wir für dieses Tutorial / den Kurs ein wenig damit arbeiten werden.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Öffne das Terminal (= Kommandozeile oder CLI oder Konsole) deines Betriebssystems:\r\n<ul>\r\n<li>In <strong>Windows 8 und 10</strong> geht das mit einem Klick mit der rechten Maustaste unten links im Bildschirm auf das Windows-Symbol oder mit der Tastenkombination [Windows] und [X]. Danach muss die \"Eingabeaufforderung\" oder die \"Eingabeaufforderung (Administrator)\" aus der Liste ausgewählt werden.</li>\r\n<li>In <strong>Windows 7</strong> klickst du auf das Windows-Symbol links unten und suchst unter \"Dateien/Programme durchsuchen\" nach \"Eingabeaufforderung\".</li>\r\n<li>In vielen <strong>Linux</strong>-Distributionen öffnet sich das Terminal durch die Tastenkombination [Strg] + [Alt] + [T].</li>\r\n<li>Auf <strong>MacOS</strong> führt die Tastenkombination [cmd] + [Leertaste] zur Spotlight-Suche. Dort kann nach \"Terminal\" gesucht und dieser ausgeführt werden.</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<ul>\r\n<li>Nun prüfen wir, ob auf unserem Betriebssystem <em>Node.js</em> und <em>npm</em> korrekt installiert wurden. Das geht mit den Terminal-Befehlen</li>\r\n</ul>\r\n<!-- /wp:list -->\r\n\r\n<!-- wp:preformatted -->\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Im besten Fall informiert dich dein Betriebssystem nun darüber, ob und in welcher Version <em>Node.js </em>und<em> npm </em>installiert sind. Falls eine Fehlermeldung erscheint, solltest du den Installationsvorgang wiederholen.</li>\r\n</ul>\r\n<!-- /wp:list -->','Einen Webserver einrichten (1): Node.js und npm installieren!','','inherit','closed','closed','','179-revision-v1','','','2019-08-13 16:50:09','2019-08-13 14:50:09','',179,'https://rike.dev/2019/08/13/179-revision-v1/',0,'revision','',0),(241,1,'2019-11-18 21:24:24','2019-11-18 20:24:24','<p>Building a Twitter bot with Node.js is easy these days (if you have at least some web development &amp; JavaScript knowledge). Get ready with me and set up your own one in just a few minutes.</p>\r\n<p><!--more--></p>\r\n<p>At first you will need to <a href=\"https://twitter.com/signup\">register</a> a (new) Twitter account specifiying the screen name, through which you\'d like to tweet into the world. After that you are ready to apply for a developer\'s account and add a new Twitter developer\'s app <a href=\"https://developer.twitter.com/en/apps\">here</a>. This is necessary for generating keys and tokens for accessing the official <a href=\"https://developer.twitter.com/en/docs/basics/things-every-developer-should-know\" rel=\"nofollow\">Twitter API</a>. Twitter asks for several information about what you want to do with your app. Writing down what the bot is all about went just fine for me. Finally it\'s time for coding. Make sure <em>node</em> and <em>npm</em> are installed on your computer with the following commands.</p>\r\n<pre class=\"wp-block-preformatted\">node -v\r\nnpm -v</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>After that, we are ready to setup a working folder and init a npm project with:</p>\r\n<pre class=\"wp-block-preformatted\">npm init</pre>\r\n<!-- /wp:preformatted -->\r\n\r\n<!-- wp:list -->\r\n<p>The only library that is mandatory for our project is the npm package <em>twitter-lite</em>, a tiny, full-featured, modern client / server library for the Twitter API, whose documentation you will find <a href=\"https://github.com/draftbit/twitter-lite\">here</a>. It was built because existing ones <a href=\"https://github.com/desmondmorris/node-twitter\">have not been recently maintained</a>, or depend on <a href=\"https://github.com/ttezel/twit/issues/411\">outdated</a> <a href=\"https://github.com/ttezel/twit/issues/412\">libraries</a>. Within our working folder we create a Node.js script, which could be named \"bot.js\". </p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const Twitter = require(\"twitter-lite\");\r\n\r\nconst client = new Twitter({\r\n  consumer_key: \'xyz\',\r\n  consumer_secret: \'xyz\',\r\n  access_token_key: \'xyz\',\r\n  access_token_secret: \'xyz\'\r\n});</pre>\r\n<p>This creates a new authorized Twitter API client. All keys and secrets are available in your Twitter developer\'s account. </p>\r\n<p>What should the bot do exactly? Well, for example, we could filter all incoming new tweets around the world with the help of keywords or hashtags by opening up the Twitter Stream and providing some parameters, like so:</p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\"> \r\nconst parameters = {\r\n  language: \"en\",\r\n  track:\r\n    \"#girlswhocode,#girlsintech,#womenintech,#womenwhocode,#momsintech,#momswhocode\"\r\n};\r\n\r\nclient\r\n  .stream(\"statuses/filter\", parameters)\r\n  .on(\"start\", response =&gt; console.log(\"start\"))\r\n  .on(\"data\", async data =&gt; {\r\n    console.log(\"got data\", data.id_str);\r\n  })\r\n  .on(\"error\", error =&gt; console.log(\"error\", error))\r\n  .on(\"end\", response =&gt; console.log(\"end\")); </pre>\r\n<p>Instead of just logging filtered tweets we could now automatically retweet those tweets by adding:</p>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const url = `statuses/retweet/${data.id_str}`;\r\nawait client.post(url);</pre>\r\n<p>That\'s it! Just start your script with</p>\r\n<pre class=\"wp-block-preformatted\">node bot.js</pre>\r\n<p><!-- /wp:preformatted -->\r\n\r\n<!-- wp:list --></p>\r\n<p>and your bot starts firing. There are many more possibilities on how the Twitter API can be used. You would like to deploy this app? Sure, you could <a href=\"https://devcenter.heroku.com/articles/getting-started-with-nodejs\">deploy on Heroku </a>or use a hoster like <a href=\"https://www.digitalocean.com/\">DigitalOcean</a> that could run your app in the background with <em>pm2</em>. Beware: Your secrets and keys should be stored in environment variables! A great library to do so is <a href=\"https://www.npmjs.com/package/dotenv\">dot-env</a>.</p>\r\n<p>Have fun!</p>\r\n<p>&nbsp;</p>','How to: Build a Twitter bot with Node.js - fast!','','inherit','closed','closed','','197-revision-v1','','','2019-11-18 21:24:24','2019-11-18 20:24:24','',197,'https://rike.dev/2019/11/18/197-revision-v1/',0,'revision','',0),(244,1,'2020-03-14 10:02:31','2020-03-14 09:02:31','<!-- wp:paragraph -->\r\n<p>Die digitalisierende Bankbranche sehnt ihn förmlich herbei: Den Durchbruch des Mobile Banking auch in Deutschland. Mobile Banking als zusätzlicher Distributionskanal wird für traditionelle Geldinstitute überlebenswichtig, um neue Kunden zu gewinnen und bestehende Kundenbeziehungen zu erhalten. Doch die Realität scheint momentan noch eine andere: Im internationalen Vergleich vertrauen nur wenige Deutsche ihre Bankgeschäfte ihrem Handy an. Unter den älteren Bevölkerungsgruppen zeigt sich eine besonders hohe Skepsis dieser Technologie gegenüber. Um dem Phänomen des Mobile Bankings auf die Spur zu kommen, beginnt das Paper mit einer kurzen Einführung in Begrifflichkeiten zum Thema und die Einbeziehung medienpsychologischer Aspekte zur Akzeptanz innovativer Technologien. Schließlich werden einige internationale Studienergebnisse zusammengefasst, die sich mit dem Einflussfaktor Alter als Einflussfaktor auf die Akzeptanz von Mobile Banking befasst haben.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><em>Exner, Ulrike: Banking via Handy - Akzeptanz altersgruppenspezifisch?,</em> 2015. <a href=\"http://rike.dev/wp-content/uploads/2018/01/mobile_banking.pdf\">Download</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:image {\"linkDestination\":\"custom\"} -->\r\n<figure class=\"wp-block-image\"><a href=\"http://creativecommons.org/licenses/by-sa/4.0/\"><img src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\" alt=\"Creative Commons Lizenzvertrag\" /></a></figure>\r\n<!-- /wp:image -->','Banking via Handy - Akzeptanz altersgruppenspezifisch?','','inherit','closed','closed','','5-revision-v1','','','2020-03-14 10:02:31','2020-03-14 09:02:31','',5,'https://rike.dev/2020/03/14/5-revision-v1/',0,'revision','',0),(245,1,'2020-03-14 10:04:15','2020-03-14 09:04:15','<!-- wp:paragraph -->\r\n<p>Die Sehnsucht nach verlässlichen intelligenten Agenten mit scheinbar eigener Persönlichkeit scheint groß zu sein. Wir lassen uns heute durch Apples \"Siri\" oder Microsofts \"Cortana\" den Weg zeigen oder einen Restauranttisch buchen. Doch die Evolution von intelligenten Agenten ist eine Geschichte mit Höhen und Tiefen. Ein berühmter Vertreter einer einfachen Form von interface agents ist Microsofts \"Clippy the Paperclip\" - eine tragische Figur auf dem Experimentierfeld der Künstlichen Intelligenz, der schon vor Beginn ihres Untergangs mit Häme und Spott begegnet wurde. Neue Entwicklungen versprechen innnovative agents, die sich das Internet zu Nutze machen. Das Paper beinhaltet die jeweiligen Entwicklungslinien.</p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:paragraph -->\r\n<p><em>Exner, Ulrike: \"Die, Clippy, die!!\" Zur Evolution von User Interface Agents und aktuelle Entwicklungen bei Intelligent Personal Assistants, 2016. </em><a href=\"http://rike.dev/wp-content/uploads/2018/01/die_clippy.pdf\">Download</a></p>\r\n<!-- /wp:paragraph -->\r\n\r\n<!-- wp:image {\"linkDestination\":\"custom\"} -->\r\n<figure class=\"wp-block-image\"><a href=\"http://creativecommons.org/licenses/by-sa/4.0/\"><img src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\" alt=\"Creative Commons Lizenzvertrag\" /></a></figure>\r\n<!-- /wp:image -->','\"Die, Clippy, die!!\". Die Evolution von User Interface Agents und aktuelle Entwicklungen bei Intelligent Personal Assistants','','inherit','closed','closed','','7-revision-v1','','','2020-03-14 10:04:15','2020-03-14 09:04:15','',7,'https://rike.dev/2020/03/14/7-revision-v1/',0,'revision','',0),(247,1,'2020-03-30 20:15:48','0000-00-00 00:00:00','','Home','','auto-draft','closed','closed','','','','','2020-03-30 20:15:48','0000-00-00 00:00:00','',0,'https://rike.dev/?page_id=247',0,'page','',0),(248,1,'2020-03-30 20:27:45','0000-00-00 00:00:00','<strong>Hi, my name is Rike</strong>\r\nand I am a web developer from <em>❤</em> Berlin.\r\n\r\n<sup><strong>website:</strong> <a href=\"https://ueberdiespree.de/\">ueberdiespree.de </a></sup><sup><strong>e-mail:</strong> hello@rike.dev </sup><sup><strong>twitter:</strong> @frankanka </sup><sup>github: <a href=\"https://github.com/gitfrosh\">gitfrosh </a></sup><sup>instagram: <a href=\"https://www.instagram.com/ueberdiespree/\">ueberdiespree</a></sup>','','','draft','closed','closed','','','','','2020-03-30 20:27:45','2020-03-30 18:27:45','',0,'https://rike.dev/?page_id=248',0,'page','',0),(249,1,'2020-03-30 20:18:55','2020-03-30 18:18:55','<blockquote>\r\n<h2>Hi, my name is Ulrike Exner.</h2>\r\n<p class=\"mypar\">I am a web developer from <em>❤</em> Berlin.</p>\r\n</blockquote>','Home','','inherit','closed','closed','','248-revision-v1','','','2020-03-30 20:18:55','2020-03-30 18:18:55','',248,'https://rike.dev/2020/03/30/248-revision-v1/',0,'revision','',0),(250,1,'2020-03-30 20:19:22','2020-03-30 18:19:22','<p class=\"mypar\">I am a web developer from <em>❤</em> Berlin.</p>','Hi, my name is Ulrike Exner.','','inherit','closed','closed','','248-revision-v1','','','2020-03-30 20:19:22','2020-03-30 18:19:22','',248,'https://rike.dev/2020/03/30/248-revision-v1/',0,'revision','',0),(251,1,'2020-03-30 20:19:55','2020-03-30 18:19:55','<p class=\"mypar\">I am a web developer from <em>❤</em> Berlin.</p>','Hi, I\'m Rike and I am a web developer from  Berlin.','','inherit','closed','closed','','248-revision-v1','','','2020-03-30 20:19:55','2020-03-30 18:19:55','',248,'https://rike.dev/2020/03/30/248-revision-v1/',0,'revision','',0),(252,1,'2020-03-30 20:20:25','2020-03-30 18:20:25','<p class=\"mypar\">I am a web developer from <em>❤</em> Berlin.</p>','','','inherit','closed','closed','','248-revision-v1','','','2020-03-30 20:20:25','2020-03-30 18:20:25','',248,'https://rike.dev/2020/03/30/248-revision-v1/',0,'revision','',0),(253,1,'2020-03-30 20:20:36','2020-03-30 18:20:36','<blockquote>\r\n<h2>Hi, my name is Ulrike Exner.</h2>\r\n<p class=\"mypar\">I am a web developer from <em>❤</em> Berlin.</p>\r\n</blockquote>','','','inherit','closed','closed','','248-revision-v1','','','2020-03-30 20:20:36','2020-03-30 18:20:36','',248,'https://rike.dev/2020/03/30/248-revision-v1/',0,'revision','',0),(254,1,'2020-03-30 20:20:47','2020-03-30 18:20:47','<h2>Hi, my name is Ulrike Exner.</h2>\r\n<p class=\"mypar\">I am a web developer from <em>❤</em> Berlin.</p>','','','inherit','closed','closed','','248-revision-v1','','','2020-03-30 20:20:47','2020-03-30 18:20:47','',248,'https://rike.dev/2020/03/30/248-revision-v1/',0,'revision','',0),(255,1,'2020-03-30 20:21:21','2020-03-30 18:21:21','<strong>Hi, my name is Ulrike Exner.\r\n</strong>I am a web developer from <em>❤</em> Berlin.','','','inherit','closed','closed','','248-revision-v1','','','2020-03-30 20:21:21','2020-03-30 18:21:21','',248,'https://rike.dev/2020/03/30/248-revision-v1/',0,'revision','',0),(256,1,'2020-03-30 20:22:08','2020-03-30 18:22:08','<strong>Hi, my name is Ulrike Exner.\r\n</strong>I am a web developer from <em>❤</em> Berlin.\r\n<pre>website:</pre>\r\n<a href=\"https://ueberdiespree.de/\">ueberdiespree.de</a>\r\n<pre>\r\ne-mail: hello@rike.dev\r\ntwitter: @frankanka\r\ngithub:</pre>\r\n<a href=\"https://github.com/gitfrosh\">gitfrosh</a>\r\n<pre>\r\ninstagram:</pre>\r\n<a href=\"https://www.instagram.com/ueberdiespree/\">ueberdiespree</a>','','','inherit','closed','closed','','248-revision-v1','','','2020-03-30 20:22:08','2020-03-30 18:22:08','',248,'https://rike.dev/2020/03/30/248-revision-v1/',0,'revision','',0),(257,1,'2020-03-30 20:22:19','2020-03-30 18:22:19','<strong>Hi, my name is Ulrike Exner.\r\n</strong>I am a web developer from <em>❤</em> Berlin.\r\n<h6>website: <a href=\"https://ueberdiespree.de/\">ueberdiespree.de</a>\r\ne-mail: hello@rike.dev\r\ntwitter: @frankanka\r\ngithub: <a href=\"https://github.com/gitfrosh\">gitfrosh</a>\r\ninstagram: <a href=\"https://www.instagram.com/ueberdiespree/\">ueberdiespree</a></h6>','','','inherit','closed','closed','','248-revision-v1','','','2020-03-30 20:22:19','2020-03-30 18:22:19','',248,'https://rike.dev/2020/03/30/248-revision-v1/',0,'revision','',0),(258,1,'2020-03-30 20:22:50','2020-03-30 18:22:50','<strong>Hi, my name is Ulrike Exner.\r\n</strong>I am a web developer from <em>❤</em> Berlin.\r\n\r\n<sup>website: <a href=\"https://ueberdiespree.de/\">ueberdiespree.de</a></sup>\r\n<sup>e-mail: hello@rike.dev</sup>\r\n<sup>twitter: @frankanka</sup>\r\n<sup>github: <a href=\"https://github.com/gitfrosh\">gitfrosh</a></sup>\r\n<sup>instagram: <a href=\"https://www.instagram.com/ueberdiespree/\">ueberdiespree</a></sup>','','','inherit','closed','closed','','248-revision-v1','','','2020-03-30 20:22:50','2020-03-30 18:22:50','',248,'https://rike.dev/2020/03/30/248-revision-v1/',0,'revision','',0),(259,1,'2020-03-30 20:23:20','2020-03-30 18:23:20','<strong>Hi, my name is Ulrike (or just Rike)</strong> and I am a web developer from <em>❤</em> Berlin.\r\n\r\n<sup>website: <a href=\"https://ueberdiespree.de/\">ueberdiespree.de</a></sup>\r\n<sup>e-mail: hello@rike.dev</sup>\r\n<sup>twitter: @frankanka</sup>\r\n<sup>github: <a href=\"https://github.com/gitfrosh\">gitfrosh</a></sup>\r\n<sup>instagram: <a href=\"https://www.instagram.com/ueberdiespree/\">ueberdiespree</a></sup>','','','inherit','closed','closed','','248-revision-v1','','','2020-03-30 20:23:20','2020-03-30 18:23:20','',248,'https://rike.dev/2020/03/30/248-revision-v1/',0,'revision','',0),(260,1,'2020-03-30 20:23:40','2020-03-30 18:23:40','<strong>Hi, my name is Ulrike (or just Rike)</strong>\r\nand I am a web developer from <em>❤</em> Berlin.\r\n<blockquote><sup>website: <a href=\"https://ueberdiespree.de/\">ueberdiespree.de</a></sup>\r\n<sup>e-mail: hello@rike.dev</sup>\r\n<sup>twitter: @frankanka</sup>\r\n<sup>github: <a href=\"https://github.com/gitfrosh\">gitfrosh</a></sup>\r\n<sup>instagram: <a href=\"https://www.instagram.com/ueberdiespree/\">ueberdiespree</a></sup></blockquote>','','','inherit','closed','closed','','248-revision-v1','','','2020-03-30 20:23:40','2020-03-30 18:23:40','',248,'https://rike.dev/2020/03/30/248-revision-v1/',0,'revision','',0),(261,1,'2020-03-30 20:24:28','2020-03-30 18:24:28','<strong>Hi, my name is Ulrike (or just Rike)</strong>\r\nand I am a web developer from <em>❤</em> Berlin.\r\n\r\n<sup><strong>website:</strong> <a href=\"https://ueberdiespree.de/\">ueberdiespree.de </a></sup><sup><strong>e-mail:</strong> hello@rike.dev </sup><sup><strong>twitter:</strong> @frankanka </sup><sup>github: <a href=\"https://github.com/gitfrosh\">gitfrosh </a></sup><sup>instagram: <a href=\"https://www.instagram.com/ueberdiespree/\">ueberdiespree</a></sup>','','','inherit','closed','closed','','248-revision-v1','','','2020-03-30 20:24:28','2020-03-30 18:24:28','',248,'https://rike.dev/2020/03/30/248-revision-v1/',0,'revision','',0),(262,1,'2020-03-30 20:26:45','0000-00-00 00:00:00','{\n    \"sidebars_widgets[header-sidebar]\": {\n        \"value\": [],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2020-03-30 18:26:45\"\n    }\n}','','','auto-draft','closed','closed','','673a7c57-5e84-416c-b150-6986f7fb1ec5','','','2020-03-30 20:26:45','0000-00-00 00:00:00','',0,'https://rike.dev/?p=262',0,'customize_changeset','',0),(263,1,'2020-03-30 20:27:05','2020-03-30 18:27:05','<strong>Hi, my name is Rike</strong>\r\nand I am a web developer from <em>❤</em> Berlin.\r\n\r\n<sup><strong>website:</strong> <a href=\"https://ueberdiespree.de/\">ueberdiespree.de </a></sup><sup><strong>e-mail:</strong> hello@rike.dev </sup><sup><strong>twitter:</strong> @frankanka </sup><sup>github: <a href=\"https://github.com/gitfrosh\">gitfrosh </a></sup><sup>instagram: <a href=\"https://www.instagram.com/ueberdiespree/\">ueberdiespree</a></sup>','','','inherit','closed','closed','','248-revision-v1','','','2020-03-30 20:27:05','2020-03-30 18:27:05','',248,'https://rike.dev/2020/03/30/248-revision-v1/',0,'revision','',0);
/*!40000 ALTER TABLE `wp_posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_relationships`
--

DROP TABLE IF EXISTS `wp_term_relationships`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_relationships` (
  `object_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_taxonomy_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`object_id`,`term_taxonomy_id`),
  KEY `term_taxonomy_id` (`term_taxonomy_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_relationships`
--

LOCK TABLES `wp_term_relationships` WRITE;
/*!40000 ALTER TABLE `wp_term_relationships` DISABLE KEYS */;
INSERT INTO `wp_term_relationships` VALUES (5,3,0),(5,6,0),(7,3,0),(7,6,0),(10,3,0),(10,6,0),(12,2,0),(12,6,0),(12,8,0),(20,2,0),(20,6,0),(20,8,0),(24,3,0),(24,6,0),(26,1,0),(26,6,0),(28,1,0),(30,2,0),(30,6,0),(30,8,0),(33,2,0),(33,5,0),(37,2,0),(37,5,0),(39,2,0),(39,5,0),(41,2,0),(41,5,0),(43,2,0),(43,5,0),(57,4,0),(59,4,0),(60,4,0),(116,2,0),(116,5,0),(179,2,0),(179,6,0),(179,8,0),(183,2,0),(183,6,0),(183,8,0),(197,2,0),(197,5,0),(212,5,0),(212,9,0);
/*!40000 ALTER TABLE `wp_term_relationships` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_taxonomy`
--

DROP TABLE IF EXISTS `wp_term_taxonomy`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_taxonomy` (
  `term_taxonomy_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `taxonomy` varchar(32) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `description` longtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_taxonomy_id`),
  UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),
  KEY `taxonomy` (`taxonomy`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_taxonomy`
--

LOCK TABLES `wp_term_taxonomy` WRITE;
/*!40000 ALTER TABLE `wp_term_taxonomy` DISABLE KEYS */;
INSERT INTO `wp_term_taxonomy` VALUES (1,1,'category','',0,1),(2,2,'category','',0,12),(3,3,'category','',0,4),(4,4,'nav_menu','',0,3),(5,5,'category','',0,8),(6,6,'category','',0,10),(7,7,'post_format','',0,0),(8,8,'post_tag','',0,5),(9,9,'category','',0,1);
/*!40000 ALTER TABLE `wp_term_taxonomy` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_termmeta`
--

DROP TABLE IF EXISTS `wp_termmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_termmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_520_ci,
  PRIMARY KEY (`meta_id`),
  KEY `term_id` (`term_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_termmeta`
--

LOCK TABLES `wp_termmeta` WRITE;
/*!40000 ALTER TABLE `wp_termmeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_termmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_terms`
--

DROP TABLE IF EXISTS `wp_terms`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_terms` (
  `term_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `slug` varchar(200) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_id`),
  KEY `slug` (`slug`(191)),
  KEY `name` (`name`(191))
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_terms`
--

LOCK TABLES `wp_terms` WRITE;
/*!40000 ALTER TABLE `wp_terms` DISABLE KEYS */;
INSERT INTO `wp_terms` VALUES (1,'Allgemein','allgemein',0),(2,'Tutorials','tutorials',0),(3,'Papers','papers',0),(4,'Menu 1','menu-1',0),(5,'English','english',0),(6,'German / Deutsch','german-deutsch',0),(7,'post-format-video','post-format-video',0),(8,'Informatica Feminale','informatica-feminale',0),(9,'Webdev','webdev',0);
/*!40000 ALTER TABLE `wp_terms` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_usermeta`
--

DROP TABLE IF EXISTS `wp_usermeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_usermeta` (
  `umeta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_520_ci,
  PRIMARY KEY (`umeta_id`),
  KEY `user_id` (`user_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_usermeta`
--

LOCK TABLES `wp_usermeta` WRITE;
/*!40000 ALTER TABLE `wp_usermeta` DISABLE KEYS */;
INSERT INTO `wp_usermeta` VALUES (1,1,'nickname','rike'),(2,1,'first_name',''),(3,1,'last_name',''),(4,1,'description',''),(5,1,'rich_editing','true'),(6,1,'syntax_highlighting','true'),(7,1,'comment_shortcuts','false'),(8,1,'admin_color','fresh'),(9,1,'use_ssl','0'),(10,1,'show_admin_bar_front','true'),(11,1,'locale',''),(12,1,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(13,1,'wp_user_level','10'),(14,1,'dismissed_wp_pointers','wp496_privacy,theme_editor_notice'),(15,1,'show_welcome_panel','1'),(17,1,'wp_dashboard_quick_press_last_post_id','246'),(18,1,'community-events-location','a:1:{s:2:\"ip\";s:11:\"78.55.112.0\";}'),(19,1,'wp_user-settings','libraryContent=browse&advImgDetails=show&editor=tinymce&hidetb=1'),(20,1,'wp_user-settings-time','1560892676'),(21,1,'managenav-menuscolumnshidden','a:5:{i:0;s:11:\"link-target\";i:1;s:11:\"css-classes\";i:2;s:3:\"xfn\";i:3;s:11:\"description\";i:4;s:15:\"title-attribute\";}'),(22,1,'metaboxhidden_nav-menus','a:2:{i:0;s:12:\"add-post_tag\";i:1;s:15:\"add-post_format\";}'),(23,1,'nav_menu_recently_edited','4'),(25,1,'session_tokens','a:1:{s:64:\"006fc6f4eb9c1a8695f4fdfd6cb03fc16961118d51df7d637c6dab796999c846\";a:4:{s:10:\"expiration\";i:1585650752;s:2:\"ip\";s:10:\"77.191.2.3\";s:2:\"ua\";s:104:\"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.79 Safari/537.36\";s:5:\"login\";i:1585477952;}}');
/*!40000 ALTER TABLE `wp_usermeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_users`
--

DROP TABLE IF EXISTS `wp_users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_users` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_login` varchar(60) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_pass` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_nicename` varchar(50) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_email` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_url` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_registered` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_activation_key` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_status` int(11) NOT NULL DEFAULT '0',
  `display_name` varchar(250) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  KEY `user_login_key` (`user_login`),
  KEY `user_nicename` (`user_nicename`),
  KEY `user_email` (`user_email`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_users`
--

LOCK TABLES `wp_users` WRITE;
/*!40000 ALTER TABLE `wp_users` DISABLE KEYS */;
INSERT INTO `wp_users` VALUES (1,'rike','$P$Btp3fooDwt8KkhZtjDov78ULdoFhjK0','rike','hello@rike.dev','','2019-04-09 10:55:43','',0,'rike');
/*!40000 ALTER TABLE `wp_users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-04-06 18:51:44
